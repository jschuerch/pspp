THERE_BE_DRAGONS_HERE
Instance of HelloMessage did not understand #doYourThing
5 December 2017 4:40:10.94775 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

HelloMessage(Object)>>doesNotUnderstand: #doYourThing
	Receiver: a HelloMessage
	Arguments and temporary variables: 
		aMessage: 	doYourThing
		exception: 	MessageNotUnderstood: HelloMessage>>doYourThing
		resumeValue: 	nil
	Receiver's instance variables: 
a HelloMessage

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'HelloMessage new doYourThing'
		itsSelection: 	a Text for 'HelloMessage new doYourThing'
		itsSelectionString: 	'HelloMessage new doYourThing'
	Receiver's instance variables: 
		ast: 	DoIt
	^ HelloMessage new doYourThing
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelection
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>doIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of HelloMessage class did not understand #doYourThing
5 December 2017 4:40:48.31675 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

HelloMessage class(Object)>>doesNotUnderstand: #doYourThing
	Receiver: HelloMessage
	Arguments and temporary variables: 
		aMessage: 	doYourThing
		exception: 	MessageNotUnderstood: HelloMessage class>>doYourThing
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	0
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#HelloMessage
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Hello
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'HelloMessage  doYourThing'
		itsSelection: 	a Text for 'HelloMessage  doYourThing'
		itsSelectionString: 	'HelloMessage  doYourThing'
	Receiver's instance variables: 
		ast: 	DoIt
	^ HelloMessage doYourThing
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelection
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>doIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


HelpBrowser(Object)>>perform:orSendTo:
	Receiver: a HelpBrowser
	Arguments and temporary variables: 
		selector: 	#doIt
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a StandardWindow(641902336) a PluggableButtonMorp...etc...
		announceur: 	nil
		rootTopic: 	WelcomeHelp
		window: 	a StandardWindow(641902336)
		treeMorph: 	a PluggableTreeMorph(181398528)
		helpTopicCache: 	a HelpTopic
		sourceTextModel: 	a RubScrolledTextModel


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(38653696)'Do it'
	Arguments and temporary variables: 
		evt: 	[(667@369) mouseUp 6120890 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(631.0@358.0) corner: (761.0@375.0)
		owner: 	a MenuMorph(797678336)
		submorphs: 	#()
		fullBounds: 	(631.0@358.0) corner: (761.0@375.0)
		color: 	Color black
		extension: 	a MorphExtension (543724800)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of HelloMessage did not understand #doYourThing
5 December 2017 4:42:08.59675 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

HelloMessage(Object)>>doesNotUnderstand: #doYourThing
	Receiver: a HelloMessage
	Arguments and temporary variables: 
		aMessage: 	doYourThing
		exception: 	MessageNotUnderstood: HelloMessage>>doYourThing
		resumeValue: 	nil
	Receiver's instance variables: 
a HelloMessage

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'HelloMessage new  doYourThing'
		itsSelection: 	a Text for 'HelloMessage new  doYourThing'
		itsSelectionString: 	'HelloMessage new  doYourThing'
	Receiver's instance variables: 
		ast: 	DoIt
	^ HelloMessage new doYourThing
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelection
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>doIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


HelpBrowser(Object)>>perform:orSendTo:
	Receiver: a HelpBrowser
	Arguments and temporary variables: 
		selector: 	#doIt
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a StandardWindow(641902336) a PluggableButtonMorp...etc...
		announceur: 	nil
		rootTopic: 	WelcomeHelp
		window: 	a StandardWindow(641902336)
		treeMorph: 	a PluggableTreeMorph(181398528)
		helpTopicCache: 	a HelpTopic
		sourceTextModel: 	a RubScrolledTextModel


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(6016256)'Do it'
	Arguments and temporary variables: 
		evt: 	[(539@345) mouseUp 6201140 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(529.0@335.0) corner: (659.0@352.0)
		owner: 	a MenuMorph(301947136)
		submorphs: 	#()
		fullBounds: 	(529.0@335.0) corner: (659.0@352.0)
		color: 	Color black
		extension: 	a MorphExtension (493129984)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(6016256)'Do it'
	Arguments and temporary variables: 
		evt: 	[(539@345) mouseUp 6201140 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(529.0@335.0) corner: (659.0@352.0)
		owner: 	a MenuMorph(301947136)
		submorphs: 	#()
		fullBounds: 	(529.0@335.0) corner: (659.0@352.0)
		color: 	Color black
		extension: 	a MorphExtension (493129984)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(6016256)'Do it'
	Arguments and temporary variables: 
		evt: 	[(539@345) mouseUp 6201140 nil]
	Receiver's instance variables: 
		bounds: 	(529.0@335.0) corner: (659.0@352.0)
		owner: 	a MenuMorph(301947136)
		submorphs: 	#()
		fullBounds: 	(529.0@335.0) corner: (659.0@352.0)
		color: 	Color black
		extension: 	a MorphExtension (493129984)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(6016256)'Do it'
	Arguments and temporary variables: 
		anEvent: 	[(539@345) mouseUp 6201140 nil]
	Receiver's instance variables: 
		bounds: 	(529.0@335.0) corner: (659.0@352.0)
		owner: 	a MenuMorph(301947136)
		submorphs: 	#()
		fullBounds: 	(529.0@335.0) corner: (659.0@352.0)
		color: 	Color black
		extension: 	a MorphExtension (493129984)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


MouseButtonEvent>>sentTo:
	Receiver: [(539@345) mouseUp 6201140 nil]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of HelloMessage did not understand #doYourThing
5 December 2017 4:48:46.35675 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

HelloMessage(Object)>>doesNotUnderstand: #doYourThing
	Receiver: a HelloMessage
	Arguments and temporary variables: 
		aMessage: 	doYourThing
		exception: 	MessageNotUnderstood: HelloMessage>>doYourThing
		resumeValue: 	nil
	Receiver's instance variables: 
a HelloMessage

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'HelloMessage new doYourThing'
		itsSelection: 	a Text for 'HelloMessage new doYourThing'
		itsSelectionString: 	'HelloMessage new doYourThing'
	Receiver's instance variables: 
		ast: 	DoIt
	^ HelloMessage new doYourThing
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelection
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>doIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


HelpBrowser(Object)>>perform:orSendTo:
	Receiver: a HelpBrowser
	Arguments and temporary variables: 
		selector: 	#doIt
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a StandardWindow(641902336) a PluggableButtonMorp...etc...
		announceur: 	nil
		rootTopic: 	WelcomeHelp
		window: 	a StandardWindow(641902336)
		treeMorph: 	a PluggableTreeMorph(181398528)
		helpTopicCache: 	a HelpTopic
		sourceTextModel: 	a RubScrolledTextModel


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(1056195328)'Do it'
	Arguments and temporary variables: 
		evt: 	[(543@338) mouseUp 6598906 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(521.0@326.0) corner: (651.0@343.0)
		owner: 	a MenuMorph(735041280)
		submorphs: 	#()
		fullBounds: 	(521.0@326.0) corner: (651.0@343.0)
		color: 	Color black
		extension: 	a MorphExtension (128530176)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(1056195328)'Do it'
	Arguments and temporary variables: 
		evt: 	[(543@338) mouseUp 6598906 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(521.0@326.0) corner: (651.0@343.0)
		owner: 	a MenuMorph(735041280)
		submorphs: 	#()
		fullBounds: 	(521.0@326.0) corner: (651.0@343.0)
		color: 	Color black
		extension: 	a MorphExtension (128530176)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(1056195328)'Do it'
	Arguments and temporary variables: 
		evt: 	[(543@338) mouseUp 6598906 nil]
	Receiver's instance variables: 
		bounds: 	(521.0@326.0) corner: (651.0@343.0)
		owner: 	a MenuMorph(735041280)
		submorphs: 	#()
		fullBounds: 	(521.0@326.0) corner: (651.0@343.0)
		color: 	Color black
		extension: 	a MorphExtension (128530176)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(1056195328)'Do it'
	Arguments and temporary variables: 
		anEvent: 	[(543@338) mouseUp 6598906 nil]
	Receiver's instance variables: 
		bounds: 	(521.0@326.0) corner: (651.0@343.0)
		owner: 	a MenuMorph(735041280)
		submorphs: 	#()
		fullBounds: 	(521.0@326.0) corner: (651.0@343.0)
		color: 	Color black
		extension: 	a MorphExtension (128530176)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


MouseButtonEvent>>sentTo:
	Receiver: [(543@338) mouseUp 6598906 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(1056195328)'Do it'
	Receiver's instance variables: 
		timeStamp: 	6598906
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(543@338)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuITHERE_BE_DRAGONS_HERE
Instance of HelloMessage did not understand #doYourThing
5 December 2017 4:48:53.60675 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

HelloMessage(Object)>>doesNotUnderstand: #doYourThing
	Receiver: a HelloMessage
	Arguments and temporary variables: 
		aMessage: 	doYourThing
		exception: 	MessageNotUnderstood: HelloMessage>>doYourThing
		resumeValue: 	nil
	Receiver's instance variables: 
a HelloMessage

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'HelloMessage new doYourThing.'
		itsSelection: 	a Text for 'HelloMessage new doYourThing.'
		itsSelectionString: 	'HelloMessage new doYourThing.'
	Receiver's instance variables: 
		ast: 	DoIt
	^ HelloMessage new doYourThing
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelection
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>doIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


HelpBrowser(Object)>>perform:orSendTo:
	Receiver: a HelpBrowser
	Arguments and temporary variables: 
		selector: 	#doIt
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a StandardWindow(641902336) a PluggableButtonMorp...etc...
		announceur: 	nil
		rootTopic: 	WelcomeHelp
		window: 	a StandardWindow(641902336)
		treeMorph: 	a PluggableTreeMorph(181398528)
		helpTopicCache: 	a HelpTopic
		sourceTextModel: 	a RubScrolledTextModel


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(567110400)'Do it'
	Arguments and temporary variables: 
		evt: 	[(506@336) mouseUp 6606156 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(493.0@326.0) corner: (623.0@343.0)
		owner: 	a MenuMorph(299237120)
		submorphs: 	#()
		fullBounds: 	(493.0@326.0) corner: (623.0@343.0)
		color: 	Color black
		extension: 	a MorphExtension (177248512)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(567110400)'Do it'
	Arguments and temporary variables: 
		evt: 	[(506@336) mouseUp 6606156 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(493.0@326.0) corner: (623.0@343.0)
		owner: 	a MenuMorph(299237120)
		submorphs: 	#()
		fullBounds: 	(493.0@326.0) corner: (623.0@343.0)
		color: 	Color black
		extension: 	a MorphExtension (177248512)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(567110400)'Do it'
	Arguments and temporary variables: 
		evt: 	[(506@336) mouseUp 6606156 nil]
	Receiver's instance variables: 
		bounds: 	(493.0@326.0) corner: (623.0@343.0)
		owner: 	a MenuMorph(299237120)
		submorphs: 	#()
		fullBounds: 	(493.0@326.0) corner: (623.0@343.0)
		color: 	Color black
		extension: 	a MorphExtension (177248512)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(567110400)'Do it'
	Arguments and temporary variables: 
		anEvent: 	[(506@336) mouseUp 6606156 nil]
	Receiver's instance variables: 
		bounds: 	(493.0@326.0) corner: (623.0@343.0)
		owner: 	a MenuMorph(299237120)
		submorphs: 	#()
		fullBounds: 	(493.0@326.0) corner: (623.0@343.0)
		color: 	Color black
		extension: 	a MorphExtension (177248512)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


MouseButtonEvent>>sentTo:
	Receiver: [(506@336) mouseUp 6606156 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(567110400)'Do it'
	Receiver's instance variables: 
		timeStamp: 	6606156
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(506@336)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(567110400)'Do it'
	Arguments and temporary variables: 
		anEvent: 	[(506@336) mouseUp 6606156 nil]
	Receiver's instance variables: 
		bounds: 	(493.0@326.0) corner: (623.0@343.0)
		owner: 	a MenuMorph(299237120)
		submorphs: 	#()
		fullBounds: 	(493.0@326.0) corner: (623.0@343.0)
		color: 	Color black
		extension: 	a MorphExtension (177248512)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: THERE_BE_DRAGONS_HERE
Error: External module not found
5 December 2017 5:11:36.00625 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

ExternalLibraryFunction(Object)>>error:
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		aString: 	'External module not found'
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


ExternalLibraryFunction(Object)>>externalCallFailed
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		errCode: 	15
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


ExternalLibraryFunction(ExternalFunction)>>invokeWithArguments:
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		argArray: 	#(#[0 0 0 0] #[0 0 0 0] #[0 0 0 0])
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


LGitLibrary>>libgit2_version:minor:rev:
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

FFICalloutAPI>>function:module:
	Receiver: a FFICalloutAPI
	Arguments and temporary variables: 
		functionSignature: 	#(#void #git_libgit2_version #(#LGitWriteBackValueInt #major...etc...
		moduleNameOrLibrary: 	'libgit2.dll'
		sender: 	LGitLibrary>>libgit2_version:minor:rev:
		ffiMethod: 	LGitLibrary>>#libgit2_version:minor:rev:
	Receiver's instance variables: 
		context: 	LGitLibrary>>libgit2_version:minor:rev:
		options: 	#()
		callingConvention: 	#stdcall


LGitLibrary(Object)>>ffiCall:
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		fnSpec: 	#(#void #git_libgit2_version #(#LGitWriteBackValueInt #major #, #LGitWr...etc...
	Receiver's instance variables: 
a LGitLibrary

LGitLibrary>>libgit2_version:minor:rev:
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

LGitLibrary>>version
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

IceLibgitLocalRepository class>>verifyBackendAvailabilityIfNot:
	Receiver: IceLibgitLocalRepository
	Arguments and temporary variables: 
		aBlock: 	[ :requiredVersion :currentVersion | 
^ UIManager default
	alert:
		('T...etc...
		presentVersion: 	nil
		requiredVersion: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#addFilesToIndex:->IceLibgitLocalRepository>>#ad...etc...
		format: 	65539
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#IceLibgitLocalRepository
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Iceberg-Libgit'
		traitComposition: 	TIceRepositoryBackend
		localSelectors: 	a Set(#remotes #changedFilesBetween:and: #canReadFileNamed: #fr...etc...


IceRepositoriesBrowser>>open
	Receiver: an IceRepositoriesBrowser(id=199866112 title=Iceberg repositories pane=a GLMPane(486932224...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	nil
		suspendedAnnouncemets: 	nil
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(486932224 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction)
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMTabulator(id=508552448 title=nil pane=...etc...
		arrangement: 	nil
		lastSynchronization: 	nil
		showSystemRepositories: 	nil


IceRepositoriesBrowser class>>open
	Receiver: IceRepositoriesBrowser
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	IceTool
		methodDict: 	a MethodDictionary(#abort:->IceRepositoriesBrowser>>#abort: #addGlo...etc...
		format: 	65573
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#IceRepositoriesBrowser
		classPool: 	a Dictionary(#SortingStrategy->an IceSortingStrategy )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Iceberg-UI-View'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


[ self open ] in IceRepositoriesBrowser class>>menuCommandOn:
	Receiver: IceRepositoriesBrowser
	Arguments and temporary variables: 
		aBuilder: 	a PragmaMenuAndShortcutRegistration
	Receiver's instance variables: 
		superclass: 	IceTool
		methodDict: 	a MethodDictionary(#abort:->IceRepositoriesBrowser>>#abort: #addGlo...etc...
		format: 	65573
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#IceRepositoriesBrowser
		classPool: 	a Dictionary(#SortingStrategy->an IceSortingStrategy )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Iceberg-UI-View'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


BlockClosure>>cull:
	Receiver: [ self open ]
	Arguments and temporary variables: 
		anArg: 	a WorldState
	Receiver's instance variables: 
		outerContext: 	IceRepositoriesBrowser class>>menuCommandOn:
		startpc: 	85
		numArgs: 	0


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuIteTHERE_BE_DRAGONS_HERE
Instance of HelloMessage did not understand #DoYourThing
5 December 2017 5:19:32.506625 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

HelloMessage(Object)>>doesNotUnderstand: #DoYourThing
	Receiver: a HelloMessage
	Arguments and temporary variables: 
		aMessage: 	DoYourThing
		exception: 	MessageNotUnderstood: HelloMessage>>DoYourThing
		resumeValue: 	nil
	Receiver's instance variables: 
a HelloMessage

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ HelloMessage new DoYourThing
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(27587840)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(27587840)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(489374976)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(27587840)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@50)
		owner: 	a TransformWithLayoutMorph(888789760)
		submorphs: 	an Array(a RubPrimarySelectionMorph(924744960) a RubCursor(850995456...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (442222336) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1068595968)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(850995456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1065250560))
		getMenuPolicy: 	a RubEditingArea(27587840)
		mouseDownPoint: 	(158@42)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(489374976)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(720881408))(a FadingMorp...etc...
		lastStepTime: 	276979
		lastStepMessage: 	nil
		lastCycleTime: 	277000
		alarms: 	a Heap()
		lastAlarmTime: 	276979
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(720881408) a GLMSys...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (712925952) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(720881408))(a FadingMorp...etc...
		lastStepTime: 	276979
		lastStepMessage: 	nil
		lastCycleTime: 	277000
		alarms: 	a Heap()
		lastAlarmTime: 	276979
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	THERE_BE_DRAGONS_HERE
Instance of HelloMessage did not understand #doYourThing
5 December 2017 5:19:42.430625 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

HelloMessage(Object)>>doesNotUnderstand: #doYourThing
	Receiver: a HelloMessage
	Arguments and temporary variables: 
		aMessage: 	doYourThing
		exception: 	MessageNotUnderstood: HelloMessage>>doYourThing
		resumeValue: 	nil
	Receiver's instance variables: 
a HelloMessage

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ HelloMessage new doYourThing
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(27587840)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(27587840)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(489374976)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(27587840)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@50)
		owner: 	a TransformWithLayoutMorph(888789760)
		submorphs: 	an Array(a RubPrimarySelectionMorph(924744960) a RubCursor(850995456...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (442222336) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1068595968)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(850995456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(28947200))
		getMenuPolicy: 	a RubEditingArea(27587840)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(489374976)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(113233152))(a FadingMorp...etc...
		lastStepTime: 	286952
		lastStepMessage: 	nil
		lastCycleTime: 	286974
		alarms: 	a Heap()
		lastAlarmTime: 	286952
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(113233152) a GLMSys...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (712925952) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(113233152))(a FadingMorp...etc...
		lastStepTime: 	286952
		lastStepMessage: 	nil
		lastCycleTime: 	286974
		alarms: 	a Heap()
		lastAlarmTime: 	286952
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(113233152))(a FadingMorp...etc...
		lastStepTime: 	286952
		lastStepMessage: 	nil
		lastCycleTime: 	286974
		alarms: 	a Heap()
		lastAlarmTime: 	286952
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(113233152))(a FadingMorp...etc...
		lastStepTime: 	286952
		lastStepMessage: 	nil
		lastCycleTime: 	286974
		alarms: 	a Heap()
		lastAlarmTime: 	286952
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(113233152) a GLMSys...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (712925952) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(519852800)
	Arguments and temporary variables: 
		aPoint: 	(1004@357)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(27587840)
	Receiver's instance variables: 
		bounds: 	(1002.0@349.0) corner: (1211.0@587.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(354973440)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(1002.0@349.0) corner: (1211.0@587.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (83401984) [other:  (basicColor -> (Color r: 0.8230...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(336800512)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(519852800)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(1002.0@349.0) corner: (1211.0@587.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(354973440)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(1002.0@349.0) corner: (1211.0@587.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (83401984) [other:  (basicColor -> (Color r: 0.8230...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(336800512)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(519852800)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(1002.0@349.0) corner: (1211.0@587.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(354973440)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(1002.0@349.0) corner: (1211.0@587.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (83401984) [other:  (basicColor -> (Color r: 0.8230...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(336800512)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(27587840)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(519852800)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@50)
		owner: 	a TransformWithLayoutMorph(888789760)
		submorphs: 	an Array(a RubPrimarySelectionMorph(924744960) a RubCursor(850995456...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (442222336) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1068595968)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(850995456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(28947200))
		getMenuPolicy: 	a RubEditingArea(27587840)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(27587840)
	Arguments and temporary variables: 
		evt: 	[(191@35) mouseDown yellow 8454031 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@50)
		owner: 	a TransformWithLayoutMorph(888789760)
		submorphs: 	an Array(a RubPrimarySelectionMorph(924744960) a RubCursor(850995456...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (442222336) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1068595968)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(850995456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(28947200))
		getMenuPolicy: 	a RubEditingArea(27587840)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(27587840)
	Arguments and temporary variables: 
		anEvent: 	[(191@35) mouseDown yellow 8454031 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@50)
		owner: 	a TransformWithLayoutMorph(888789760)
		submorphs: 	an Array(a RubPrimarySelectionMorph(924744960) a RubCursor(850995456...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (442222336) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1068595968)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(850995456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(28947200))
		getMenuPolicy: 	a RubEditingArea(27587840)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(191@35) mouseDown yellow 8454031 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(27587840)
	Receiver's instance variables: 
		timeStamp: 	8454031
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(191@35)
		handler: 	a RubEditingArea(27587840)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(27587840)
	Arguments and temporary variables: 
		anEvent: 	[(191@35) mouseDown yellow 8454031 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@50)
		owner: 	a TransformWithLayoutMorph(888789760)
		submorphs: 	an Array(a RubPrimarySelectionMorph(924744960) a RubCursor(850995456...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (442222336) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1068595968)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(850995456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(28947200))
		getMenuPolicy: 	a RubEditingArea(27587840)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(191@35) mouseDown yellow 8454031 nil]
		aMorph: 	a RubEditingArea(27587840)
		globalPt: 	(191@35)
		localEvt: 	[(191@35) mouseDown yellow 8454031 nil]
		index: 	3
		child: 	a RubCursor(850995456)
		morphs: 	an Array(a RubPrimarySelectionMorph(924744960) a RubCursor(850995456))
		handler: 	a RubEditingArea(27587840)
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(489374976)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(191@35) mouseDown yellow 8454031 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(191@35) mouseDown yellow 8454031 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	8454031
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(191@35)
		handler: 	a RubEditingArea(27587840)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(191@35) mouseDown yellow 8454031 nil]
		aMorph: 	a RubEditingArea(27587840)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(191@35) mouseDown yellow 8454031 nil]
		aMorph: 	a RubEditingArea(27587840)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(27587840)
	Arguments and temporary variables: 
		anEvent: 	[(191@35) mouseDown yellow 8454031 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@50)
		owner: 	a TransformWithLayoutMorph(888789760)
		submorphs: 	an Array(a RubPrimarySelectionMorph(924744960) a RubCursor(850995456...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (442222336) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1068595968)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(850995456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(28947200))
		getMenuPolicy: 	a RubEditingArea(27587840)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(1004@357) mouseDown yellow 8454031 nil]
		aMorph: 	a TransformWithLayoutMorph(888789760)
		globalPt: 	(1004@357)
		localEvt: 	[(191@35) mouseDown yellow 8454031 nil]
		index: 	1
		child: 	a RubEditingArea(27587840)
		morphs: 	an Array(a RubEditingArea(27587840))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(489374976)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(1004@357) mouseDown yellow 8454031 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(1004@357) mouseDown yellow 8454031 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	8454031
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(1004@357)
		handler: 	a RubScrolledTextMorph(489374976)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(1004@357) mouseDown yellow 8454031 nil]
		aMorph: 	a TransformWithLayoutMorph(888789760)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(1004@357) mouseDown yellow 8454031 nil]
		aMorph: 	a TransformWithLayoutMorph(888789760)
	Receiver's instance variables: 
		morph: 	nil


TransformWithLayoutMorph(Morph)>>processEvent:using:
	Receiver: a TransformWithLayoutMorph(888789760)
	Arguments and temporary variables: 
		anEvent: 	[(1004@357) mouseDown yellow 8454031 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(813@322) corner: (1393@652)
		owner: 	a RubTextScrollPane(1068595968)
		submorphs: 	an Array(a RubEditingArea(27587840))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (579448576) [other:  (kmDispatcher -> a KMDispatche...etc...
		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-813@ -322))
		smoothing: 	1
		localBounds: 	nil


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(1004@357) mouseDown yellow 8454031 nil]
		aMorph: 	a RubTextScrollPane(1068595968)
		globalPt: 	(1004@357)
		localEvt: 	[(1004@357) mouseDown yellow 8454031 nil]
		index: 	1
		child: 	a TransformWithLayoutMorph(888789760)
		morphs: 	an Array(a TransformWithLayoutMorph(888789760))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(489374976)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(1004@357) mouseDown yellow 8454031 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(1004@357) mouseDown yellow 8454031 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	8454031
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(1004@357)
		handler: 	a RubScrolledTextMorph(489374976)
		wasHandled: 	false
		whichButton: 	2



--- The full stack ---
HelloMessage(Object)>>doesNotUnderstand: #doYourThing
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMScrollPaneBandBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerScrollBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMFoundationBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMSystemWindow(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
WorldMorph(Morph)>>processEvent:using:
WorldMorph(Morph)>>processEvent:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorphTHERE_BE_DRAGONS_HERE
Instance of ThreadSafeTranscript did not understand #show
5 December 2017 5:30:49.0725 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

ThreadSafeTranscript(Object)>>doesNotUnderstand: #show
	Receiver: Transcript
	Arguments and temporary variables: 
		aMessage: 	show
		exception: 	MessageNotUnderstood: ThreadSafeTranscript>>show
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announceur: 	nil
		stream: 	a WriteStream
		accessSemaphore: 	a Mutex
		deferredClear: 	false
		deferredEndEntry: 	false
		stepContents: 	''


[ Transcript show ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ [ Transcript show ] value
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(29696768) a RubCursor(900062464)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
THERE_BE_DRAGONS_HERE
Instance of ThreadSafeTranscript did not understand #show
5 December 2017 5:32:54.9155 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

ThreadSafeTranscript(Object)>>doesNotUnderstand: #show
	Receiver: Transcript
	Arguments and temporary variables: 
		aMessage: 	show
		exception: 	MessageNotUnderstood: ThreadSafeTranscript>>show
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announceur: 	nil
		stream: 	a WriteStream
		accessSemaphore: 	a Mutex
		deferredClear: 	false
		deferredEndEntry: 	false
		stepContents: 	''


[ Transcript show ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ [ Transcript show ] value
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(29696768) a RubCursor(900062464)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(279167744))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(506469120))(a FadingMorp...etc...
		lastStepTime: 	175408
		lastStepMessage: 	nil
		lastCycleTime: 	175430
		alarms: 	a Heap()
		lastAlarmTime: 	175408
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(506469120) a GLMSys...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(506469120))(a FadingMorp...etc...
		lastStepTime: 	175408
		lastStepMessage: 	nil
		lastCycleTime: 	175430
		alarms: 	a Heap()
		lastAlarmTime: 	175408
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(506469120))(a FadingMorp...etc...
		lastStepTime: 	175408
		lastStepMessage: 	nil
		lastCycleTime: 	175430
		alarms: 	a Heap()
		lastAlarmTime: 	175408
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(506469120))(a FadingMorp...etc...
		lastStepTime: 	175408
		lastStepMessage: 	nil
		lastCycleTime: 	175430
		alarms: 	a Heap()
		lastAlarmTime: 	175408
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(506469120) a GLMSys...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(439441664)
	Arguments and temporary variables: 
		aPoint: 	(1017@336)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		bounds: 	(1015.0@328.0) corner: (1224.0@566.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(561754880)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(1015.0@328.0) corner: (1224.0@566.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (763438848) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(403052288)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titlTHERE_BE_DRAGONS_HERE
Error: This block accepts 1 argument, but was called with 0 arguments.
5 December 2017 5:33:37.5035 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

BlockClosure(Object)>>error:
	Receiver: [ :x | Transcript show ]
	Arguments and temporary variables: 
		aString: 	'This block accepts 1 argument, but was called with 0 arguments.'
	Receiver's instance variables: 
		outerContext: 	UndefinedObject>>DoIt
		startpc: 	25
		numArgs: 	1


BlockClosure>>numArgsError:
	Receiver: [ :x | Transcript show ]
	Arguments and temporary variables: 
		numArgsForInvocation: 	0
		printNArgs: 	[ :n | 
n printString , ' argument'
	,
		(n = 1
			ifTrue: [ '' ]
	...etc...
	Receiver's instance variables: 
		outerContext: 	UndefinedObject>>DoIt
		startpc: 	25
		numArgs: 	1


BlockClosure>>value
	Receiver: [ :x | Transcript show ]
	Arguments and temporary variables: 
		newContext: 	nil
		ncv: 	nil
	Receiver's instance variables: 
		outerContext: 	UndefinedObject>>DoIt
		startpc: 	25
		numArgs: 	1


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ [ :x | Transcript show ] value
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(29696768) a RubCursor(900062464)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1052564224))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	(150.0@61.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(551975680))(a SearchMorp...etc...
		lastStepTime: 	218004
		lastStepMessage: 	nil
		lastCycleTime: 	218027
		alarms: 	a Heap()
		lastAlarmTime: 	218004
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(1002325248) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(551975680))(a SearchMorp...etc...
		lastStepTime: 	218004
		lastStepMessage: 	nil
		lastCycleTime: 	218027
		alarms: 	a Heap()
		lastAlarmTime: 	218004
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(551975680))(a SearchMorp...etc...
		lastStepTime: 	218004
		lastStepMessage: 	nil
		lastCycleTime: 	218027
		alarms: 	a Heap()
		lastAlarmTime: 	218004
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(551975680))(a SearchMorp...etc...
		lastStepTime: 	218004
		lastStepMessage: 	nil
		lastCycleTime: 	218027
		alarms: 	a Heap()
		lastAlarmTime: 	218004
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(1002325248) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(20163840)
	Arguments and temporary variables: 
		aPoint: 	(1009@332)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		bounds: 	(1007.0@324.0) corner: (1216.0@562.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(984927488)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(1007.0@324.0) corner: (1216.0@562.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (146579712) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(936296704)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(20163840)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(1007.0@324.0) corner: (1216.0@562.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(984927488)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(1007.0@324.0) corner: (1216.0@562.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (146579712) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(936296704)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(20163840)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(1007.0@324.0) corner: (1216.0@562.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(984927488)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(1007.0@324.0) corner: (1216.0@562.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (146579712) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(936296704)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(20163840)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(29696768) a RubCursor(900062464)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1052564224))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	(150.0@61.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		evt: 	[(106.0@12.0) mouseDown yellow 9288687 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(29696768) a RubCursor(900062464)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1052564224))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	(150.0@61.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		anEvent: 	[(106.0@12.0) mouseDown yellow 9288687 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(29696768) a RubCursor(900062464)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1052564224))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	(150.0@61.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(106.0@12.0) mouseDown yellow 9288687 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		timeStamp: 	9288687
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(106.0@12.0)
		handler: 	a RubEditingArea(449758976)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		anEvent: 	[(106.0@12.0) mouseDown yellow 9288687 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(29696768) a RubCursor(900062464)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1052564224))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	(150.0@61.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(106.0@12.0) mouseDown yellow 9288687 nil]
		aMorph: 	a RubEditingArea(449758976)
		globalPt: 	(106.0@12.0)
		localEvt: 	[(106.0@12.0) mouseDown yellow 9288687 nil]
		index: 	3
		child: 	a RubCursor(900062464)
		morphs: 	an Array(a RubPrimarySelectionMorph(29696768) a RubCursor(900062464))
		handler: 	a RubEditingArea(449758976)
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(766468864)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(106.0@12.0) mouseDown yellow 9288687 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(106.0@12.0) mouseDown yellow 9288687 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	9288687
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(106.0@12.0)
		handler: 	a RubEditingArea(449758976)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(106.0@12.0) mouseDown yellow 9288687 nil]
		aMorph: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(106.0@12.0) mouseDown yellow 9288687 nil]
		aMorph: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		anEvent: 	[(106.0@12.0) mouseDown yellow 9288687 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(29696768) a RubCursor(900062464)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1052564224))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	(150.0@61.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(1009@332) mouseDown yellow 9288687 nil]
		aMorph: 	a TransformWithLayoutMorph(1033099520)
		globalPt: 	(1009@332)
		localEvt: 	[(106.0@12.0) mouseDown yellow 9288687 nil]
		index: 	1
		child: 	a RubEditingArea(449758976)
		morphs: 	an Array(a RubEditingArea(449758976))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(766468864)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(1009@332) mouseDown yellow 9288687 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(1009@332) mouseDown yellow 9288687 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	9288687
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(1009@332)
		handler: 	a RubScrolledTextMorph(766468864)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(1009@332) mouseDown yellow 9288687 nil]
		aMorph: 	a TransformWithLayoutMorph(1033099520)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(1009@332) mouseDown yellow 9288687 nil]
		aMorph: 	a TransformWithLayoutMorph(1033099520)
	Receiver's instance variables: 
		morph: 	nil


TransformWithLayoutMorph(Morph)>>processEvent:using:
	Receiver: a TransformWithLayoutMorph(1033099520)
	Arguments and temporary variables: 
		anEvent: 	[(1009@332) mouseDown yellow 9288687 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(903.0@320.0) corner: (1483.0@650.0)
		owner: 	a RubTextScrollPane(899951872)
		submorphs: 	an Array(a RubEditingArea(449758976))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (743563008) [other:  (kmDispatcher -> a KMDispatche...etc...
		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-903.0@ -320....etc...
		smoothing: 	1
		localBounds: 	nil


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(1009@332) mouseDown yellow 9288687 nil]
		aMorph: 	a RubTextScrollPane(899951872)
		globalPt: 	(1009@332)
		localEvt: 	[(1009@332) mouseDown yellow 9288687 nil]
		index: 	1
		child: 	a TransformWithLayoutMorph(1033099520)
		morphs: 	an Array(a TransformWithLayoutMorph(1033099520))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(766468864)
	Receiver's instance variables: 
		morph: 	nil



--- The full stack ---
BlockClosure(Object)>>error:
BlockClosure>>numArgsError:
BlockClosure>>value
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMScrollPaneBandBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerScrollBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMFoundationBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMSystemWindow(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
WorldMorph(Morph)>>processEvent:using:
WorldMorph(Morph)>>processEvent:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: This block accepts 0 arguments, but was called with 1 argument.
5 December 2017 5:37:00.3195 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

BlockClosure(Object)>>error:
	Receiver: [ Transcript show: 'x' ]
	Arguments and temporary variables: 
		aString: 	'This block accepts 0 arguments, but was called with 1 argument.'
	Receiver's instance variables: 
		outerContext: 	UndefinedObject>>DoIt
		startpc: 	33
		numArgs: 	0


BlockClosure>>numArgsError:
	Receiver: [ Transcript show: 'x' ]
	Arguments and temporary variables: 
		numArgsForInvocation: 	1
		printNArgs: 	[ :n | 
n printString , ' argument'
	,
		(n = 1
			ifTrue: [ '' ]
	...etc...
	Receiver's instance variables: 
		outerContext: 	UndefinedObject>>DoIt
		startpc: 	33
		numArgs: 	0


BlockClosure>>value:
	Receiver: [ Transcript show: 'x' ]
	Arguments and temporary variables: 
		anArg: 	6
		newContext: 	nil
		ncv: 	nil
	Receiver's instance variables: 
		outerContext: 	UndefinedObject>>DoIt
		startpc: 	33
		numArgs: 	0


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ [ Transcript show: 'x' ] value: 6
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


MorphicAlarm(MessageSend)>>value
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	420816
		numArgs: 	0


MorphicAlarm>>value:
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 
		anArgument: 	420828
		nArgs: 	0
	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	420816
		numArgs: 	0


WorldState>>triggerAlarmsBefore:
	Receiver: a WorldState
	Arguments and temporary variables: 
		nowTime: 	420828
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(900062464)))
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(551975680))(a SearchMorp...etc...
		lastStepTime: 	420807
		lastStepMessage: 	nil
		lastCycleTime: 	420828
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(900062464)))
		lastAlarmTime: 	420807
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>runLocalStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		now: 	420828
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(551975680))(a SearchMorp...etc...
		lastStepTime: 	420807
		lastStepMessage: 	nil
		lastCycleTime: 	420828
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(900062464)))
		lastAlarmTime: 	420807
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(551975680))(a SearchMorp...etc...
		lastStepTime: 	420807
		lastStepMessage: 	nil
		lastCycleTime: 	420828
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(900062464)))
		lastAlarmTime: 	420807
		THERE_BE_DRAGONS_HERE
Error: This block accepts 0 arguments, but was called with 1 argument.
5 December 2017 5:39:00.2185 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

BlockClosure(Object)>>error:
	Receiver: [ Transcript show: 'x' ]
	Arguments and temporary variables: 
		aString: 	'This block accepts 0 arguments, but was called with 1 argument.'
	Receiver's instance variables: 
		outerContext: 	UndefinedObject>>DoIt
		startpc: 	33
		numArgs: 	0


BlockClosure>>numArgsError:
	Receiver: [ Transcript show: 'x' ]
	Arguments and temporary variables: 
		numArgsForInvocation: 	1
		printNArgs: 	[ :n | 
n printString , ' argument'
	,
		(n = 1
			ifTrue: [ '' ]
	...etc...
	Receiver's instance variables: 
		outerContext: 	UndefinedObject>>DoIt
		startpc: 	33
		numArgs: 	0


BlockClosure>>value:
	Receiver: [ Transcript show: 'x' ]
	Arguments and temporary variables: 
		anArg: 	4
		newContext: 	nil
		ncv: 	nil
	Receiver's instance variables: 
		outerContext: 	UndefinedObject>>DoIt
		startpc: 	33
		numArgs: 	0


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ [ Transcript show: 'x' ] value: 4
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@50)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(695567616) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(580373248))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(464063232))(a DropList...etc...
		lastStepTime: 	540711
		lastStepMessage: 	nil
		lastCycleTime: 	540734
		alarms: 	a Heap()
		lastAlarmTime: 	540711
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(352729856) a Sy...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(464063232))(a DropList...etc...
		lastStepTime: 	540711
		lastStepMessage: 	nil
		lastCycleTime: 	540734
		alarms: 	a Heap()
		lastAlarmTime: 	540711
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(464063232))(a DropList...etc...
		lastStepTime: 	540711
		lastStepMessage: 	nil
		lastCycleTime: 	540734
		alarms: 	a Heap()
		lastAlarmTime: 	540711
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(464063232))(a DropList...etc...
		lastStepTime: 	540711
		lastStepMessage: 	nil
		lastCycleTime: 	540734
		alarms: 	a Heap()
		lastAlarmTime: 	540711
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(352729856) a Sy...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(712549120)
	Arguments and temporary variables: 
		aPoint: 	(851@263)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		bounds: 	(849.0@255.0) corner: (1058.0@493.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(538814208)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(849.0@255.0) corner: (1058.0@493.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (926561536) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(188249344)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(712549120)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(849.0@255.0) corner: (1058.0@493.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(538814208)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(849.0@255.0) corner: (1058.0@493.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (926561536) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(188249344)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(712549120)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(849.0@255.0) corner: (1058.0@493.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(538814208)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(849.0@255.0) corner: (1058.0@493.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (926561536) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(188249344)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(712549120)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@50)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(695567616) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(580373248))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		evt: 	[(213.0@16.0) mouseDown yellow 9612062 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@50)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(695567616) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(580373248))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		anEvent: 	[(213.0@16.0) mouseDown yellow 9612062 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@50)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(695567616) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(580373248))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(213.0@16.0) mouseDown yellow 9612062 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		timeStamp: 	9612062
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(213.0@16.0)
		handler: 	a RubEditingArea(449758976)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		anEvent: 	[(213.0@16.0) mouseDown yellow 9612062 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@50)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(695567616) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(580373248))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(213.0@16.0) mouseDown yellow 9612062 nil]
		aMorph: 	a RubEditingArea(449758976)
		globalPt: 	(213.0@16.0)
		localEvt: 	[(213.0@16.0) mouseDown yellow 9612062 nil]
		index: 	3
		child: 	a RubCursor(900062464)
		morphs: 	an Array(a RubPrimarySelectionMorph(695567616) a RubCursor(900062464))
		handler: 	a RubEditingArea(449758976)
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(766468864)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(213.0@16.0) mouseDown yellow 9612062 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(213.0@16.0) mouseDown yellow 9612062 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	9612062
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(213.0@16.0)
		handler: 	a RubEditingArea(449758976)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(213.0@16.0) mouseDown yellow 9612062 nil]
		aMorph: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(213.0@16.0) mouseDown yellow 9612062 nil]
		aMorph: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		anEvent: 	[(213.0@16.0) mouseDown yellow 9612062 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@50)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(695567616) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(580373248))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(851@263) mouseDown yellow 9612062 nil]
		aMorph: 	a TransformWithLayoutMorph(1033099520)
		globalPt: 	(851@263)
		localEvt: 	[(213.0@16.0) mouseDown yellow 9612062 nil]
		index: 	1
		child: 	a RubEditingArea(449758976)
		morphs: 	an Array(a RubEditingArea(449758976))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(766468864)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(851@263) mouseDown yellow 9612062 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(851@263) mouseDown yellow 9612062 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	9612062
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(851@263)
		handler: 	a RubScrolledTextMorph(766468864)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(851@263) mouseDown yellow 9612062 nil]
		aMorph: 	a TransformWithLayoutMorph(1033099520)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(851@263) mouseDown yellow 9612062 nil]
		aMorph: 	a TransformWithLayoutMorph(1033099520)
	Receiver's instance variables: 
		morph: 	nil


TransformWithLayoutMorph(Morph)>>processEvent:using:
	Receiver: a TransformWithLayoutMorph(1033099520)
	Arguments and temporary variables: 
		anEvent: 	[(851@263) mouseDown yellow 9612062 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(638.0@247.0) corner: (1218.0@577.0)
		owner: 	a RubTextScrollPane(899951872)
		submorphs: 	an Array(a RubEditingArea(449758976))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (743563008) [other:  (kmDispatcher -> a KMDispatche...etc...
		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-638.0@ -247....etc...
		smoothing: 	1
		localBounds: 	nil


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(851@263) mouseDown yellow 9612062 nil]
		aMorph: 	a RubTextScrollPane(899951872)
		globalPt: 	(851@263)
		localEvt: 	[(851@263) mouseDown yellow 9612062 nil]
		index: 	1
		child: 	a TransformWithLayoutMorph(1033099520)
		morphs: 	an Array(a TransformWithLayoutMorph(1033099520))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(766468864)
	Receiver's instance variables: 
		morph: 	nil



--- The full stack ---
BlockClosure(Object)>>error:
BlockClosure>>numArgsError:
BlockClosure>>value:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMScrollPaneBandBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerScrollBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEveTHERE_BE_DRAGONS_HERE
#show was sent to nil
5 December 2017 5:44:17.6715 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #show
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	show
		exception: 	MessageNotUnderstood: receiver of "show" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ actualProcesses show
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@107)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(186346240) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(892785920))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	(118.0@111.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(464063232))(a DropList...etc...
		lastStepTime: 	858168
		lastStepMessage: 	nil
		lastCycleTime: 	858189
		alarms: 	a Heap()
		lastAlarmTime: 	858168
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(352729856) a Sy...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(464063232))(a DropList...etc...
		lastStepTime: 	858168
		lastStepMessage: 	nil
		lastCycleTime: 	858189
		alarms: 	a Heap()
		lastAlarmTime: 	858168
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(464063232))(a DropList...etc...
		lastStepTime: 	858168
		lastStepMessage: 	nil
		lastCycleTime: 	858189
		alarms: 	a Heap()
		lastAlarmTime: 	858168
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(464063232))(a DropList...etc...
		lastStepTime: 	858168
		lastStepMessage: 	nil
		lastCycleTime: 	858189
		alarms: 	a Heap()
		lastAlarmTime: 	858168
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(352729856) a Sy...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(596573440)
	Arguments and temporary variables: 
		aPoint: 	(781@319)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubTextScrollPane(899951872)
	Receiver's instance variables: 
		bounds: 	(779.0@311.0) corner: (988.0@549.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(194182400)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(779.0@311.0) corner: (988.0@549.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (586322176) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(53932288)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(596573440)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(779.0@311.0) corner: (988.0@549.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(194182400)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(779.0@311.0) corner: (988.0@549.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (586322176) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(53932288)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(596573440)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(779.0@311.0) corner: (988.0@549.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(194182400)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(779.0@311.0) corner: (988.0@549.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (586322176) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(53932288)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(596573440)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@107)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(186346240) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(892785920))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	(118.0@111.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		evt: 	[(133.0@93.0) mouseDown yellow 9929390 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@107)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(186346240) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(892785920))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	(118.0@111.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubTextScrollPane>>mouseDown:
	Receiver: a RubTextScrollPane(899951872)
	Arguments and temporary variables: 
		anEvent: 	[(781@319) mouseDown yellow 9929390 nil]
	Receiver's instance variables: 
		bounds: 	(648.0@226.0) corner: (1228.0@556.0)
		owner: 	a RubScrolledTextMorph(766468864)
		submorphs: 	an Array(a TransformWithLayoutMorph(1033099520))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (942030080) [other:  (announcer -> an Announcer) (k...etc...
		scroller: 	a TransformWithLayoutMorph(1033099520)
		hScrollbar: 	a RubScrollBar(377972992)
		vScrollbar: 	a RubScrollBar(338134784)
		drawFocusBorder: 	true


RubTextScrollPane(Morph)>>handleMouseDown:
	Receiver: a RubTextScrollPane(899951872)
	Arguments and temporary variables: 
		anEvent: 	[(781@319) mouseDown yellow 9929390 nil]
	Receiver's instance variables: 
		bounds: 	(648.0@226.0) corner: (1228.0@556.0)
		owner: 	a RubScrolledTextMorph(766468864)
		submorphs: 	an Array(a TransformWithLayoutMorph(1033099520))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (942030080) [other:  (announcer -> an Announcer) (k...etc...
		scroller: 	a TransformWithLayoutMorph(1033099520)
		hScrollbar: 	a RubScrollBar(377972992)
		vScrollbar: 	a RubScrollBar(338134784)
		drawFocusBorder: 	true


NECMenuMorph>>mouseDown:
	Receiver: a NECMenuMorph(590791936)
	Arguments and temporary variables: 
		evt: 	[(781@319) mouseDown yellow 9929390 nil]
	Receiver's instance variables: 
		bounds: 	(758.800048828125@328.0) corner: (1008.800048828125@727.0)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	(758.800048828125@328.0) corner: (1008.800048828125@727.0)
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (580524800)
		selected: 	1
		firstVisible: 	1
		titleStringMorph: 	nil
		controller: 	a NECController
		context: 	a NECContext
		pageHeight: 	20
		detailMorph: 	nil
		detailPosition: 	(1007.800048828125@329.0)


NECMenuMorph(Morph)>>handleMouseDown:
	Receiver: a NECMenuMorph(590791936)
	Arguments and temporary variables: 
		anEvent: 	[(781@319) mouseDown yellow 9929390 nil]
	Receiver's instance variables: 
		bounds: 	(758.800048828125@328.0) corner: (1008.800048828125@727.0)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	(758.800048828125@328.0) corner: (1008.800048828125@727.0)
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (580524800)
		selected: 	1
		firstVisible: 	1
		titleStringMorph: 	nil
		controller: 	a NECController
		context: 	a NECContext
		pageHeight: 	20
		detailMorph: 	nil
		detailPosition: 	(1007.800048828125@329.0)


MouseButtonEvent>>sentTo:
	Receiver: [(781@319) mouseDown yellow 9929390 nil]
	Arguments and temporary variables: 
		anObject: 	a NECMenuMorph(590791936)
	Receiver's instance variables: 
		timeStamp: 	9929390
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(781@319)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	2


NECMenuMorph(Morph)>>handleEvent:
	Receiver: a NECMenuMorph(590791936)
	Arguments and temporary variables: 
		anEvent: 	[(781@319) mouseDown yellow 9929390 nil]
	Receiver's instance variables: 
		bounds: 	(758.800048828125@328.0) corner: (1008.800048828125@727.0)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	(758.800048828125@328.0) corner: (1008.800048828125@727.0)
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (580524800)
		selected: 	1
		firstVisible: 	1
		titleStringMorph: 	nil
		controller: 	a NECController
		context: 	a NECContext
		pageHeight: 	20
		detailMorph: 	nil
		detailPosition: 	(1007.800048828125@329.0)


NECMenuMorph(Morph)>>handleFocusEvent:
	Receiver: a NECMenuMorph(590791936)
	Arguments and temporary variables: 
		anEvent: 	[(781@319) mouseDown yellow 9929390 nil]
	Receiver's instance variables: 
		bounds: 	(758.800048828125@328.0) corner: (1008.800048828125@727.0)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	(758.800048828125@328.0) corner: (1008.800048828125@727.0)
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (580524800)
		selected: 	1
		firstVisible: 	1
		titleStringMorph: 	nil
		controller: 	a NECController
		context: 	a NECContext
		pageHeight: 	20
		detailMorph: 	nil
		detailPosition: 	(1007.800048828125@329.0)


[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(781@319) mouseDown yellow 9929390 nil]
		focusHolder: 	a NECMenuMorph(590791936)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(805@337) corner: (821@353)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(805@337) corner: (821@353)
		color: 	Color blue
		extension: 	a MorphExtension (407454976)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(805@337) mouseOver 9930250 nil]
		targetOffset: 	(21.0@3.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 9930250 805 337 0 0 1 1)
		lastKeyScanCode: 	87
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


BlockClosure>>on:do:
	Receiver: [ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (an...etc...
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
ActiveWorld := priorWorld.
ActiveEvent := priorEvent.
A...etc...
	Receiver's instance variables: 
		outerContext: 	HandMorph>>sendFocusEvent:to:clear:
		startpc: 	67
		numArgs: 	0


WorldMorph(PasteUpMorph)>>becomeActiveDuring:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		aBlock: 	[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	ha...etc...
		priorWorld: 	a WorldMorph(562956288) [world]
		priorHand: 	a HandMorph(58125568)
		priorEvent: 	[(781@319) mouseOver 9929203 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(352729856) a Sy...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		result: 	nil
		anEvent: 	[(781@319) mouseDown yellow 9929390 nil]
		focusHolder: 	a NECMenuMorph(590791936)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(805@337) corner: (821@353)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(805@337) corner: (821@353)
		color: 	Color blue
		extension: 	a MorphExtension (407454976)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(805@337) mouseOver 9930250 nil]
		targetOffset: 	(21.0@3.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 9930250 805 337 0 0 1 1)
		lastKeyScanCode: 	87
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(781@319) mouseDown yellow 9929390 nil]
		focusHolder: 	a NECMenuMorph(590791936)
		aBlock: 	[ self mouseFocus: nil ]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(805@337) corner: (821@353)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(805@337) corner: (821@353)
		color: 	Color blue
		extension: 	a MorphExtension (407454976)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(805@337) mouseOver 9930250 nil]
		targetOffset: 	(21.0@3.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 9930250 805 337 0 0 1 1)
		lastKeyScanCode: 	87
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendMouseEvent:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(781@319) mouseDown yellow 9929390 nil]
	Receiver's instance variables: 
		bounds: 	(805@337) corner: (821@353)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(805@337) corner: (821@353)
		color: 	Color blue
		extension: 	a MorphExtension (407454976)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(805@337) mouseOver 9930250 nil]
		targetOffset: 	(21.0@3.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 9930250 805 337 0 0 1 1)
		lastKeyScanCode: 	87
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>handleEvent:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(781@319) mouseDown yellow 9929390 nil]
		evt: 	[(781@319) mouseDown yellow 9929390 nil]
	Receiver's instance variables: 
		bounds: 	(805@337) corner: (821@353)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(805@337) corner: (821@353)
		color: 	Color blue
		extension: 	a MorphExtension (407454976)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(805@337) mouseOver 9930250 nil]
		targetOffset: 	(21.0@3.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 9930250 805 337 0 0 1 1)
		lastKeyScanCode: 	87
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>processEventsFromQueue:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#| was sent to nil
5 December 2017 5:48:09.7295 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #|
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	| 5
		exception: 	MessageNotUnderstood: receiver of "|" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

[ :x | (y | x) + 2 ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		x: 	5
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'b value: 5'
		itsSelection: 	a Text for 'b value: 5'
		itsSelectionString: 	'b value: 5'
	Receiver's instance variables: 
		ast: 	DoIt
	^ b value: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1004571904))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(551975680))(a SearchMorp...etc...
		lastStepTime: 	1090201
		lastStepMessage: 	nil
		lastCycleTime: 	1090223
		alarms: 	a Heap()
		lastAlarmTime: 	1090201
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(352729856) a St...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(551975680))(a SearchMorp...etc...
		lastStepTime: 	1090201
		lastStepMessage: 	nil
		lastCycleTime: 	1090223
		alarms: 	a Heap()
		lastAlarmTime: 	1090201
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(551975680))(a SearchMorp...etc...
		lastStepTime: 	1090201
		lastStepMessage: 	nil
		lastCycleTime: 	1090223
		alarms: 	a Heap()
		lastAlarmTime: 	1090201
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(551975680))(a SearchMorp...etc...
		lastStepTime: 	1090201
		lastStepMessage: 	nil
		lastCycleTime: 	1090223
		alarms: 	a Heap()
		lastAlarmTime: 	1090201
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(352729856) a St...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(659520768)
	Arguments and temporary variables: 
		aPoint: 	(704@298)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		bounds: 	(702.0@290.0) corner: (911.0@528.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(737049856)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(702.0@290.0) corner: (911.0@528.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (326238976) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(405696256)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(659520768)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(702.0@290.0) corner: (911.0@528.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(737049856)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(702.0@290.0) corner: (911.0@528.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (326238976) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(405696256)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(659520768)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(702.0@290.0) corner: (911.0@528.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(737049856)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(702.0@290.0) corner: (911.0@528.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (326238976) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(405696256)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowBTHERE_BE_DRAGONS_HERE
#| was sent to nil
5 December 2017 5:48:15.2665 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #|
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	| 5
		exception: 	MessageNotUnderstood: receiver of "|" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

[ :x | (y | x) + 2 ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		x: 	5
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'b := [:x | y| x+2].
b value: 5'
		itsSelection: 	a Text for 'b := [:x | y| x+2].
b value: 5'
		itsSelectionString: 	'b := [:x | y| x+2].
b value: 5'
	Receiver's instance variables: 
		ast: 	DoIt
	b := [ :x | (y | x) + 2 ].
	^ b value: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(52390656))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(551975680))(a SearchMorp...etc...
		lastStepTime: 	1095764
		lastStepMessage: 	nil
		lastCycleTime: 	1095787
		alarms: 	a Heap()
		lastAlarmTime: 	1095764
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(352729856) a St...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(551975680))(a SearchMorp...etc...
		lastStepTime: 	1095764
		lastStepMessage: 	nil
		lastCycleTime: 	1095787
		alarms: 	a Heap()
		lastAlarmTime: 	1095764
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(551975680))(a SearchMorp...etc...
		lastStepTime: 	1095764
		lastStepMessage: 	nil
		lastCycleTime: 	1095787
		alarms: 	a Heap()
		lastAlarmTime: 	1095764
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(551975680))(a SearchMorp...etc...
		lastStepTime: 	1095764
		lastStepMessage: 	nil
		lastCycleTime: 	1095787
		alarms: 	a Heap()
		lastAlarmTime: 	1095764
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(352729856) a St...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(149918976)
	Arguments and temporary variables: 
		aPoint: 	(664@280)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		bounds: 	(662.0@272.0) corner: (871.0@510.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(785028864)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(662.0@272.0) corner: (871.0@510.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (64148736) [other:  (basicColor -> (Color r: 0.8230...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(701956864)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(149918976)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(662.0@272.0) corner: (871.0@510.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(785028864)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(662.0@272.0) corner: (871.0@510.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (64148736) [other:  (basicColor -> (Color r: 0.8230...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(701956864)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(149918976)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(662.0@272.0) corner: (871.0@510.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(785028864)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(662.0@272.0) corner: (871.0@510.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (64148736) [other:  (basicColor -> (Color r: 0.8230...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(701956864)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(149918976)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(52390656))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		evt: 	[(16.0@54.0) mouseDown yellow 10166906 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(52390656))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		anEvent: 	[(16.0@54.0) mouseDown yellow 10166906 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(52390656))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(16.0@54.0) mouseDown yellow 10166906 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		timeStamp: 	10166906
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(16.0@54.0)
		handler: 	a RubEditingArea(449758976)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		anEvent: 	[(16.0@54.0) mouseDown yellow 10166906 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(52390656))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(16.0@54.0) mouseDown yellow 10166906 nil]
		aMorph: 	a RubEditingArea(449758976)
		globalPt: 	(16.0@54.0)
		localEvt: 	[(16.0@54.0) mouseDown yellow 10166906 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(372452096)
		morphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464))
		handler: 	a RubEditingArea(449758976)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(766468864)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(16.0@54.0) mouseDown yellow 10166906 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(16.0@54.0) mouseDown yellow 10166906 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	10166906
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(16.0@54.0)
		handler: 	a RubEditingArea(449758976)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(16.0@54.0) mouseDown yellow 10166906 nil]
		aMorph: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(16.0@54.0) mouseDown yellow 10166906 nil]
		aMorph: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		anEvent: 	[(16.0@54.0) mouseDown yellow 10166906 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(52390656))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(664@280) mouseDown yellow 10166906 nil]
		aMorph: 	a TransformWithLayoutMorph(1033099520)
		globalPt: 	(664@280)
		localEvt: 	[(16.0@54.0) mouseDown yellow 10166906 nil]
		index: 	1
		child: 	a RubEditingArea(449758976)
		morphs: 	an Array(a RubEditingArea(449758976))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(766468864)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(664@280) mouseDown yellow 10166906 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(664@280) mouseDown yellow 10166906 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	10166906
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(664@280)
		handler: 	a RubScrolledTextMorph(766468864)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(664@280) mouseDown yellow 10166906 nil]
		aMorph: 	a TransformWithLayoutMorph(1033099520)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(664@280) mouseDown yellow 10166906 nil]
		aMorph: 	a TransformWithLayoutMorph(1033099520)
	Receiver's instance variables: 
		morph: 	nil


TransformWithLayoutMorph(Morph)>>processEvent:using:
	Receiver: a TransformWithLayoutMorph(1033099520)
	Arguments and temporary variables: 
		anEvent: 	[(664@280) mouseDown yellow 10166906 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(648.0@226.0) corner: (1228.0@556.0)
		owner: 	a RubTextScrollPane(899951872)
		submorphs: 	an Array(a RubEditingArea(449758976))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (743563008) [other:  (kmDispatcher -> a KMDispatche...etc...
		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-648.0@ -226....etc...
		smoothing: 	1
		localBounds: 	nil


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(664@280) mouseDown yellow 10166906 nil]
		aMorph: 	a RubTextScrollPane(899951872)
		globalPt: 	(664@280)
		localEvt: 	[(664@280) mouseDown yellow 10166906 nil]
		index: 	1
		child: 	a TransformWithLayoutMorph(1033099520)
		morphs: 	an Array(a TransformWithLayoutMorph(1033099520))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(766468864)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(664@280) mouseDown yellow 10166906 nil]
	Receiver's instance variables: 
		morph: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #|
[ :x | (y | x) + 2 ] in UndefinedObject>>DoIt
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMScrollPaneBandBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerScrollBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMFoundationBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMSystemWindow(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
WorldMorph(Morph)>>processEvent:using:
WorldMorph(Morph)>>processEvent:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#| was sent to nil
5 December 2017 5:48:26.5105 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #|
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	| 5
		exception: 	MessageNotUnderstood: receiver of "|" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

[ :x | (y | x) + 2 ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		b: 	[ :x | (y | x) + 2 ]
		x: 	5
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		b: 	[ :x | (y | x) + 2 ]
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'|b|
b := [:x | y| x+2].
b value: 5'
		itsSelection: 	a Text for '|b|
b := [:x | y| x+2].
b value: 5'
		itsSelectionString: 	'|b|
b := [:x | y| x+2].
b value: 5'
	Receiver's instance variables: 
		ast: 	DoIt
	| b |
	b := [ :x | (y | x) + 2 ].
	^ b value: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@202)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(897990400))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(464063232))(a DropList...etc...
		lastStepTime: 	1106973
		lastStepMessage: 	nil
		lastCycleTime: 	1106994
		alarms: 	a Heap()
		lastAlarmTime: 	1106973
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(352729856) a St...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(464063232))(a DropList...etc...
		lastStepTime: 	1106973
		lastStepMessage: 	nil
		lastCycleTime: 	1106994
		alarms: 	a Heap()
		lastAlarmTime: 	1106973
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(464063232))(a DropList...etc...
		lastStepTime: 	1106973
		lastStepMessage: 	nil
		lastCycleTime: 	1106994
		alarms: 	a Heap()
		lastAlarmTime: 	1106973
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(464063232))(a DropList...etc...
		lastStepTime: 	1106973
		lastStepMessage: 	nil
		lastCycleTime: 	1106994
		alarms: 	a Heap()
		lastAlarmTime: 	1106973
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(352729856) a St...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(990084864)
	Arguments and temporary variables: 
		aPoint: 	(679@274)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		bounds: 	(677.0@266.0) corner: (886.0@504.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(652405504)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(677.0@266.0) corner: (886.0@504.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (12263680) [other:  (basicColor -> (Color r: 0.8230...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(911791872)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(990084864)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(677.0@266.0) corner: (886.0@504.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(652405504)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(677.0@266.0) corner: (886.0@504.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (12263680) [other:  (basicColor -> (Color r: 0.8230...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(911791872)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(990084864)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(677.0@266.0) corner: (886.0@504.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(652405504)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(677.0@266.0) corner: (886.0@504.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (12263680) [other:  (basicColor -> (Color r: 0.8230...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(911791872)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(990084864)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@202)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editTHERE_BE_DRAGONS_HERE
#| was sent to nil
5 December 2017 5:48:45.8465 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #|
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	| 5
		exception: 	MessageNotUnderstood: receiver of "|" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

[ :x | (y | x) + 2 ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		x: 	5
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ b value: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449758976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@202)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(63208192))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(766468864)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(464063232))(a DropList...etc...
		lastStepTime: 	1126349
		lastStepMessage: 	nil
		lastCycleTime: 	1126370
		alarms: 	a Heap()
		lastAlarmTime: 	1126349
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(352729856) a St...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(464063232))(a DropList...etc...
		lastStepTime: 	1126349
		lastStepMessage: 	nil
		lastCycleTime: 	1126370
		alarms: 	a Heap()
		lastAlarmTime: 	1126349
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(464063232))(a DropList...etc...
		lastStepTime: 	1126349
		lastStepMessage: 	nil
		lastCycleTime: 	1126370
		alarms: 	a Heap()
		lastAlarmTime: 	1126349
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(464063232))(a DropList...etc...
		lastStepTime: 	1126349
		lastStepMessage: 	nil
		lastCycleTime: 	1126370
		alarms: 	a Heap()
		lastAlarmTime: 	1126349
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(352729856) a St...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (224947968) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(636887808)
	Arguments and temporary variables: 
		aPoint: 	(751@272)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		bounds: 	(749.0@264.0) corner: (958.0@502.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(236201728)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(749.0@264.0) corner: (958.0@502.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (411032320) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(355333376)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(636887808)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(749.0@264.0) corner: (958.0@502.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(236201728)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(749.0@264.0) corner: (958.0@502.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (411032320) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(355333376)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(636887808)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(749.0@264.0) corner: (958.0@502.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(236201728)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(749.0@264.0) corner: (958.0@502.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (411032320) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(355333376)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(636887808)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@202)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(63208192))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		evt: 	[(103.0@46.0) mouseDown yellow 10197296 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@202)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(63208192))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		anEvent: 	[(103.0@46.0) mouseDown yellow 10197296 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@202)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(63208192))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(103.0@46.0) mouseDown yellow 10197296 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		timeStamp: 	10197296
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(103.0@46.0)
		handler: 	a RubEditingArea(449758976)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		anEvent: 	[(103.0@46.0) mouseDown yellow 10197296 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@202)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(63208192))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(103.0@46.0) mouseDown yellow 10197296 nil]
		aMorph: 	a RubEditingArea(449758976)
		globalPt: 	(103.0@46.0)
		localEvt: 	[(103.0@46.0) mouseDown yellow 10197296 nil]
		index: 	3
		child: 	a RubCursor(900062464)
		morphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464))
		handler: 	a RubEditingArea(449758976)
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(766468864)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(103.0@46.0) mouseDown yellow 10197296 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(103.0@46.0) mouseDown yellow 10197296 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	10197296
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(103.0@46.0)
		handler: 	a RubEditingArea(449758976)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(103.0@46.0) mouseDown yellow 10197296 nil]
		aMorph: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(103.0@46.0) mouseDown yellow 10197296 nil]
		aMorph: 	a RubEditingArea(449758976)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(449758976)
	Arguments and temporary variables: 
		anEvent: 	[(103.0@46.0) mouseDown yellow 10197296 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@202)
		owner: 	a TransformWithLayoutMorph(1033099520)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372452096) a RubCursor(900062464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (476629248) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(899951872)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(900062464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(63208192))
		getMenuPolicy: 	a RubEditingArea(449758976)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(751@272) mouseDown yellow 10197296 nil]
		aMorph: 	a TransformWithLayoutMorph(1033099520)
		globalPt: 	(751@272)
		localEvt: 	[(103.0@46.0) mouseDown yellow 10197296 nil]
		index: 	1
		child: 	a RubEditingArea(449758976)
		morphs: 	an Array(a RubEditingArea(449758976))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(766468864)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(751@272) mouseDown yellow 10197296 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(751@272) mouseDown yellow 10197296 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	10197296
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(751@272)
		handler: 	a RubScrolledTextMorph(766468864)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(751@272) mouseDown yellow 10197296 nil]
		aMorph: 	a TransformWithLayoutMorph(1033099520)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(751@272) mouseDown yellow 10197296 nil]
		aMorph: 	a TransformWithLayoutMorph(1033099520)
	Receiver's instance variables: 
		morph: 	nil


TransformWithLayoutMorph(Morph)>>processEvent:using:
	Receiver: a TransformWithLayoutMorph(1033099520)
	Arguments and temporary variables: 
		anEvent: 	[(751@272) mouseDown yellow 10197296 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(648.0@226.0) corner: (1228.0@556.0)
		owner: 	a RubTextScrollPane(899951872)
		submorphs: 	an Array(a RubEditingArea(449758976))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (743563008) [other:  (kmDispatcher -> a KMDispatche...etc...
		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-648.0@ -226....etc...
		smoothing: 	1
		localBounds: 	nil


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(751@272) mouseDown yellow 10197296 nil]
		aMorph: 	a RubTextScrollPane(899951872)
		globalPt: 	(751@272)
		localEvt: 	[(751@272) mouseDown yellow 10197296 nil]
		index: 	1
		child: 	a TransformWithLayoutMorph(1033099520)
		morphs: 	an Array(a TransformWithLayoutMorph(1033099520))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(766468864)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(751@272) mouseDown yellow 10197296 nil]
	Receiver's instance variables: 
		morph: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #|
[ :x | (y | x) + 2 ] in UndefinedObject>>DoIt
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMScrollPaneBandBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerScrollBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMFoundationBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMSystemWindow(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
WorldMorph(Morph)>>processEvent:using:
WorldMorph(Morph)>>processEvent:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: External module not found
6 December 2017 1:06:56.906625 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

ExternalLibraryFunction(Object)>>error:
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		aString: 	'External module not found'
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


ExternalLibraryFunction(Object)>>externalCallFailed
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		errCode: 	15
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


ExternalLibraryFunction(ExternalFunction)>>invokeWithArguments:
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		argArray: 	#(#[0 0 0 0] #[0 0 0 0] #[0 0 0 0])
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


LGitLibrary>>libgit2_version:minor:rev:
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

FFICalloutAPI>>function:module:
	Receiver: a FFICalloutAPI
	Arguments and temporary variables: 
		functionSignature: 	#(#void #git_libgit2_version #(#LGitWriteBackValueInt #major...etc...
		moduleNameOrLibrary: 	'libgit2.dll'
		sender: 	LGitLibrary>>libgit2_version:minor:rev:
		ffiMethod: 	LGitLibrary>>#libgit2_version:minor:rev:
	Receiver's instance variables: 
		context: 	LGitLibrary>>libgit2_version:minor:rev:
		options: 	#()
		callingConvention: 	#stdcall


LGitLibrary(Object)>>ffiCall:
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		fnSpec: 	#(#void #git_libgit2_version #(#LGitWriteBackValueInt #major #, #LGitWr...etc...
	Receiver's instance variables: 
a LGitLibrary

LGitLibrary>>libgit2_version:minor:rev:
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

LGitLibrary>>version
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

IceLibgitLocalRepository class>>verifyBackendAvailabilityIfNot:
	Receiver: IceLibgitLocalRepository
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#new was sent to nil
6 December 2017 5:00:06.052625 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'pleButtonMorph new
	label: ''Open Transcript'';
	target: [Tran...etc...
		itsSelection: 	a Text for 'pleButtonMorph new
	label: ''Open Transcript'';
	targ...etc...
		itsSelectionString: 	'pleButtonMorph new
	label: ''Open Transcript'';
	target: [...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	^ pleButtonMorph new
		label: 'Open Transcript';
		target: [ Transcr...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(920047872)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(920047872)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(533990656)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(920047872)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@202)
		owner: 	a TransformWithLayoutMorph(290190592)
		submorphs: 	an Array(a RubCursor(261697280) a RubPrimarySelectionMorph(411027200...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (849207552) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(110999296)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(261697280)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(456615168))
		getMenuPolicy: 	a RubEditingArea(920047872)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(533990656)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Error: External module not found
7 December 2017 10:42:05.888375 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

ExternalLibraryFunctionTHERE_BE_DRAGONS_HERE
Error: External module not found
7 December 2017 10:43:40.154125 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

ExternalLibraryFunction(Object)>>error:
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		aString: 	'External module not found'
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


ExternalLibraryFunction(Object)>>externalCallFailed
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		errCode: 	15
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


ExternalLibraryFunction(ExternalFunction)>>invokeWithArguments:
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		argArray: 	#(#[0 0 0 0] #[0 0 0 0] #[0 0 0 0])
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


LGitLibrary>>libgit2_version:minor:rev:
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

FFICalloutAPI>>function:module:
	Receiver: a FFICalloutAPI
	Arguments and temporary variables: 
		functionSignature: 	#(#void #git_libgit2_version #(#LGitWriteBackValueInt #major...etc...
		moduleNameOrLibrary: 	'libgit2.dll'
		sender: 	LGitLibrary>>libgit2_version:minor:rev:
		ffiMethod: 	LGitLibrary>>#libgit2_version:minor:rev:
	Receiver's instance variables: 
		context: 	LGitLibrary>>libgit2_version:minor:rev:
		options: 	#()
		callingConvention: 	#stdcall


LGitLibrary(Object)>>ffiCall:
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		fnSpec: 	#(#void #git_libgit2_version #(#LGitWriteBackValueInt #major #, #LGitWr...etc...
	Receiver's instance variables: 
a LGitLibrary

LGitLibrary>>libgit2_version:minor:rev:
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

LGitLibrary>>version
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

IceLibgitLocalRepository class>>verifyBackendAvailabilityIfNot:
	Receiver: IceLibgitLocalRepository
	Arguments and temporary variables: 
		aBlock: 	[ :requiredVersion :currentVersion | 
^ UIManager default
	alert:
		('T...etc...
		presentVersion: 	nil
		requiredVersion: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#addFilesToIndex:->IceLibgitLocalRepository>>#ad...etc...
		format: 	65539
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#IceLibgitLocalRepository
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Iceberg-Libgit'
		traitComposition: 	TIceRepositoryBackend
		localSelectors: 	a Set(#remotes #changedFilesBetween:and: #canReadFileNamed: #fr...etc...


IceRepositoriesBrowser>>open
	Receiver: an IceRepositoriesBrowser(id=332654848 title=Iceberg repositories pane=a GLMPane(103278361...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	nil
		suspendedAnnouncemets: 	nil
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(1032783616 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction)
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMTabulator(id=93434112 title=nil pane=a...etc...
		arrangement: 	nil
		lastSynchronization: 	nil
		showSystemRepositories: 	nil


IceRepositoriesBrowser class>>open
	Receiver: IceRepositoriesBrowser
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	IceTool
		methodDict: 	a MethodDictionary(#abort:->IceRepositoriesBrowser>>#abort: #addGlo...etc...
		format: 	65573
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#IceRepositoriesBrowser
		classPool: 	a Dictionary(#SortingStrategy->an IceSortingStrategy )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Iceberg-UI-View'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil

THERE_BE_DRAGONS_HERE
Error: External module not found
7 December 2017 10:45:33.099125 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

ExternalLibraryFunction(Object)>>error:
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		aString: 	'External module not found'
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


ExternalLibraryFunction(Object)>>externalCallFailed
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		errCode: 	15
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


ExternalLibraryFunction(ExternalFunction)>>invokeWithArguments:
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		argArray: 	#(#[0 0 0 0] #[0 0 0 0] #[0 0 0 0])
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


LGitLibrary>>libgit2_version:minor:rev:
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

LGitLibrary>>version
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

IceLibgitLocalRepository class>>verifyBackendAvailabilityIfNot:
	Receiver: IceLibgitLocalRepository
	Arguments and temporary variables: 
		aBlock: 	[ :requiredVersion :currentVersion | 
^ UIManager default
	alert:
		('T...etc...
		presentVersion: 	nil
		requiredVersion: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#addFilesToIndex:->IceLibgitLocalRepository>>#ad...etc...
		format: 	65539
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#IceLibgitLocalRepository
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Iceberg-Libgit'
		traitComposition: 	TIceRepositoryBackend
		localSelectors: 	a Set(#remotes #changedFilesBetween:and: #canReadFileNamed: #fr...etc...


IceRepositoriesBrowser>>open
	Receiver: an IceRepositoriesBrowser(id=977661184 title=Iceberg repositories pane=a GLMPane(83075840 ...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	nil
		suspendedAnnouncemets: 	nil
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(83075840 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction)
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMTabulator(id=782273792 title=nil pane=...etc...
		arrangement: 	nil
		lastSynchronization: 	nil
		showSystemRepositories: 	nil


IceRepositoriesBrowser class>>open
	Receiver: IceRepositoriesBrowser
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	IceTool
		methodDict: 	a MethodDictionary(#abort:->IceRepositoriesBrowser>>#abort: #addGlo...etc...
		format: 	65573
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#IceRepositoriesBrowser
		classPool: 	a Dictionary(#SortingStrategy->an IceSortingStrategy )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Iceberg-UI-View'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


[ self open ] in IceRepositoriesBrowser class>>menuCommandOn:
	Receiver: IceRepositoriesBrowser
	Arguments and temporary variables: 
		aBuilder: 	a PragmaMenuAndShortcutRegistration
	Receiver's instance variables: 
		superclass: 	IceTool
		methodDict: 	a MethodDictionary(#abort:->IceRepositoriesBrowser>>#abort: #addGlo...etc...
		format: 	65573
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#IceRepositoriesBrowser
		classPool: 	a Dictionary(#SortingStrategy->an IceSortingStrategy )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Iceberg-UI-View'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


BlockClosure>>cull:
	Receiver: [ self open ]
	Arguments and temporary variables: 
		anArg: 	a WorldState
	Receiver's instance variables: 
		outerContext: 	IceRepositoriesBrowser class>>menuCommandOn:
		startpc: 	85
		numArgs: 	0


THERE_BE_DRAGONS_HERE
Error: External module not found
7 December 2017 10:47:29.495125 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

ExternalLibraryFunction(Object)>>error:
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		aString: 	'External module not found'
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


ExternalLibraryFunction(Object)>>externalCallFailed
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		errCode: 	15
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


ExternalLibraryFunction(ExternalFunction)>>invokeWithArguments:
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		argArray: 	#(#[0 0 0 0] #[0 0 0 0] #[0 0 0 0])
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


LGitLibrary>>libgit2_version:minor:rev:
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

FFICalloutAPI>>function:module:
	Receiver: a FFICalloutAPI
	Arguments and temporary variables: 
		functionSignature: 	#(#void #git_libgit2_version #(#LGitWriteBackValueInt #major...etc...
		moduleNameOrLibrary: 	'libgit2.dll'
		sender: 	LGitLibrary>>libgit2_version:minor:rev:
		ffiMethod: 	LGitLibrary>>#libgit2_version:minor:rev:
	Receiver's instance variables: 
		context: 	LGitLibrary>>libgit2_version:minor:rev:
		options: 	#()
		callingConvention: 	#stdcall


LGitLibrary(Object)>>ffiCall:
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		fnSpec: 	#(#void #git_libgit2_version #(#LGitWriteBackValueInt #major #, #LGitWr...etc...
	Receiver's instance variables: 
a LGitLibrary

LGitLibrary>>libgit2_version:minor:rev:
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

LGitLibrary>>version
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

IceLibgitLocalRepository class>>verifyBackendAvailabilityIfNot:
	Receiver: IceLibgitLocalRepository
	Arguments and temporary variables: 
		aBlock: 	[ :requiredVersion :currentVersion | 
^ UIManager default
	alert:
		('T...etc...
		presentVersion: 	nil
		requiredVersion: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#addFilesToIndex:->IceLibgitLocalRepository>>#ad...etc...
		format: 	65539
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#IceLibgitLocalRepository
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Iceberg-Libgit'
		traitComposition: 	TIceRepositoryBackend
		localSelectors: 	a Set(#remotes #changedFilesBetween:and: #canReadFileNamed: #fr...etc...


IceRepositoriesBrowser>>open
	Receiver: an IceRepositoriesBrowser(id=332654848 title=Iceberg repositories pane=a GLMPane(103278361...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	nil
		suspendedAnnouncemets: 	nil
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(1032783616 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction)
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMTabulator(id=93434112 title=nil pane=a...etc...
		arrangement: 	nil
		lastSynchronization: 	nil
		showSystemRepositories: 	nil


IceRepositoriesBrowser class>>open
	Receiver: IceRepositoriesBrowser
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Error: External module not found
7 December 2017 10:48:23.326375 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

ExternalLibraryFunction(Object)>>error:
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		aString: 	'External module not found'
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


ExternalLibraryFunction(Object)>>externalCallFailed
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		errCode: 	15
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


ExternalLibraryFunction(ExternalFunction)>>invokeWithArguments:
	Receiver: <apicall: void 'git_libgit2_version' (long* long* long*) module: 'libgit2.dll'>
	Arguments and temporary variables: 
		argArray: 	#(#[0 0 0 0] #[0 0 0 0] #[0 0 0 0])
	Receiver's instance variables: 
		handle: 	@ 16r00000000
		flags: 	1
		argTypes: 	an Array(void long* long* long*)
		name: 	'git_libgit2_version'
		module: 	'libgit2.dll'
		errorCodeName: 	nil


LGitLibrary>>libgit2_version:minor:rev:
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

FFICalloutAPI>>function:module:
	Receiver: a FFICalloutAPI
	Arguments and temporary variables: 
		functionSignature: 	#(#void #git_libgit2_version #(#LGitWriteBackValueInt #major...etc...
		moduleNameOrLibrary: 	'libgit2.dll'
		sender: 	LGitLibrary>>libgit2_version:minor:rev:
		ffiMethod: 	LGitLibrary>>#libgit2_version:minor:rev:
	Receiver's instance variables: 
		context: 	LGitLibrary>>libgit2_version:minor:rev:
		options: 	#()
		callingConvention: 	#stdcall


LGitLibrary(Object)>>ffiCall:
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		fnSpec: 	#(#void #git_libgit2_version #(#LGitWriteBackValueInt #major #, #LGitWr...etc...
	Receiver's instance variables: 
a LGitLibrary

LGitLibrary>>libgit2_version:minor:rev:
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

LGitLibrary>>version
	Receiver: a LGitLibrary
	Arguments and temporary variables: 
		major: 	a LGitWriteBackValueInt
		minor: 	a LGitWriteBackValueInt
		rev: 	a LGitWriteBackValueInt
	Receiver's instance variables: 
a LGitLibrary

IceLibgitLocalRepository class>>verifyBackendAvailabilityIfNot:
	Receiver: IceLibgitLocalRepository
	Arguments and temporary variables: 
		aBlock: 	[ :requiredVersion :currentVersion | 
^ UIManager default
	alert:
		('T...etc...
		presentVersion: 	nil
		requiredVersion: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#addFilesToIndex:->IceLibgitLocalRepository>>#ad...etc...
		format: 	65539
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#IceLibgitLocalRepository
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Iceberg-Libgit'
		traitComposition: 	TIceRepositoryBackend
		localSelectors: 	a Set(#remotes #changedFilesBetween:and: #canReadFileNamed: #fr...etc...


IceRepositoriesBrowser>>open
	Receiver: an IceRepositoriesBrowser(id=332654848 title=Iceberg repositories pane=a GLMPane(103278361...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	nil
		suspendedAnnouncemets: 	nil
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(1032783616 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction)
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMTabulator(id=93434112 title=nil pane=a...etc...
		arrangement: 	nil
		lastSynchronization: 	nil
		showSystemRepositories: 	nil


IceRepositoriesBrowser class>>open
	Receiver: IceRepositoriesBrowser
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	IceTool
		methodDict: 	a MethodDictionary(#abort:->IceRepositoriesBrowser>>#abort: #addGlo...etc...
		format: 	65573
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#IceRepositoriesBrowser
		classPool: 	a Dictionary(#SortingStrategy->an IceSortingStrategy )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Iceberg-UI-View'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


[ self open ] in IceRepositoriesBrowser class>>menuCommandOn:
	Receiver: IceRepositoriesBrowser
	Arguments and temporary variables: 
		aBuilder: 	a PragmaMenuAndShortcutRegistration
	Receiver's instance variables: 
		superclass: 	IceTool
		methodDict: 	a MethodDictionary(#abort:->IceRepositoriesBrowser>>#abort: #addGlo...etc...
		format: 	65573
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#IceRepositoriesBrowser
		classPool: 	a Dictionary(#SortingStrategy->an IceSortingStrategy )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Iceberg-UI-View'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


BlockClosure>>cull:
	Receiver: [ self open ]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of Date class did not understand #duration
7 December 2017 1:12:23.237875 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

Date class(Object)>>doesNotUnderstand: #duration
	Receiver: Date
	Arguments and temporary variables: 
		aMessage: 	duration
		exception: 	MessageNotUnderstood: Date class>>duration
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Timespan
		methodDict: 	a MethodDictionary(#addDays:->Date>>#addDays: #addMonths:->Date>>#a...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Date
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection(ChronologyConstants)
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Chronology'
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'Date  duration'
		itsSelection: 	a Text for 'Date  duration'
		itsSelectionString: 	'Date  duration'
	Receiver's instance variables: 
		ast: 	DoIt
	^ Date duration
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelection
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>doIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


HelpBrowser(Object)>>perform:orSendTo:
	Receiver: a HelpBrowser
	Arguments and temporary variables: 
		selector: 	#doIt
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a StandardWindow(641902336) a PluggableButtonMorp...etc...
		announceur: 	nil
		rootTopic: 	WelcomeHelp
		window: 	a StandardWindow(641902336)
		treeMorph: 	a PluggableTreeMorph(181398528)
		helpTopicCache: 	a HelpTopic
		sourceTextModel: 	a RubScrolledTextModel


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(400175360)'Do it'
	Arguments and temporary variables: 
		evt: 	[(375@365) mouseUp 5051812 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(339.0@355.0) corner: (469.0@372.0)
		owner: 	a MenuMorph(558466304)
		submorphs: 	#()
		fullBounds: 	(339.0@355.0) corner: (469.0@372.0)
		color: 	Color black
		extension: 	a MorphExtension (763266816)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(400175360)'Do it'
	Arguments and temporary variables: 
		evt: 	[(375@365) mouseUp 5051812 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(339.0@355.0) corner: (469.0@372.0)
		owner: 	a MenuMorph(558466304)
		submorphs: 	#()
		fullBounds: 	(339.0@355.0) corner: (469.0@372.0)
		color: 	Color black
		extension: 	a MorphExtension (763266816)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(400175360)'Do it'
	Arguments and temporary variables: 
		evt: 	[(375@365) mouseUp 5051812 nil]
	Receiver's instance variables: 
		bounds: 	(339.0@355.0) corner: (469.0@372.0)
		owner: 	a MenuMorph(558466304)
		submorphs: 	#()
		fullBounds: 	(339.0@355.0) corner: (469.0@372.0)
		color: 	Color black
		extension: 	a MorphExtension (763266816)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(400175360)'Do it'
	Arguments and temporary variables: 
		anEvent: 	[(375@365) mouseUp 5051812 nil]
	Receiver's instance variables: 
		bounds: 	(339.0@355.0) corner: (469.0@372.0)
		owner: 	a MenuMorph(558466304)
		submorphs: 	#()
		fullBounds: 	(339.0@355.0) corner: (469.0@372.0)
		color: 	Color black
		extension: 	a MorphExtension (763266816)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


MouseButtonEvent>>sentTo:
	Receiver: [(375@365) mouseUp 5051812 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(400175360)'Do it'
	Receiver's instance variables: 
		timeStamp: 	5051812
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(375@365)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(400175360)'Do it'
	Arguments and temporary variables: 
		anEvent: 	[(375@365) mouseUp 5051812 nil]
	Receiver's instance variables: 
		bounds: 	(339.0@355.0) corner: (469.0@372.0)
		owner: 	a MenuMorph(558466304)
		submorphs: 	#()
		fullBounds: 	(339.0@355.0) corner: (469.0@372.0)
		color: 	Color black
		extension: 	a MorphExtension (763266816)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(375@365) mouseUp 5051812 nil]
		aMorph: 	a ToggleMenuItemMorph(400175360)'Do it'
		localEvt: 	nil
		index: 	1
		child: 	nil
		morphs: 	#()
		inside: 	true
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(400175360)'Do it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(375@365) mouseUp 5051812 nil]
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(400175360)'Do it'


MouseButtonEvent>>sentTo:
	Receiver: [(375@365) mouseUp 5051812 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	5051812
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(375@365)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEventTHERE_BE_DRAGONS_HERE
Instance of Date class did not understand #duration
7 December 2017 1:12:28.562875 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

Date class(Object)>>doesNotUnderstand: #duration
	Receiver: Date
	Arguments and temporary variables: 
		aMessage: 	duration
		exception: 	MessageNotUnderstood: Date class>>duration
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Timespan
		methodDict: 	a MethodDictionary(#addDays:->Date>>#addDays: #addMonths:->Date>>#a...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Date
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection(ChronologyConstants)
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Chronology'
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'Date  duration'
		itsSelection: 	a Text for 'Date  duration'
		itsSelectionString: 	'Date  duration'
	Receiver's instance variables: 
		ast: 	DoIt
	^ Date duration
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | 
printString := [ result printString ]
	on: Error
	do: [ '<...etc...
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
printString := [ result printString ]
	on: Error
	do: [ '<...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>printIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		printString: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(202511104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


HelpBrowser(Object)>>perform:orSendTo:
	Receiver: a HelpBrowser
	Arguments and temporary variables: 
		selector: 	#printIt
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a StandardWindow(641902336) a PluggableButtonMorp...etc...
		announceur: 	nil
		rootTopic: 	WelcomeHelp
		window: 	a StandardWindow(641902336)
		treeMorph: 	a PluggableTreeMorph(181398528)
		helpTopicCache: 	a HelpTopic
		sourceTextModel: 	a RubScrolledTextModel


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(64028928)'Print it'
	Arguments and temporary variables: 
		evt: 	[(352@371) mouseUp 5057140 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(337.0@367.0) corner: (467.0@384.0)
		owner: 	a MenuMorph(747280640)
		submorphs: 	#()
		fullBounds: 	(337.0@367.0) corner: (467.0@384.0)
		color: 	Color black
		extension: 	a MorphExtension (913724672)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(64028928)'Print it'
	Arguments and temporary variables: 
		evt: 	[(352@371) mouseUp 5057140 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(337.0@367.0) corner: (467.0@384.0)
		owner: 	a MenuMorph(747280640)
		submorphs: 	#()
		fullBounds: 	(337.0@367.0) corner: (467.0@384.0)
		color: 	Color black
		extension: 	a MorphExtension (913724672)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(64028928)'Print it'
	Arguments and temporary variables: 
		evt: 	[(352@371) mouseUp 5057140 nil]
	Receiver's instance variables: 
		bounds: 	(337.0@367.0) corner: (467.0@384.0)
		owner: 	a MenuMorph(747280640)
		submorphs: 	#()
		fullBounds: 	(337.0@367.0) corner: (467.0@384.0)
		color: 	Color black
		extension: 	a MorphExtension (913724672)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(64028928)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(352@371) mouseUp 5057140 nil]
	Receiver's instance variables: 
		bounds: 	(337.0@367.0) corner: (467.0@384.0)
		owner: 	a MenuMorph(747280640)
		submorphs: 	#()
		fullBounds: 	(337.0@367.0) corner: (467.0@384.0)
		color: 	Color black
		extension: 	a MorphExtension (913724672)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MouseButtonEvent>>sentTo:
	Receiver: [(352@371) mouseUp 5057140 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(64028928)'Print it'
	Receiver's instance variables: 
		timeStamp: 	5057140
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(352@371)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(64028928)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(352@371) mouseUp 5057140 nil]
	Receiver's instance variables: 
		bounds: 	(337.0@367.0) corner: (467.0@384.0)
		owner: 	a MenuMorph(747280640)
		submorphs: 	#()
		fullBounds: 	(337.0@367.0) corner: (467.0@384.0)
		color: 	Color black
		extension: 	a MorphExtension (913724672)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(352@371) mouseUp 5057140 nil]
		aMorph: 	a ToggleMenuItemMorph(64028928)'Print it'
		localEvt: 	nil
		index: 	1
		child: 	nil
		morphs: 	#()
		inside: 	true
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(64028928)'Print it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(352@371) mouseUp 5057140 nil]
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(64028928)'Print it'


MouseButtonEvent>>sentTo:
	Receiver: [(352@371) mouseUp 5057140 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	5057140
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(352@371)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(352@371) mouseUp 5057140 nil]
		aMorph: 	a ToggleMenuItemMorph(64028928)'Print it'
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(64028928)'Print it'


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(352@371) mouseUp 5057140 nil]
		aMorph: 	a ToggleMenuItemMorph(64028928)'Print it'
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(64028928)'Print it'


ToggleMenuItemMorph(Morph)>>processEvent:using:
	Receiver: a ToggleMenuItemMorph(64028928)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(352@371) mouseUp 5057140 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(337.0@367.0) corner: (467.0@384.0)
		owner: 	a MenuMorph(747280640)
		submorphs: 	#()
		fullBounds: 	(337.0@367.0) corner: (467.0@384.0)
		color: 	Color black
		extension: 	a MorphExtension (913724672)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a HelpBrowser
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(352@371) mouseUp 5057140 nil]
		aMorph: 	a MenuMorph(747280640)
		localEvt: 	[(352@371) mouseUp 5057140 nil]
		index: 	2
		child: 	a ToggleMenuItemMorph(64028928)'Print it'
		morphs: 	an Array(a ToggleMenuItemMorph(205458688)'Do it' a ToggleMenuItemMorph(...etc...
		inside: 	false
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(64028928)'Print it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(352@371) mouseUp 5057140 nil]
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(64028928)'Print it'


MouseButtonEvent>>sentTo:
	Receiver: [(352@371) mouseUp 5057140 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	5057140
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(352@371)
		handler: 	nil
		wasHandled: 	false
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(352@371) mouseUp 5057140 nil]
		aMorph: 	a MenuMorph(747280640)
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(64028928)'Print it'


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(352@371) mouseUp 5057140 nil]
		aMorph: 	a MenuMorph(747280640)
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(64028928)'Print it'


MenuMorph(Morph)>>processEvent:using:
	Receiver: a MenuMorph(747280640)
	Arguments and temporary variables: 
		anEvent: 	[(352@371) mouseUp 5057140 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(332.0@344.0) corner: (472.0@408.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(205458688)'Do it' a ToggleMenuItemMor...etc...
		fullBounds: 	(332.0@344.0) corner: (472.0@408.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (900877568) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(64028928)'Print it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph(Morph)>>processEvent:
	Receiver: a MenuMorph(747280640)
	Arguments and temporary variables: 
		anEvent: 	[(352@371) mouseUp 5057140 nil]
	Receiver's instance variables: 
		bounds: 	(332.0@344.0) corner: (472.0@408.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(205458688)'Do it' a ToggleMenuItemMor...etc...
		fullBounds: 	(332.0@344.0) corner: (472.0@408.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (900877568) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(64028928)'Print it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>handleFocusEvent:
	Receiver: a MenuMorph(747280640)
	Arguments and temporary variables: 
		evt: 	[(352@371) mouseUp 5057140 nil]
	Receiver's instance variables: 
		bounds: 	(332.0@344.0) corner: (472.0@408.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(205458688)'Do it' a ToggleMenuItemMor...etc...
		fullBounds: 	(332.0@344.0) corner: (472.0@408.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (900877568) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(64028928)'Print it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(352@371) mouseUp 5057140 nil]
		focusHolder: 	a MenuMorph(747280640)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(352@371) corner: (368@387)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(352@371) corner: (368@387)
		color: 	Color blue
		extension: 	a MorphExtension (52752128)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(352@371) mouseUp 5057140 nil]
		targetOffset: 	(15.0@3.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 5057140 352 371 0 0 1 1)
		lastKeyScanCode: 	78
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


BlockClosure>>on:do:
	Receiver: [ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (an...etc...
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
ActiveWorld := priorWorld.
ActiveEvent := priorEvent.
A...etc...
	Receiver's instance variables: 
		outerContext: 	HandMorph>>sendFocusEvent:to:clear:
		startpc: 	67
		numArgs: 	0


WorldMorph(PasteUpMorph)>>becomeActiveDuring:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		aBlock: 	[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	ha...etc...
		priorWorld: 	a WorldMorph(562956288) [world]
		priorHand: 	a HandMorph(58125568)
		priorEvent: 	[(352@371) mouseOver red 5057000 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a StandardWindow(641902336) a GLM...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (812800768) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		boTHERE_BE_DRAGONS_HERE
Instance of SmalltalkImage class did not understand #version
7 December 2017 1:26:35.334875 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

SmalltalkImage class(Object)>>doesNotUnderstand: #version
	Receiver: SmalltalkImage
	Arguments and temporary variables: 
		aMessage: 	version
		exception: 	MessageNotUnderstood: SmalltalkImage class>>version
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(size 202)
		format: 	65541
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#SmalltalkImage
		classPool: 	a Dictionary(#CompilerClass->OpalCompiler #LastImagePath->'C:\tmp\Ph...etc...
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'System-Support'
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ SmalltalkImage version
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(389142272)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(389142272)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(482443008)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(389142272)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(154328832)
		submorphs: 	an Array(a RubPrimarySelectionMorph(631707392) a RubCursor(609776384...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1022336768) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(46282496)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(609776384)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(400081152))
		getMenuPolicy: 	a RubEditingArea(389142272)
		mouseDownPoint: 	(189.0@35.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(482443008)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#new was sent to nil
7 December 2017 1:52:41.709875 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ MessagePublisher new publish
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(389142272)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(389142272)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(482443008)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(389142272)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@183)
		owner: 	a TransformWithLayoutMorph(154328832)
		submorphs: 	an Array(a RubPrimarySelectionMorph(707639040) a RubCursor(609776384...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1022336768) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(46282496)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(609776384)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(230728960))
		getMenuPolicy: 	a RubEditingArea(389142272)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(482443008)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2819577
		lastStepMessage: 	nil
		lastCycleTime: 	4350767
		alarms: 	a Heap()
		lastAlarmTime: 	4350744
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(724638976) a Sy...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (812800768) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2819577
		lastStepMessage: 	nil
		lastCycleTime: 	4350767
		alarms: 	a Heap()
		lastAlarmTime: 	4350744
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2819577
		lastStepMessage: 	nil
		lastCycleTime: 	4350767
		alarms: 	a Heap()
		lastAlarmTime: 	4350744
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2819577
		lastStepMessage: 	nil
		lastCycleTime: 	4350767
		alarms: 	a Heap()
		lastAlarmTime: 	4350744
		menuBuilTHERE_BE_DRAGONS_HERE
#new was sent to nil
7 December 2017 1:52:46.937875 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ MessagePublisher new publish
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(389142272)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(389142272)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(482443008)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(389142272)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@183)
		owner: 	a TransformWithLayoutMorph(154328832)
		submorphs: 	an Array(a RubPrimarySelectionMorph(707639040) a RubCursor(609776384...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1022336768) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(46282496)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(609776384)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(199187712))
		getMenuPolicy: 	a RubEditingArea(389142272)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(482443008)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2819577
		lastStepMessage: 	nil
		lastCycleTime: 	4356025
		alarms: 	a Heap()
		lastAlarmTime: 	4356002
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(724638976) a Sy...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (812800768) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2819577
		lastStepMessage: 	nil
		lastCycleTime: 	4356025
		alarms: 	a Heap()
		lastAlarmTime: 	4356002
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2819577
		lastStepMessage: 	nil
		lastCycleTime: 	4356025
		alarms: 	a Heap()
		lastAlarmTime: 	4356002
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2819577
		lastStepMessage: 	nil
		lastCycleTime: 	4356025
		alarms: 	a Heap()
		lastAlarmTime: 	4356002
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(724638976) a Sy...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (812800768) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(722962688)
	Arguments and temporary variables: 
		aPoint: 	(279@289)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(389142272)
	Receiver's instance variables: 
		bounds: 	(277.0@281.0) corner: (486.0@519.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(162530048)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(277.0@281.0) corner: (486.0@519.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (151365376) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(750972672)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(722962688)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(277.0@281.0) corner: (486.0@519.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(162530048)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(277.0@281.0) corner: (486.0@519.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (151365376) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(750972672)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(722962688)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(277.0@281.0) corner: (486.0@519.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(162530048)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(277.0@281.0) corner: (486.0@519.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (151365376) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(750972672)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(389142272)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(722962688)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@183)
		owner: 	a TransformWithLayoutMorph(154328832)
		submorphs: 	an Array(a RubPrimarySelectionMorph(707639040) a RubCursor(609776384...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1022336768) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(46282496)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(609776384)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(199187712))
		getMenuPolicy: 	a RubEditingArea(389142272)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(389142272)
	Arguments and temporary variables: 
		evt: 	[(77.0@132.0) mouseDown yellow 7474671 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@183)
		owner: 	a TransformWithLayoutMorph(154328832)
		submorphs: 	an Array(a RubPrimarySelectionMorph(707639040) a RubCursor(609776384...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1022336768) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(46282496)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(609776384)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(199187712))
		getMenuPolicy: 	a RubEditingArea(389142272)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(389142272)
	Arguments and temporary variables: 
		anEvent: 	[(77.0@132.0) mouseDown yellow 7474671 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@183)
		owner: 	a TransformWithLayoutMorph(154328832)
		submorphs: 	an Array(a RubPrimarySelectionMorph(707639040) a RubCursor(609776384...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1022336768) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(46282496)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(609776384)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(199187712))
		getMenuPolicy: 	a RubEditingArea(389142272)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(77.0@132.0) mouseDown yellow 7474671 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(389142272)
	Receiver's instance variables: 
		timeStamp: 	7474671
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(77.0@132.0)
		handler: 	a RubEditingArea(389142272)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(389142272)
	Arguments and temporary variables: 
		anEvent: 	[(77.0@132.0) mouseDown yellow 7474671 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@183)
		owner: 	a TransformWithLayoutMorph(154328832)
		submorphs: 	an Array(a RubPrimarySelectionMorph(707639040) a RubCursor(609776384...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1022336768) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(46282496)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(609776384)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(199187712))
		getMenuPolicy: 	a RubEditingArea(389142272)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(77.0@132.0) mouseDown yellow 7474671 nil]
		aMorph: 	a RubEditingArea(389142272)
		globalPt: 	(77.0@132.0)
		localEvt: 	[(77.0@132.0) mouseDown yellow 7474671 nil]
		index: 	3
		child: 	a RubCursor(609776384)
		morphs: 	an Array(a RubPrimarySelectionMorph(707639040) a RubCursor(609776384))
		handler: 	a RubEditingArea(389142272)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(482443008)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(77.0@132.0) mouseDown yellow 7474671 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(77.0@132.0) mouseDown yellow 7474671 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	7474671
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(77.0@132.0)
		handler: 	a RubEditingArea(389142272)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(77.0@132.0) mouseDown yellow 7474671 nil]
		aMorph: 	a RubEditingArea(389142272)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(77.0@132.0) mouseDown yellow 7474671 nil]
		aMorph: 	a RubEditingArea(389142272)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(389142272)
	Arguments and temporary variables: 
		anEvent: 	[(77.0@132.0) mouseDown yellow 7474671 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@183)
		owner: 	a TransformWithLayoutMorph(154328832)
		submorphs: 	an Array(a RubPrimarySelectionMorph(707639040) a RubCursor(609776384...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1022336768) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(46282496)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(609776384)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(199187712))
		getMenuPolicy: 	a RubEditingArea(389142272)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(279@289) mouseDown yellow 7474671 nil]
		aMorph: 	a TransformWithLayoutMorph(154328832)
		globalPt: 	(279@289)
		localEvt: 	[(77.0@132.0) mouseDown yellow 7474671 nil]
		index: 	1
		child: 	a RubEditingArea(389142272)
		morphs: 	an Array(a RubEditingArea(389142272))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(482443008)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(279@289) mouseDown yellow 7474671 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(279@289) mouseDown yellow 7474671 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	7474671
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(279@289)
		handler: 	a RubScrolledTextMorph(482443008)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(279@289) mouseDown yellow 7474671 nil]
		aMorph: 	a TransformWithLayoutMorph(154328832)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(279@289) mouseDown yellow 7474671 nil]
		aMorph: 	a TransformWithLayoutMorph(154328832)
	Receiver's instance variables: 
		morph: 	nil


TransformWithLayoutMorph(Morph)>>processEvent:using:
	Receiver: a TransformWithLayoutMorph(154328832)
	Arguments and temporary variables: 
		anEvent: 	[(279@289) mouseDown yellow 7474671 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(202.0@157.0) corner: (782.0@487.0)
		owner: 	a RubTextScrollPane(46282496)
		submorphs: 	an Array(a RubEditingArea(389142272))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (392224512) [other:  (kmDispatcher -> a KMDispatche...etc...
		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-202.0@ -157....etc...
		smoothing: 	1
		localBounds: 	nil


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(279@289) mouseDown yellow 7474671 nil]
		aMorph: 	a RubTextScrollPane(46282496)
		globalPt: 	(279@289)
		localEvt: 	[(279@289) mouseDown yellow 7474671 nil]
		index: 	1
		child: 	a TransformWithLayoutMorph(154328832)
		morphs: 	an Array(a TransformWithLayoutMorph(154328832))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(482443008)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(279@289) mouseDown yellow 7474671 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(279@289) mouseDown yellow 7474671 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	7474671
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(279@289)
		handler: 	a RubScrolledTextMorph(482443008)
		wasHandled: 	false
		whichButton: 	2



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMScrollPaneBandBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerScrollBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMFoundationBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMSystemWindow(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
WorldMorph(Morph)>>processEvent:using:
WorldMorph(Morph)>>processEvent:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#new was sent to nil
7 December 2017 1:53:03.450875 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ MessagePublisher new publish
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(389142272)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(389142272)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(482443008)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(389142272)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@183)
		owner: 	a TransformWithLayoutMorph(154328832)
		submorphs: 	an Array(a RubPrimarySelectionMorph(707639040) a RubCursor(609776384...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1022336768) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(46282496)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(609776384)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(201903872))
		getMenuPolicy: 	a RubEditingArea(389142272)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(482443008)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(375826176))(a FadingMorp...etc...
		lastStepTime: 	4372513
		lastStepMessage: 	nil
		lastCycleTime: 	4372500
		alarms: 	a Heap()
		lastAlarmTime: 	4372478
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(375826176) a GLMSys...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (812800768) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(375826176))(a FadingMorp...etc...
		lastStepTime: 	4372513
		lastStepMessage: 	nil
		lastCycleTime: 	4372500
		alarms: 	a Heap()
		lastAlarmTime: 	4372478
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(375826176))(a FadingMorp...etc...
		lastStepTime: 	4372513
		lastStepMessage: 	nil
		lastCycleTime: 	4372500
		alarms: 	a Heap()
		lastAlarmTime: 	4372478
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(375826176))(a FadingMorp...etc...
		lastStepTime: 	4372513
		lastStepMessage: 	nil
		lastCycleTime: 	4372500
		alarms: 	a Heap()
		lastAlarmTime: 	4372478
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(375826176) a GLMSys...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (812800768) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(752781568)
	Arguments and temporary variables: 
		aPoint: 	(279@286)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(389142272)
	Receiver's instance variables: 
		bounds: 	(277.0@278.0) corner: (486.0@516.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(661717760)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(277.0@278.0) corner: (486.0@516.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (763820288) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(636136704)'Inspect it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(752781568)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(277.0@278.0) corner: (486.0@516.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(661717760)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(277.0@278.0) corner: (486.0@516.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (763820288) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(636136704)'Inspect it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(752781568)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(277.0@278.0) corner: (486.0@516.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(661717760)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(277.0@278.0) corner: (486.0@516.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (763820288) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(636136704)'Inspect it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(389142272)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(752781568)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@183)
		owner: 	a TransformWithLayoutMorph(154328832)
		submorphs: 	an Array(a RubPrimarySelectionMorph(707639040) a RubCursor(609776384...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1022336768) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(46282496)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(609776384)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(201903872))
		getMenuPolicy: 	a RubEditingArea(389142272)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(389142272)
	Arguments and temporary variables: 
		evt: 	[(77.0@129.0) mouseDown yellow 7488953 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@183)
		owner: 	a TransformWithLayoutMorph(154328832)
		submorphs: 	an Array(a RubPrimarySelectionMorph(707639040) a RubCursor(609776384...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1022336768) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(46282496)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(609776384)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(201903872))
THERE_BE_DRAGONS_HERE
Pharo cannot write to the changes file named C:\tmp\Pharo6.1\Pharo6.1.changes.

Please check that you have write permission for this file.

You won't be able to save this image correctly until you fix this.
7 December 2017 3:15:24.479 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

StartupUIManager>>inform:
	Receiver: a StartupUIManager
	Arguments and temporary variables: 
		arg1: 	'Pharo cannot write to the changes file named C:\tmp\Pharo6.1\Pharo6.1.ch...etc...
		tmp1: 	nil
	Receiver's instance variables: 
		doNotQuitOnRestart: 	false
		uiManager: 	nil


PharoFilesOpener(Object)>>inform:
	Receiver: a PharoFilesOpener
	Arguments and temporary variables: 
		arg1: 	'Pharo cannot write to the changes file named C:\tmp\Pharo6.1\Pharo6.1.ch...etc...
	Receiver's instance variables: 
		shouldInformAboutReadOnlyChanges: 	true


PharoFilesOpener>>inform:withRef:
	Receiver: a PharoFilesOpener
	Arguments and temporary variables: 
		arg1: 	'Pharo cannot write to &fileRef.

Please check that you have write permis...etc...
		arg2: 	'the changes file named C:\tmp\Pharo6.1\Pharo6.1.changes'
	Receiver's instance variables: 
		shouldInformAboutReadOnlyChanges: 	true


PharoFilesOpener>>inform:withChangesRef:
	Receiver: a PharoFilesOpener
	Arguments and temporary variables: 
		arg1: 	'Pharo cannot write to &fileRef.

Please check that you have write permis...etc...
		arg2: 	'C:\tmp\Pharo6.1\Pharo6.1.changes'
	Receiver's instance variables: 
		shouldInformAboutReadOnlyChanges: 	true


PharoFilesOpener>>informProblemInChanges:
	Receiver: a PharoFilesOpener
	Arguments and temporary variables: 
		arg1: 	'Pharo cannot write to &fileRef.

Please check that you have write permis...etc...
	Receiver's instance variables: 
		shouldInformAboutReadOnlyChanges: 	true


PharoFilesOpener>>changesFileOrNil
	Receiver: a PharoFilesOpener
	Arguments and temporary variables: 
		tmp1: 	MultiByteFileStream: 'C:\tmp\Pharo6.1\Pharo6.1.changes'
	Receiver's instance variables: 
		shouldInformAboutReadOnlyChanges: 	true


SourceFileArray>>ensureOpen
	Receiver: a SourceFileArray
	Arguments and temporary variables: 

	Receiver's instance variables: 
		files: 	an Array(MultiByteFileStream: 'C:\tmp\Pharo6.1\PharoV60.sources' MultiBy...etc...
		readOnlyQueue: 	SharedQueue with 0 items
		flushChanges: 	true


SmalltalkImage>>openSourceFiles
	Receiver: Smalltalk
	Arguments and temporary variables: 

	Receiver's instance variables: 
		globals: 	a SystemDictionary(lots of globals)
		deferredStartupActions: 	an OrderedCollection()
		specialObjectsArray: 	an Array(nil false true #Processor->Processor Bitmap Small...etc...
		session: 	an Object
		vm: 	a VirtualMachine


SmalltalkImage class>>startUp:
	Receiver: SmalltalkImage
	Arguments and temporary variables: 
		arg1: 	true
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(size 202)
		format: 	65541
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#SmalltalkImage
		classPool: 	a Dictionary(#CompilerClass->OpalCompiler #LastImagePath->'C:\tmp\Ph...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'System-Support'
		traitComposition: 	{}
		localSelectors: 	nil


ClassSessionHandler>>startup:
	Receiver: a ClassSessionHandler(SmalltalkImage)
	Arguments and temporary variables: 
		arg1: 	true
	Receiver's instance variables: 
		registeredClassName: 	#SmalltalkImage


[ :arg2 | arg2 startup: arg1 ] in WorkingSession>>runStartup:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	true
		arg2: 	a ClassSessionHandler(SmalltalkImage)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2017-12-07T15:15:24.125+01:00


[ arg2 value: arg3 ] in [ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | self errorHandler handleError: arg4 ] ] in WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(Sm...etc...
		arg2: 	[ :arg2 | arg2 startup: arg1 ]
		arg3: 	a ClassSessionHandler(SmalltalkImage)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2017-12-07T15:15:24.125+01:00


BlockClosure>>on:do:
	Receiver: [ arg2 value: arg3 ]
	Arguments and temporary variables: 
		arg1: 	Exception
		arg2: 	[ :arg4 | self errorHandler handleError: arg4 ]
	Receiver's instance variables: 
		outerContext: 	[ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | sel...etc...
		startpc: 	41
		numArgs: 	0


[ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | self errorHandler handleError: arg4 ] ] in WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(Sm...etc...
		arg2: 	[ :arg2 | arg2 startup: arg1 ]
		arg3: 	a ClassSessionHandler(SmalltalkImage)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2017-12-07T15:15:24.125+01:00


Array(SequenceableCollection)>>do:
	Receiver: an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(SmallInteger) a Cla...etc...
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(SmallInteger) a Cla...etc...

WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(Sm...etc...
		arg2: 	[ :arg2 | arg2 startup: arg1 ]
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2017-12-07T15:15:24.125+01:00


WorkingSession>>runStartup:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2017-12-07T15:15:24.125+01:00


WorkingSession>>start:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	true
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2017-12-07T15:15:24.125+01:00


SessionManager>>snapshot:andQuit:
	Receiver: a SessionManager
	Arguments and temporary variables: 
		arg1: 	true
		arg2: 	false
		tmp1: 	true
		tmp2: 	true
	Receiver's instance variables: 
		currentSession: 	a WorkingSession
		categories: 	an OrderedCollection(a SessionCategory(System) a SessionCategory(Ne...etc...
		guiCategory: 	a SessionCategory(Graphical User Interface)
		toolsCategory: 	a SessionCategory(Tools)
		networkCategory: 	a SessionCategory(Network)
		systemCategory: 	a SessionCategory(System)
		userCategory: 	a SessionCategory(User)


[ ^ SessionManager default snapshot: arg1 andQuit: arg2 ] in SmalltalkImage>>snapshot:andQuit:
	Receiver: Smalltalk
	Arguments and temporary variables: 
		arg1: 	true
		arg2: 	false
	Receiver's instance variables: 
		globals: 	a SystemDictionary(lots of globals)
		deferredStartupActions: 	an OrderedCollection()
		specialObjectsArray: 	an Array(nil false true #Processor->Processor Bitmap Small...etc...
		session: 	an Object
		vm: 	a VirtualMachine


CurrentExecutionEnvironment class>>activate:for:
	Receiver: CurrentExecutionEnvironment
	Arguments and temporary variables: 
		arg1: 	a DefaultExecutionEnvironment
		arg2: 	[ ^ SessionManager default snapshot: arg1 andQuit: arg2 ]
		tmp1: 	nil
	Receiver's instance variables: 
		superclass: 	ProcessLocalVariable
		methodDict: 	a MethodDictionary(#default->CurrentExecutionEnvironment>>#default ...etc...
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#CurrentExecutionEnvironment
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Processes'
		traitComposition: 	{}
		localSelectors: 	nil
		soleInstance: 	a CurrentExecutionEnvironment


DefaultExecutionEnvironment(ExecutionEnvironment)>>beActiveDuring:
	Receiver: a DefaultExecutionEnvironment
	Arguments and temporary variables: 
		arg1: 	[ ^ SessionManager default snapshot: arg1 andQuit: arg2 ]
	Receiver's instance variables: 
a DefaultExecutionEnvironment

DefaultExecutionEnvironment class>>beActiveDuring:
	Receiver: DefaultExecutionEnvironment
	Arguments and temporary variables: 
		arg1: 	[ ^ SessionManager default snapshot: arg1 andQuit: arg2 ]
	Receiver's instance variables: 
		superclass: 	ExecutionEnvironment
		methodDict: 	a MethodDictionary(#prepareForNewProcess:->DefaultExecutionEnvironm...etc...
		format: 	0
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#DefaultExecutionEnvironment
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Processes'
		traitComposition: 	{}
		localSelectors: 	nil
		instance: 	a DefaultExecutionEnvironment


SmalltalkImage>>snapshot:andQuit:
	Receiver: Smalltalk
	Arguments and temporary variables: 
		arg1: 	true
		arg2: 	false
	Receiver's instance variables: 
		globals: 	a SystemDictionary(lots of globals)
		deferredStartupActions: 	an OrderedCollection()
		specialObjectsArray: 	an Array(nil false true #Processor->Processor Bitmap Small...etc...
		session: 	an Object
		vm: 	a VirtualMachine


[ Smalltalk snapshot: true andQuit: false ] in WorldState class>>saveSession
	Receiver: WorldState
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#activeHand->WorldState>>#activeHand #activeHand...etc...
		format: 	65548
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldState. OSWindowWorldState}
		name: 	#WorldState
		classPool: 	a Dictionary(#CanSurrenderToOS->true #DebugShowDamage->false #Deferr...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil


BlockClosure>>ensure:
	Receiver: [ Smalltalk snapshot: true andQuit: false ]
	Arguments and temporary variables: 
		arg1: 	[ tmp1 show ]
		tmp1: 	nil
		tmp2: 	nil
	Receiver's instance variables: 
		outerContext: 	WorldState class>>saveSession
		startpc: 	39
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r11000000000000000000
...etc...
	Arguments and temporary variables: 
		arg1: 	[ Smalltalk snapshot: true andQuit: false ]
		tmp1: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r1000...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


WorldState class>>saveSession
	Receiver: WorldState
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#activeHand->WorldState>>#activeHand #activeHand...etc...
		format: 	65548
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldState. OSWindowWorldState}
		name: 	#WorldState
		classPool: 	a Dictionary(#CanSurrenderToOS->true #DebugShowDamage->false #Deferr...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil


[ | tmp2 |
(tmp2 := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ tmp2 = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: arg1) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(78964992)'Save'
	Arguments and temporary variables: 
		arg1: 	[(1240@748) mouseUp 3086156 nil]
		tmp1: 	a WorldMorph(562956288) [world]
		tmp2: 	0
	Receiver's instance variables: 
		bounds: 	(1111.0@738.0) corner: (1320.0@756.0)
		owner: 	a MenuMorph(353188352)
		submorphs: 	#()
		fullBounds: 	(1111.0@738.0) corner: (1320.0@756.0)
		color: 	Color black
		extension: 	a MorphExtension (104625920)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Save'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	WorldState
		selector: 	#saveSession
		arguments: 	nil
		icon: 	Form(16x16x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'S'


BlockClosure>>ensure:
	Receiver: [ | tmp2 |
(tmp2 := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: ...etc...
	Arguments and temporary variables: 
		arg1: 	[ tmp1 show ]
		tmp1: 	nil
		tmp2: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		arg1: 	[ | tmp2 |
(tmp2 := selector numArgs) = 0
	ifTrue: [ target perform: sele...etc...
		tmp1: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r1000...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(78964992)'Save'
	Arguments and temporary variables: 
		arg1: 	[(1240@748) mouseUp 3086156 nil]
		tmp1: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(1111.0@738.0) corner: (1320.0@756.0)
		owner: 	a MenuMorph(353188352)
		submorphs: 	#()
		fullBounds: 	(1111.0@738.0) corner: (1320.0@756.0)
		color: 	Color black
		extension: 	a MorphExtension (104625920)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Save'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	WorldState
		selector: 	#saveSession
		arguments: 	nil
		icon: 	Form(16x16x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'S'


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(78964992)'Save'
	Arguments and temporary variables: 
		arg1: 	[(1240@748) mouseUp 3086156 nil]
	Receiver's instance variables: 
		bounds: 	(1111.0@738.0) corner: (1320.0@756.0)
		owner: 	a MenuMorph(353188352)
		submorphs: 	#()
		fullBounds: 	(1111.0@738.0) corner: (1320.0@756.0)
		color: 	Color black
		extension: 	a MorphExtension (104625920)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Save'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	WorldState
		selector: 	#saveSession
		arguments: 	nil
		icon: 	Form(16x16x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'S'


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(78964992)'Save'
	Arguments and temporary variables: 
		arg1: 	[(1240@748) mouseUp 3086156 nil]
	Receiver's instance variables: 
		bounds: 	(1111.0@738.0) corner: (1320.0@756.0)
		owner: 	a MenuMorph(353188352)
		submorphs: 	#()
		fullBounds: 	(1111.0@738.0) corner: (1320.0@756.0)
		color: 	Color black
		extension: 	a MorphExtension (104625920)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Save'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	WorldState
		selector: 	#saveSession
		arguments: 	nil
		icon: 	Form(16x16x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'S'


MouseButtonEvent>>sentTo:
	Receiver: [(1240@748) mouseUp 3086156 nil]
	Arguments and temporary variables: 
		arg1: 	a ToggleMenuItemMorph(78964992)'Save'
	Receiver's instance variables: 
		timeStamp: 	3086156
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(1240@748)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(78964992)'Save'
	Arguments and temporary variables: 
		arg1: 	[(1240@748) mouseUp 3086156 nil]
	Receiver's instance variables: 
		bounds: 	(1111.0@738.0) corner: (1320.0@756.0)
		owner: 	a MenuMorph(353188352)
		submorphs: 	#()
		fullBounds: 	(1111.0@738.0) corner: (1320.0@756.0)
		color: 	Color black
		extension: 	a MorphExtension (104625920)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Save'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	WorldState
		selector: 	#saveSession
		arguments: 	nil
		icon: 	Form(16x16x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'S'


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		arg1: 	[(1240@748) mouseUp 3086156 nil]
		arg2: 	a ToggleMenuItemMorph(78964992)'Save'
		tmp1: 	nil
		tmp2: 	1
		tmp3: 	nil
		tmp4: 	#()
		tmp5: 	true
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(78964992)'Save'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		arg1: 	[(1240@748) mouseUp 3086156 nil]
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(78964992)'Save'


MouseButtonEvent>>sentTo:
	Receiver: [(1240@748) mouseUp 3086156 nil]
	Arguments and temporary variables: 
		arg1: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	3086156
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(1240@748)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4



--- The full stack ---
StartupUIManager>>inform:
PharoFilesOpener(Object)>>inform:
PharoFilesOpener>>inform:withRef:
PharoFilesOpener>>inform:withChangesRef:
PharoFilesOpener>>informProblemInChanges:
PharoFilesOpener>>changesFileOrNil
SourceFileArray>>ensureOpen
SmalltalkImage>>openSourceFiles
SmalltalkImage class>>startUp:
ClassSessionHandler>>startup:
[ :arg2 | arg2 startup: arg1 ] in WorkingSession>>runStartup:
[ arg2 value: arg3 ] in [ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | self errorHandler handleError: arg4 ] ] in WorkingSession>>runList:do:
BlockClosure>>on:do:
[ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | self errorHandler handleError: arg4 ] ] in WorkingSession>>runList:do:
Array(SequenceableCollection)>>do:
WorkingSession>>runList:do:
WorkingSession>>runStartup:
WorkingSession>>start:
SessionManager>>snapshot:andQuit:
[ ^ SessionManager default snapshot: arg1 andQuit: arg2 ] in SmalltalkImage>>snapshot:andQuit:
CurrentExecutionEnvironment class>>activate:for:
DefaultExecutionEnvironment(ExecutionEnvironment)>>beActiveDuring:
DefaultExecutionEnvironment class>>beActiveDuring:
SmalltalkImage>>snapshot:andQuit:
[ Smalltalk snapshot: true andQuit: false ] in WorldState class>>saveSession
BlockClosure>>ensure:
CursorWithMask(Cursor)>>showWhile:
WorldState class>>saveSession
[ | tmp2 |
(tmp2 := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ tmp2 = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: arg1) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
BlockClosure>>ensure:
CursorWithMask(Cursor)>>showWhile:
ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
ToggleMenuItemMorph(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ ^ arg1 sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
ToggleMenuItemMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ arg1 sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
MenuMorph(Morph)>>processEvent:using:
MenuMorph(Morph)>>processEvent:
MenuMorph>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := arg1.
tmp3 := arg2
	handleFocusEvent: (arg1 transformedBy: (arg2 transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph(PasteUpMorph)>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :arg2 | 
self activeHand: arg2.
arg2 processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Point did not understand #getClass
7 December 2017 3:29:29.001875 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

Point(Object)>>doesNotUnderstand: #getClass
	Receiver: (3@5)
	Arguments and temporary variables: 
		aMessage: 	getClass
		exception: 	MessageNotUnderstood: Point>>getClass
		resumeValue: 	nil
	Receiver's instance variables: 
		x: 	3
		y: 	5


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		p: 	(3@5)
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'|p|
p := 3@5.
p getClass.'
		itsSelection: 	a Text for '|p|
p := 3@5.
p getClass.'
		itsSelectionString: 	'|p|
p := 3@5.
p getClass.'
	Receiver's instance variables: 
		ast: 	DoIt
	| p |
	p := 3 @ 5.
	^ p getClass
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(389142272)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(389142272)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(482443008)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(389142272)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (567@335)
		owner: 	a TransformWithLayoutMorph(154328832)
		submorphs: 	an Array(a RubPrimarySelectionMorph(702007040) a RubCursor(609776384...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1022336768) [other:  (announcer -> an Announcer) (...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(46282496)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(609776384)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(796470016))
		getMenuPolicy: 	a RubEditingArea(389142272)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(482443008)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1007594240))(a DropLis...etc...
		lastStepTime: 	10158027
		lastStepMessage: 	nil
		lastCycleTime: 	10158050
		alarms: 	a Heap()
		lastAlarmTime: 	10158027
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(724638976) a Na...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (812800768) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1007594240))(a DropLis...etc...
		lastStepTime: 	10158027
		lastStepMessage: 	nil
		lastCycleTime: 	10158050
		alarms: 	a Heap()
		lastAlarmTime: 	10158027
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1007594240))(a DropLis...etc...
		lastStepTime: 	10158027
		lastStepMessage: 	nil
		lastCycleTime: 	10158050
		alarms: 	a Heap()
		lastAlarmTime: 	10158027
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1007594240))(a DropLis...etc...
		lastStepTime: 	10158027
		lastStepMessage: 	nil
		lastCycleTime: 	10158050
		alarms: 	a Heap()
		lastAlarmTime: 	10158027
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(724638976) a Na...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (812800768) [other:  (dragEnabled -> true) (dropEna...etc...
		boTHERE_BE_DRAGONS_HERE
Instance of Point did not understand #getClass
7 December 2017 3:29:37.804875 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

Point(Object)>>doesNotUnderstand: #getClass
	Receiver: (3@5)
	Arguments and temporary variables: 
		aMessage: 	getClass
		exception: 	MessageNotUnderstood: Point>>getClass
		resumeValue: 	nil
	Receiver's instance variables: 
		x: 	3
		y: 	5


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		p: 	(3@5)
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'|p|
p := 3@5.
p getClass.'
		itsSelection: 	a Text for '|p|
p := 3@5.
p getClass.'
		itsSelectionString: 	'|p|
p := 3@5.
p getClass.'
	Receiver's instance variables: 
		ast: 	DoIt
	| p |
	p := 3 @ 5.
	^ p getClass
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(389142272)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(389142272)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(482443008)
		textModel: 	a GLMRubricSmalltalkTextModel


MorphicAlarm(MessageSend)>>value
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	10166872
		numArgs: 	0


MorphicAlarm>>value:
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 
		anArgument: 	10166877
		nArgs: 	0
	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	10166872
		numArgs: 	0


WorldState>>triggerAlarmsBefore:
	Receiver: a WorldState
	Arguments and temporary variables: 
		nowTime: 	10166877
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(609776384)))
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1007594240))(a DropLis...etc...
		lastStepTime: 	10166855
		lastStepMessage: 	nil
		lastCycleTime: 	10166877
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(609776384)))
		lastAlarmTime: 	10166855
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>runLocalStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		now: 	10166877
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1007594240))(a DropLis...etc...
		lastStepTime: 	10166855
		lastStepMessage: 	nil
		lastCycleTime: 	10166877
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(609776384)))
		lastAlarmTime: 	10166855
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1007594240))(a DropLis...etc...
		lastStepTime: 	10166855
		lastStepMessage: 	nil
		lastCycleTime: 	10166877
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(609776384)))
		lastAlarmTime: 	10166855
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(724638976) a Na...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (812800768) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1007594240))(a DropLis...etc...
		lastStepTime: 	10166855
		lastStepMessage: 	nil
		lastCycleTime: 	10166877
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(609776384)))
		lastAlarmTime: 	10166855
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1007594240))(a DropLis...etc...
		lastStepTime: 	10166855
		lastStepMessage: 	nil
		lastCycleTime: 	10166877
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(609776384)))
		lastAlarmTime: 	10166855
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of CanvasMorph did not understand #OpenInWorld
7 December 2017 4:23:22.465875 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

CanvasMorph(Object)>>doesNotUnderstand: #OpenInWorld
	Receiver: a CanvasMorph(589225216)
	Arguments and temporary variables: 
		aMessage: 	OpenInWorld
		exception: 	MessageNotUnderstood: CanvasMorph>>OpenInWorld
		resumeValue: 	nil
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (400@400)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (1063793408)
		drawBlock: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ CanvasMorph new OpenInWorld
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(390859008)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(390859008)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(371716864)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(390859008)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(16481536)
		submorphs: 	an Array(a RubPrimarySelectionMorph(943679232) a RubCursor(177983232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (995889408) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(636396288)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(177983232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(427341056))
		getMenuPolicy: 	a RubEditingArea(390859008)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(371716864)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@836)
		canvas: 	a FormCanvas on: DisplayScreen(1600x836x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(342483200))(a DropList...etc...
		lastStepTime: 	13391514
		lastStepMessage: 	nil
		lastCycleTime: 	13391536
		alarms: 	a Heap()
		lastAlarmTime: 	13391514
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1600@836)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(260264192) a GL...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (812800768) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@836)
		canvas: 	a FormCanvas on: DisplayScreen(1600x836x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(342483200))(a DropList...etc...
		lastStepTime: 	13391514
		lastStepMessage: 	nil
		lastCycleTime: 	13391536
		alarms: 	a Heap()
		lastAlarmTime: 	13391514
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@836)
		canvas: 	a FormCanvas on: DisplayScreen(1600x836x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(342483200))(a DropList...etc...
		lastStepTime: 	13391514
		lastStepMessage: 	nil
		lastCycleTime: 	13391536
		alarms: 	a Heap()
		lastAlarmTime: 	13391514
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@836)
		canvas: 	a FormCanvas on: DisplayScreen(1600x836x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(342483200))(a DropList...etc...
		lastStepTime: 	13391514
		lastStepMessage: 	nil
		lastCycleTime: 	13391536
		alarms: 	a Heap()
		lastAlarmTime: 	13391514
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1600@836)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(260264192) a GL...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (812800768) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(720864000)
	Arguments and temporary variables: 
		aPoint: 	(424@389)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(390859008)
	Receiver's instance variables: 
		bounds: 	(422.0@381.0) corner: (631.0@619.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(585090816)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(422.0@381.0) corner: (631.0@619.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (64756480) [other:  (basicColor -> (Color r: 0.8230...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(51411712)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(720864000)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(422.0@381.0) corner: (631.0@619.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(585090816)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(422.0@381.0) corner: (631.0@619.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (64756480) [other:  (basicColor -> (Color r: 0.8230...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(51411712)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(720864000)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(422.0@381.0) corner: (631.0@619.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(585090816)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(422.0@381.0) corner: (631.0@619.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (64756480) [other:  (basicColor -> (Color r: 0.8230...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(51411712)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(390859008)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(720864000)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(16481536)
		submorphs: 	an Array(a RubPrimarySelectionMorph(943679232) a RubCursor(177983232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (995889408) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(636396288)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(177983232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(427341056))
		getMenuPolicy: 	a RubEditingArea(390859008)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(390859008)
	Arguments and temporary variables: 
		evt: 	[(68@21) mouseDown yellow 16510015 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(16481536)
		submorphs: 	an Array(a RubPrimarySelectionMorph(943679232) a RubCursor(177983232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (995889408) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(636396288)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(177983232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(427341056))
		getMenuPolicy: 	a RubEditingArea(390859008)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(390859008)
	Arguments and temporary variables: 
		anEvent: 	[(68@21) mouseDown yellow 16510015 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(16481536)
		submorphs: 	an Array(a RubPrimarySelectionMorph(943679232) a RubCursor(177983232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (995889408) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(636396288)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(177983232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(427341056))
		getMenuPolicy: 	a RubEditingArea(390859008)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(68@21) mouseDown yellow 16510015 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(390859008)
	Receiver's instance variables: 
		timeStamp: 	16510015
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(68@21)
		handler: 	a RubEditingArea(390859008)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(390859008)
	Arguments and temporary variables: 
		anEvent: 	[(68@21) mouseDown yellow 16510015 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(16481536)
		submorphs: 	an Array(a RubPrimarySelectionMorph(943679232) a RubCursor(177983232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (995889408) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(636396288)
THERE_BE_DRAGONS_HERE
Instance of CanvasMorph did not understand #OpenInWorld
7 December 2017 4:23:40.359875 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

CanvasMorph(Object)>>doesNotUnderstand: #OpenInWorld
	Receiver: a CanvasMorph(634796288)
	Arguments and temporary variables: 
		aMessage: 	OpenInWorld
		exception: 	MessageNotUnderstood: CanvasMorph>>OpenInWorld
		resumeValue: 	nil
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (400@400)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (325138176)
		drawBlock: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ CanvasMorph new OpenInWorld
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(390859008)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(390859008)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(371716864)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(390859008)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(16481536)
		submorphs: 	an Array(a RubPrimarySelectionMorph(943679232) a RubCursor(177983232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (995889408) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(636396288)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(177983232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(611576576))
		getMenuPolicy: 	a RubEditingArea(390859008)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(371716864)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@836)
		canvas: 	a FormCanvas on: DisplayScreen(1600x836x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(363475712))(a SearchMorp...etc...
		lastStepTime: 	13409405
		lastStepMessage: 	nil
		lastCycleTime: 	13409426
		alarms: 	a Heap()
		lastAlarmTime: 	13409405
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1600@836)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(260264192) a GL...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (812800768) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@836)
		canvas: 	a FormCanvas on: DisplayScreen(1600x836x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(363475712))(a SearchMorp...etc...
		lastStepTime: 	13409405
		lastStepMessage: 	nil
		lastCycleTime: 	13409426
		alarms: 	a Heap()
		lastAlarmTime: 	13409405
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@836)
		canvas: 	a FormCanvas on: DisplayScreen(1600x836x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(363475712))(a SearchMorp...etc...
		lastStepTime: 	13409405
		lastStepMessage: 	nil
		lastCycleTime: 	13409426
		alarms: 	a Heap()
		lastAlarmTime: 	13409405
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@836)
		canvas: 	a FormCanvas on: DisplayScreen(1600x836x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(363475712))(a SearchMorp...etc...
		lastStepTime: 	13409405
		lastStepMessage: 	nil
		lastCycleTime: 	13409426
		alarms: 	a Heap()
		lastAlarmTime: 	13409405
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1600@836)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(260264192) a GL...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (812800768) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(365703936)
	Arguments and temporary variables: 
		aPoint: 	(400@381)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(390859008)
	Receiver's instance variables: 
		bounds: 	(398.0@373.0) corner: (607.0@611.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(912386816)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(398.0@373.0) corner: (607.0@611.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (380916992) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(88191232)'Inspect it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(365703936)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(398.0@373.0) corner: (607.0@611.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(912386816)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(398.0@373.0) corner: (607.0@611.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (380916992) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(88191232)'Inspect it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(365703936)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(398.0@373.0) corner: (607.0@611.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(912386816)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(398.0@373.0) corner: (607.0@611.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (380916992) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(88191232)'Inspect it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(390859008)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(365703936)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(16481536)
		submorphs: 	an Array(a RubPrimarySelectionMorph(943679232) a RubCursor(177983232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (995889408) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(636396288)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(177983232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(611576576))
		getMenuPolicy: 	a RubEditingArea(390859008)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(390859008)
	Arguments and temporary variables: 
		evt: 	[(44@13) mouseDown yellow 16527296 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(16481536)
		submorphs: 	an Array(a RubPrimarySelectionMorph(943679232) a RubCursor(177983232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (995889408) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(636396288)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(177983232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(611576576))
		getMenuPolicy: 	a RubEditingArea(390859008)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(390859008)
	Arguments and temporary variables: 
		anEvent: 	[(44@13) mouseDown yellow 16527296 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(16481536)
		submorphs: 	an Array(a RubPrimarySelectionMorph(943679232) a RubCursor(177983232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (995889408) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(636396288)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(177983232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(611576576))
		getMenuPolicy: 	a RubEditingArea(390859008)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(44@13) mouseDown yellow 16527296 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(390859008)
	Receiver's instance variables: 
		timeStamp: 	16527296
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(44@13)
		handler: 	a RubEditingArea(390859008)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(390859008)
	Arguments and temporary variables: 
		anEvent: 	[(44@13) mouseDown yellow 16527296 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(16481536)
		submorphs: 	an Array(a RubPrimarySelectionMorph(943679232) a RubCursor(177983232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (995889408) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(636396288)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(177983232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(611576576))
		getMenuPolicy: 	a RubEditingArea(390859008)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(44@13) mouseDown yellow 16527296 nil]
		aMorph: 	a RubEditingArea(390859008)
		globalPt: 	(44@13)
		localEvt: 	[(44@13) mouseDown yellow 16527296 nil]
		index: 	3
		child: 	a RubCursor(177983232)
		morphs: 	an Array(a RubPrimarySelectionMorph(943679232) a RubCursor(177983232))
		handler: 	a RubEditingArea(390859008)
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(371716864)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(44@13) mouseDown yellow 16527296 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(44@13) mouseDown yellow 16527296 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	16527296
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(44@13)
		handler: 	a RubEditingArea(390859008)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(44@13) mouseDown yellow 16527296 nil]
		aMorph: 	a RubEditingArea(390859008)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(44@13) mouseDown yellow 16527296 nil]
		aMorph: 	a RubEditingArea(390859008)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(390859008)
	Arguments and temporary variables: 
		anEvent: 	[(44@13) mouseDown yellow 16527296 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(16481536)
		submorphs: 	an Array(a RubPrimarySelectionMorph(943679232) a RubCursor(177983232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (995889408) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(636396288)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(177983232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(611576576))
		getMenuPolicy: 	a RubEditingArea(390859008)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispTHERE_BE_DRAGONS_HERE
Instance of CanvasMorph did not understand #OpenInWorld
7 December 2017 4:23:50.339875 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

CanvasMorph(Object)>>doesNotUnderstand: #OpenInWorld
	Receiver: a CanvasMorph(327949056)
	Arguments and temporary variables: 
		aMessage: 	OpenInWorld
		exception: 	MessageNotUnderstood: CanvasMorph>>OpenInWorld
		resumeValue: 	nil
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (400@400)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (325690624)
		drawBlock: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ CanvasMorph new OpenInWorld
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(390859008)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result basicInspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(390859008)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(371716864)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(390859008)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(16481536)
		submorphs: 	an Array(a RubPrimarySelectionMorph(943679232) a RubCursor(177983232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (995889408) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(636396288)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(177983232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(728832256))
		getMenuPolicy: 	a RubEditingArea(390859008)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(371716864)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@836)
		canvas: 	a FormCanvas on: DisplayScreen(1600x836x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(363475712))(a SearchMorp...etc...
		lastStepTime: 	13419307
		lastStepMessage: 	nil
		lastCycleTime: 	13419329
		alarms: 	a Heap()
		lastAlarmTime: 	13419307
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1600@836)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(239687424) a GLMSys...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (812800768) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@836)
		canvas: 	a FormCanvas on: DisplayScreen(1600x836x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(363475712))(a SearchMorp...etc...
		lastStepTime: 	13419307
		lastStepMessage: 	nil
		lastCycleTime: 	13419329
		alarms: 	a Heap()
		lastAlarmTime: 	13419307
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@836)
		canvas: 	a FormCanvas on: DisplayScreen(1600x836x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(363475712))(a SearchMorp...etc...
		lastStepTime: 	13419307
		lastStepMessage: 	nil
		lastCycleTime: 	13419329
		alarms: 	a Heap()
		lastAlarmTime: 	13419307
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@836)
		canvas: 	a FormCanvas on: DisplayScreen(1600x836x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(363475712))(a SearchMorp...etc...
		lastStepTime: 	13419307
		lastStepMessage: 	nil
		lastCycleTime: 	13419329
		alarms: 	a Heap()
		lastAlarmTime: 	13419307
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1600@836)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(239687424) a GLMSys...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (812800768) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(491585280)
	Arguments and temporary variables: 
		aPoint: 	(413@386)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(390859008)
	Receiver's instance variables: 
		bounds: 	(411.0@378.0) corner: (620.0@616.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(751066368)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(411.0@378.0) corner: (620.0@616.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (822566656) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(122878208)'Basic Inspect it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(491585280)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(411.0@378.0) corner: (620.0@616.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(751066368)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(411.0@378.0) corner: (620.0@616.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (822566656) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(122878208)'Basic Inspect it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(491585280)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(411.0@378.0) corner: (620.0@616.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(751066368)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(411.0@378.0) corner: (620.0@616.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (822566656) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(122878208)'Basic Inspect it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(390859008)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(491585280)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(16481536)
		submorphs: 	an Array(a RubPrimarySelectionMorph(943679232) a RubCursor(177983232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (995889408) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(636396288)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(177983232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(728832256))
		getMenuPolicy: 	a RubEditingArea(390859008)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(390859008)
	Arguments and temporary variables: 
		evt: 	[(57@18) mouseDown yellow 16536218 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(16481536)
		submorphs: 	an Array(a RubPrimarySelectionMorph(943679232) a RubCursor(177983232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (995889408) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(636396288)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(177983232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(728832256))
		getMenuPolicy: 	a RubEditingArea(390859008)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(390859008)
	Arguments and temporary variables: 
		anEvent: 	[(57@18) mouseDown yellow 16536218 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@31)
		owner: 	a TransformWithLayoutMorph(16481536)
		submorphs: 	an Array(a RubPrimarySelectionMorph(943679232) a RubCursor(177983232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (995889408) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(636396288)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(177983232)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(728832256))
		getMenuPolicy: 	a RubEditingArea(390859008)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(57@18) mouseDown yellow 16536218 nil]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#delete was sent to nil
7 December 2017 4:31:53.570375 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #delete
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	delete
		exception: 	MessageNotUnderstood: receiver of "delete" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ c delete
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(272125696)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(272125696)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(981179136)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(272125696)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@69)
		owner: 	a TransformWithLayoutMorph(552833280)
		submorphs: 	an Array(a RubPrimarySelectionMorph(808762112) a RubCursor(493546240...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (369755392) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(382547200)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(493546240)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(736551168))
		getMenuPolicy: 	a RubEditingArea(272125696)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(981179136)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@836)
		canvas: 	a FormCanvas on: DisplayScreen(1600x836x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(456532736))(a SearchMorp...etc...
		lastStepTime: 	343689
		lastStepMessage: 	nil
		lastCycleTime: 	343710
		alarms: 	a Heap()
		lastAlarmTime: 	343689
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1600@836)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(220968704) a GLMSys...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (823394048) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@836)
		canvas: 	a FormCanvas on: DisplayScreen(1600x836x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(456532736))(a SearchMorp...etc...
		lastStepTime: 	343689
		lastStepMessage: 	nil
		lastCycleTime: 	343710
		alarms: 	a Heap()
		lastAlarmTime: 	343689
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@836)
		canvas: 	a FormCanvas on: DisplayScreen(1600x836x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(456532736))(a SearchMorp...etc...
		lastStepTime: 	343689
		lastStepMessage: 	nil
		lastCycleTime: 	343710
		alarms: 	a Heap()
		lastAlarmTime: 	343689
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@836)
		canvas: 	a FormCanvas on: DisplayScreen(1600x836x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(456532736))(a SearchMorp...etc...
		lastStepTime: 	343689
		lastStepMessage: 	nil
		lastCycleTime: 	343710
		alarms: 	a Heap()
		lastAlarmTime: 	343689
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1600@836)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(220968704) a GLMSys...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (823394048) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(812887296)
	Arguments and temporary variables: 
		aPoint: 	(89@228.0)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubTextScrollPane(382547200)
	Receiver's instance variables: 
		bounds: 	(87.0@220.0) corner: (296.0@458.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(532260096)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(87.0@220.0) corner: (296.0@458.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (987473152) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(610080000)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(812887296)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(87.0@220.0) corner: (296.0@458.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(532260096)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(87.0@220.0) corner: (296.0@458.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (987473152) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(610080000)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(812887296)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(87.0@220.0) corner: (296.0@458.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(532260096)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(87.0@220.0) corner: (296.0@458.0)
		color: 	(Color r: 0.894 g: 0.894 b: 0.894 alpha: 1.0)
		extension: 	a MorphExtension (987473152) [other:  (basicColor -> (Color r: 0.823...etc...
		borderWidth: 	2
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(610080000)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(272125696)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(812887296)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@69)
		owner: 	a TransformWithLayoutMorph(552833280)
		submorphs: 	an Array(a RubPrimarySelectionMorph(808762112) a RubCursor(493546240...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (369755392) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(382547200)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(493546240)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(736551168))
		getMenuPolicy: 	a RubEditingArea(272125696)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(272125696)
	Arguments and temporary variables: 
		evt: 	[(28.0@52.0) mouseDown yellow 17021000 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@69)
		owner: 	a TransformWithLayoutMorph(552833280)
		submorphs: 	an Array(a RubPrimarySelectionMorph(808762112) a RubCursor(493546240...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (369755392) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(382547200)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(493546240)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(736551168))
		getMenuPolicy: 	a RubEditingArea(272125696)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubTextScrollPane>>mouseDown:
	Receiver: a RubTextScrollPane(382547200)
	Arguments and temporary variables: 
		anEvent: 	[(89@228) mouseDown yellow 17021000 nil]
	Receiver's instance variables: 
		bounds: 	(61.0@176.0) corner: (641.0@506.0)
		owner: 	a RubScrolledTextMorph(981179136)
		submorphs: 	an Array(a TransformWithLayoutMorph(552833280))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1010202880) [other:  (announcer -> an Announcer) (...etc...
		scroller: 	a TransformWithLayoutMorph(552833280)
		hScrollbar: 	a RubScrollBar(476772096)
		vScrollbar: 	a RubScrollBar(848740096)
		drawFocusBorder: 	true


RubTextScrollPane(Morph)>>handleMouseDown:
	Receiver: a RubTextScrollPane(382547200)
	Arguments and temporary variables: 
		anEvent: 	[(89@228) mouseDown yellow 17021000 nil]
	Receiver's instance variables: 
		bounds: 	(61.0@176.0) corner: (641.0@506.0)
		owner: 	a RubScrolledTextMorph(981179136)
		submorphs: 	an Array(a TransformWithLayoutMorph(552833280))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1010202880) [other:  (announcer -> an Announcer) (...etc...
		scroller: 	a TransformWithLayoutMorph(552833280)
		hScrollbar: 	a RubScrollBar(476772096)
		vScrollbar: 	a RubScrollBar(848740096)
		drawFocusBorder: 	true


NECMenuMorph>>mouseDown:
	Receiver: a NECMenuMorph(224885504)
	Arguments and temporary variables: 
		evt: 	[(89@228) mouseDown yellow 17021000 nil]
	Receiver's instance variables: 
		bounds: 	(62.600006103515625@240.0) corner: (312.6000061035156@639.0)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	(62.600006103515625@240.0) corner: (312.6000061035156@639.0)
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (582272768)
		selected: 	1
		firstVisible: 	1
		titleStringMorph: 	nil
		controller: 	a NECController
		context: 	a NECContext
		pageHeight: 	20
		detailMorph: 	nil
		detailPosition: 	(311.6000061035156@241.0)


NECMenuMorph(Morph)>>handleMouseDown:
	Receiver: a NECMenuMorph(224885504)
	Arguments and temporary variables: 
		anEvent: 	[(89@228) mouseDown yellow 17021000 nil]
	Receiver's instance variables: 
		bounds: 	(62.600006103515625@240.0) corner: (312.6000061035156@639.0)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	(62.600006103515625@240.0) corner: (312.6000061035156@639.0)
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (582272768)
		selected: 	1
		firstVisible: 	1
		titleStringMorph: 	nil
		controller: 	a NECController
		context: 	a NECContext
		pageHeight: 	20
		detailMorph: 	nil
		detailPosition: 	(311.6000061035156@241.0)


MouseButtonEvent>>sentTo:
	Receiver: [(89@228) mouseDown yellow 17021000 nil]
	Arguments and temporary variables: 
		anObject: 	a NECMenuMorph(224885504)
	Receiver's instance variables: 
		timeStamp: 	17021000
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(89@228)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	2


NECMenuMorph(Morph)>>handleEvent:
	Receiver: a NECMenuMorph(224885504)
	Arguments and temporary variables: 
		anEvent: 	[(89@228) mouseDown yellow 17021000 nil]
	Receiver's instance variables: 
		bounds: 	(62.600006103515625@240.0) corner: (312.6000061035156@639.0)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	(62.600006103515625@240.0) corner: (312.6000061035156@639.0)
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (582272768)
		selected: 	1
		firstVisible: 	1
		titleStringMorph: 	nil
		controller: 	a NECController
		context: 	a NECContext
		pageHeight: 	20
		detailMorph: 	nil
		detailPosition: 	(311.6000061035156@241.0)


NECMenuMorph(Morph)>>handleFocusEvent:
	Receiver: a NECMenuMorph(224885504)
	Arguments and temporary variables: 
		anEvent: 	[(89@228) mouseDown yellow 17021000 nil]
	Receiver's instance variables: 
		bounds: 	(62.600006103515625@240.0) corner: (312.6000061035156@639.0)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	(62.600006103515625@240.0) corner: (312.6000061035156@639.0)
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (582272768)
		selected: 	1
		firstVisible: 	1
		titleStringMorph: 	nil
		controller: 	a NECController
		context: 	a NECContext
		pageHeight: 	20
		detailMorph: 	nil
		detailPosition: 	(311.6000061035156@241.0)


[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(89@228) mouseDown yellow 17021000 nil]
		focusHolder: 	a NECMenuMorph(224885504)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(109@252.0) corner: (125@268.0)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (803047680)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(109@252) mouseOver 17022109 nil]
		targetOffset: 	(17.0@9.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 17022109 109 252 0 0 1 1)
		lastKeyScanCode: 	69
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


BlockClosure>>on:do:
	Receiver: [ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (an...etc...
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
ActiveWorld := priorWorld.
ActiveEvent := priorEvent.
A...etc...
	Receiver's instance variables: 
		outerContext: 	HandMorph>>sendFocusEvent:to:clear:
		startpc: 	67
		numArgs: 	0


WorldMorph(PasteUpMorph)>>becomeActiveDuring:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		aBlock: 	[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	ha...etc...
		priorWorld: 	a WorldMorph(562956288) [world]
		priorHand: 	a HandMorph(58125568)
		priorEvent: 	[(89@228) mouseOver 17020812 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1600@836)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(220968704) a GLMSys...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (823394048) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		result: 	nil
		anEvent: 	[(89@228) mouseDown yellow 17021000 nil]
		focusHolder: 	a NECMenuMorph(224885504)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(109@252.0) corner: (125@268.0)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (803047680)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(109@252) mouseOver 17022109 nil]
		targetOffset: 	(17.0@9.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 17022109 109 252 0 0 1 1)
		lastKeyScanCode: 	69
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(89@228) mouseDown yellow 17021000 nil]
		focusHolder: 	a NECMenuMorph(224885504)
		aBlock: 	[ self mouseFocus: nil ]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(109@252.0) corner: (125@268.0)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (803047680)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(109@252) mouseOver 17022109 nil]
		targetOffset: 	(17.0@9.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 17022109 109 252 0 0 1 1)
		lastKeyScanCode: 	69
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendMouseEvent:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(89@228) mouseDown yellow 17021000 nil]
	Receiver's instance variables: 
		bounds: 	(109@252.0) corner: (125@268.0)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (803047680)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(109@252) mouseOver 17022109 nil]
		targetOffset: 	(17.0@9.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 17022109 109 252 0 0 1 1)
		lastKeyScanCode: 	69
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>handleEvent:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(89@228) mouseDown yellow 17021000 nil]
		evt: 	[(89@228) mouseDown yellow 17021000 nil]
	Receiver's instance variables: 
		bounds: 	(109@252.0) corner: (125@268.0)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (803047680)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(109@252) mouseOver 17022109 nil]
		targetOffset: 	(17.0@9.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 17022109 109 252 0 0 1 1)
		lastKeyScanCode: 	69
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>processEventsFromQueue:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Error: This block accepts 0 arguments, but was called with 1 argument.
7 December 2017 6:18:17.903375 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

BlockClosure(Object)>>error:
	Receiver: [ Transcript
	show: p next;
	cr ]
	Arguments and temporary variables: 
		aString: 	'This block accepts 0 arguments, but was called with 1 argument.'
	Receiver's instance variables: 
		outerContext: 	UndefinedObject>>DoIt
		startpc: 	47
		numArgs: 	0


BlockClosure>>numArgsError:
	Receiver: [ Transcript
	show: p next;
	cr ]
	Arguments and temporary variables: 
		numArgsForInvocation: 	1
		printNArgs: 	[ :n | 
n printString , ' argument'
	,
		(n = 1
			ifTrue: [ '' ]
	...etc...
	Receiver's instance variables: 
		outerContext: 	UndefinedObject>>DoIt
		startpc: 	47
		numArgs: 	0


BlockClosure>>value:
	Receiver: [ Transcript
	show: p next;
	cr ]
	Arguments and temporary variables: 
		anArg: 	1
		newContext: 	nil
		ncv: 	nil
	Receiver's instance variables: 
		outerContext: 	UndefinedObject>>DoIt
		startpc: 	47
		numArgs: 	0


SmallInteger(Number)>>to:do:
	Receiver: 1
	Arguments and temporary variables: 
		stop: 	100
		aBlock: 	[ Transcript
	show: p next;
	cr ]
		nextValue: 	1
	Receiver's instance variables: 
1

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		p: 	a Random
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'|p|
p := Random new.
1 to: 100 do: [ Transcript show: p next; ...etc...
		itsSelection: 	a Text for '|p|
p := Random new.
1 to: 100 do: [ Transcript show:...etc...
		itsSelectionString: 	'|p|
p := Random new.
1 to: 100 do: [ Transcript show: p ne...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	| p |
	p := Random new.
	^ 1 to: 100 do: [ Transcript
			show: p nex...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(487268608)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(487268608)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(979741440)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(487268608)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@88)
		owner: 	a TransformWithLayoutMorph(96216320)
		submorphs: 	an Array(a RubPrimarySelectionMorph(437962496) a RubCursor(852688128...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (973673216) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(55192320)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(852688128)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(701956864))
		getMenuPolicy: 	a RubEditingArea(487268608)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	THERE_BE_DRAGONS_HERE
Instance of ThreadSafeTranscript did not understand #show:show:
7 December 2017 6:19:50.796375 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

ThreadSafeTranscript(Object)>>doesNotUnderstand: #show:show:
	Receiver: Transcript
	Arguments and temporary variables: 
		aMessage: 	show: ' ' show: 0.39492957638340515
		exception: 	MessageNotUnderstood: ThreadSafeTranscript>>show:show:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(808616192) a RubPluggableTextMorph...etc...
		announceur: 	an Announcer
		stream: 	a WriteStream
		accessSemaphore: 	a Mutex
		deferredClear: 	false
		deferredEndEntry: 	true
		stepContents: 	'0.7100765340542777
0.2563078502455297
0.7660390766179371
0.81876...etc...


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		p: 	a Random
		x: 	1
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'|p|
p := Random new.
1 to: 100 do: [ :x | Transcript show: x; ...etc...
		itsSelection: 	a Text for '|p|
p := Random new.
1 to: 100 do: [ :x | Transcript ...etc...
		itsSelectionString: 	'|p|
p := Random new.
1 to: 100 do: [ :x | Transcript show:...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	| p |
	p := Random new.
	^ 1 to: 100 do: [ :x | 
		Transcript
			sho...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(487268608)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(487268608)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(979741440)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(487268608)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@88)
		owner: 	a TransformWithLayoutMorph(96216320)
		submorphs: 	an Array(a RubPrimarySelectionMorph(437962496) a RubCursor(852688128...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (973673216) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(55192320)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(852688128)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(893011200))
		getMenuPolicy: 	a RubEditingArea(487268608)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(979741440)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(254651648))(a FadingMorp...etc...
		lastStepTime: 	193588
		lastStepMessage: 	nil
		lastCycleTime: 	193519
		alarms: 	a Heap()
		lastAlarmTime: 	193498
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(254651648) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (897695488) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(254651648))(a FadingMorp...etc...
		lastStepTime: 	193588
		lastStepMessage: 	nil
		lastCycleTime: 	193519
		alarms: 	a Heap()
		lastAlarmTime: 	193498
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecordTHERE_BE_DRAGONS_HERE
Instance of SmallInteger did not understand #,
7 December 2017 6:21:02.036375 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

SmallInteger(Object)>>doesNotUnderstand: #,
	Receiver: 1
	Arguments and temporary variables: 
		aMessage: 	, ' '
		exception: 	MessageNotUnderstood: SmallInteger>>,
		resumeValue: 	nil
	Receiver's instance variables: 
1

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		p: 	a Random
		x: 	1
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'|p|
p := Random new.
1 to: 100 do: [ :x | Transcript show: x,'...etc...
		itsSelection: 	a Text for '|p|
p := Random new.
1 to: 100 do: [ :x | Transcript ...etc...
		itsSelectionString: 	'|p|
p := Random new.
1 to: 100 do: [ :x | Transcript show:...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	| p |
	p := Random new.
	^ 1 to: 100 do: [ :x | 
		Transcript
			sho...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(487268608)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(487268608)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(979741440)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(487268608)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@88)
		owner: 	a TransformWithLayoutMorph(96216320)
		submorphs: 	an Array(a RubPrimarySelectionMorph(437962496) a RubCursor(852688128...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (973673216) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(55192320)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(852688128)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(146944768))
		getMenuPolicy: 	a RubEditingArea(487268608)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(979741440)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(97209600))(a FadingMorph...etc...
		lastStepTime: 	263278
		lastStepMessage: 	nil
		lastCycleTime: 	264828
		alarms: 	a Heap()
		lastAlarmTime: 	264806
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(97209600) a GLMSyst...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (897695488) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(97209600))(a FadingMorph...etc...
		lastStepTime: 	263278
		lastStepMessage: 	nil
		lastCycleTime: 	264828
		alarms: 	a Heap()
		lastAlarmTime: 	264806
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(97209600))(a FadingMorph...etc...
		lastStepTime: 	263278
		lastStepMessage: 	nil
		lastCycleTime: 	264828
		alarms: 	a Heap()
		lastAlarmTime: 	264806
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(97209600))(a FadingMorph...etc...
		lastStepTime: 	263278
		lastStepMessage: 	nil
		lastCycleTime: 	264828
		alarms: 	a Heap()
		lastAlarmTime: 	264806
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(97209600) a GLMSyst...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (897695488) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(86000896)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
MissingClassError: Cannot install method in non-existent behavior CanvasMorph
7 December 2017 7:38:25.2485 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

MethodChunk>>handleMissingBehavior
	Receiver: a MethodChunk(drawBlock: aBlock
    drawBlock := aBlock.
    self changed.
)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		contents: 	'drawBlock: aBlock
    drawBlock := aBlock.
    self changed.
'
		behaviorName: 	#CanvasMorph
		isMeta: 	false
		categoryName: 	'as yet unclassified'
		stamp: 	'me 3/13/2013 19:40'


MethodChunk>>importFor:
	Receiver: a MethodChunk(drawBlock: aBlock
    drawBlock := aBlock.
    self changed.
)
	Arguments and temporary variables: 
		requestor: 	nil
	Receiver's instance variables: 
		contents: 	'drawBlock: aBlock
    drawBlock := aBlock.
    self changed.
'
		behaviorName: 	#CanvasMorph
		isMeta: 	false
		categoryName: 	'as yet unclassified'
		stamp: 	'me 3/13/2013 19:40'


[ :declaration | 
requestor ifNotNil: [ requestor contents: declaration contents ].
value := declaration importFor: requestor ] in CodeImporter>>evaluateDeclarations
	Receiver: a CodeImporter
	Arguments and temporary variables: 
		value: 	BorderMorph
		declaration: 	a MethodChunk(drawBlock: aBlock
    drawBlock := aBlock.
    self ...etc...
	Receiver's instance variables: 
		readStream: 	MultiByteFileStream: 'C:\Documents and Settings\Karl Rege\Desktop\C...etc...
		codeDeclarations: 	an OrderedCollection(a DoItChunk('From Pharo1.4 of 18 April 2...etc...
		parserClass: 	ChunkFileFormatParser
		requestor: 	nil


OrderedCollection>>do:
	Receiver: an OrderedCollection(a DoItChunk('From Pharo1.4 of 18 April 2012 [Latest update: #14457] o...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :declaration | 
requestor ifNotNil: [ requestor contents: declaration...etc...
		index: 	3
	Receiver's instance variables: 
		array: 	an Array(a DoItChunk('From Pharo1.4 of 18 April 2012 [Latest update: #14...etc...
		firstIndex: 	1
		lastIndex: 	5


CodeImporter>>evaluateDeclarations
	Receiver: a CodeImporter
	Arguments and temporary variables: 
		value: 	BorderMorph
	Receiver's instance variables: 
		readStream: 	MultiByteFileStream: 'C:\Documents and Settings\Karl Rege\Desktop\C...etc...
		codeDeclarations: 	an OrderedCollection(a DoItChunk('From Pharo1.4 of 18 April 2...etc...
		parserClass: 	ChunkFileFormatParser
		requestor: 	nil


CodeImporter class>>evaluateReadStream:
	Receiver: CodeImporter
	Arguments and temporary variables: 
		aReadStream: 	MultiByteFileStream: 'C:\Documents and Settings\Karl Rege\Desktop\...etc...
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#codeDeclarations->CodeImporter>>#codeDeclaratio...etc...
		format: 	65540
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#CodeImporter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#CodeImport
		traitComposition: 	{}
		localSelectors: 	nil


[ | newStream |
newSet
	ifNotNil: [ (aStream respondsTo: #converter:)
			ifFalse: [ newStream := MultiByteBinaryOrTextStream
					with: aStream contentsOfEntireFile.
				newStream reset ]
			ifTrue: [ newStream := aStream ].
		self newChanges: newSet.
		newStream setConverterForCode.
		CodeImporter evaluateReadStream: newStream readStream ].
aStream close ] in ChangeSet class>>newChangesFromStream:named:
	Receiver: ChangeSet
	Arguments and temporary variables: 
		aStream: 	MultiByteFileStream: 'C:\Documents and Settings\Karl Rege\Desktop\Canv...etc...
		aName: 	'CanvasMorph3.st'
		oldChanges: 	a ChangeSet named Unnamed
		newName: 	'CanvasMorph3'
		newSet: 	a ChangeSet named CanvasMorph3
		newStream: 	MultiByteFileStream: 'C:\Documents and Settings\Karl Rege\Desktop\Ca...etc...
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#absorbClass:from:->ChangeSet>>#absorbClass:from...etc...
		format: 	65540
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ChangeSet
		classPool: 	a Dictionary(#AllChangeSets->an OrderedCollection(a ChangeSet named ...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'System-Changes'
		traitComposition: 	{}
		localSelectors: 	nil
		current: 	a ChangeSet named CanvasMorph3


BlockClosure>>ensure:
	Receiver: [ | newStream |
newSet
	ifNotNil: [ (aStream respondsTo: #converter:)
			ifFalse: [ newStr...etc...
	Arguments and temporary variables: 
		aBlock: 	[ self newChanges: oldChanges ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ChangeSet class>>newChangesFromStream:named:
		startpc: 	101
		numArgs: 	0


ChangeSet class>>newChangesFromStream:named:
	Receiver: ChangeSet
	Arguments and temporary variables: 
		aStream: 	MultiByteFileStream: 'C:\Documents and Settings\Karl Rege\Desktop\Canv...etc...
		aName: 	'CanvasMorph3.st'
		oldChanges: 	a ChangeSet named Unnamed
		newName: 	'CanvasMorph3'
		newSet: 	a ChangeSet named CanvasMorph3
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#absorbClass:from:->ChangeSet>>#absorbClass:from...etc...
		format: 	65540
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ChangeSet
		classPool: 	a Dictionary(#AllChangeSets->an OrderedCollection(a ChangeSet named ...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'System-Changes'
		traitComposition: 	{}
		localSelectors: 	nil
		current: 	a ChangeSet named CanvasMorph3


[ ff := FileStream readOnlyFileNamed: fn.
self newChangesFromStream: ff named: fn asFileReference basename ] in ChangeSet class>>fileIntoNewChangeSet:
	Receiver: ChangeSet
	Arguments and temporary variables: 
		fullName: 	'C:\Documents and Settings\Karl Rege\Desktop\CanvasMorph3.st'
		fn: 	'C:\Documents and Settings\Karl Rege\Desktop\CanvasMorph3.st'
		ff: 	MultiByteFileStream: 'C:\Documents and Settings\Karl Rege\Desktop\CanvasMor...etc...
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#absorbClass:from:->ChangeSet>>#absorbClass:from...etc...
		format: 	65540
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ChangeSet
		classPool: 	a Dictionary(#AllChangeSets->an OrderedCollection(a ChangeSet named ...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'System-Changes'
		traitComposition: 	{}
		localSelectors: 	nil
		current: 	a ChangeSet named CanvasMorph3


BlockClosure>>ensure:
	Receiver: [ ff := FileStream readOnlyFileNamed: fn.
self newChangesFromStream: ff named: fn asFileRe...etc...
	Arguments and temporary variables: 
		aBlock: 	[ ff ifNotNil: [ ff close ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ChangeSet class>>fileIntoNewChangeSet:
		startpc: 	99
		numArgs: 	0


ChangeSet class>>fileIntoNewChangeSet:
	Receiver: ChangeSet
	Arguments and temporary variables: 
		ff: 	MultiByteFileStream: 'C:\Documents and Settings\Karl Rege\Desktop\CanvasMor...etc...
		fullName: 	'C:\Documents and Settings\Karl Rege\Desktop\CanvasMorph3.st'
		fn: 	'C:\Documents and Settings\Karl Rege\Desktop\CanvasMorph3.st'
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#absorbClass:from:->ChangeSet>>#absorbClass:from...etc...
		format: 	65540
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ChangeSet
		classPool: 	a Dictionary(#AllChangeSets->an OrderedCollection(a ChangeSet named ...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'System-Changes'
		traitComposition: 	{}
		localSelectors: 	nil
		current: 	a ChangeSet named CanvasMorph3


SimpleServiceEntry>>THERE_BE_DRAGONS_HERE
#openInWorld was sent to nil
14 December 2017 2:57:05.62375 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #openInWorld
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	openInWorld
		exception: 	MessageNotUnderstood: receiver of "openInWorld" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		c: 	nil
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'| c |
c = CanvasMorph new.
c openInWorld.'
		itsSelection: 	a Text for '| c |
c = CanvasMorph new.
c openInWorld.'
		itsSelectionString: 	'| c |
c = CanvasMorph new.
c openInWorld.'
	Receiver's instance variables: 
		ast: 	DoIt
	| c |
	c = CanvasMorph new.
	^ c openInWorld
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(341764864)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(341764864)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(119104768)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(341764864)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@69)
		owner: 	a TransformWithLayoutMorph(598665984)
		submorphs: 	an Array(a RubPrimarySelectionMorph(708372224) a RubCursor(412253952...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (971536128) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(267116800)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(412253952)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(218474752))
		getMenuPolicy: 	a RubEditingArea(341764864)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(119104768)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(44568832))(a FadingMorph...etc...
		lastStepTime: 	346672
		lastStepMessage: 	nil
		lastCycleTime: 	346694
		alarms: 	a Heap()
		lastAlarmTime: 	346672
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(44568832) a GLMSyst...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (685587200) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(44568832))(a FadingMorph...etc...
		lastStepTime: 	346672
		lastStepMessage: 	nil
		lastCycleTime: 	346694
		alarms: 	a Heap()
		lastAlarmTime: 	346672
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(44568832))(a FadingMorph...etc...
		lastStepTime: 	346672
		lastStepMessage: 	nil
		lastCycleTime: 	346694
		alarms: 	a Heap()
		lastAlarmTime: 	346672
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(44568832))(a FadingMorph...etc...
		lastStepTime: 	346672
		lastStepMessage: 	nil
		lastCycleTime: 	346694
		alarms: 	a Heap()
		lastAlarmTime: 	346672
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(44568832) a GLMSyst...etc...
		fullBounds: 	(0@0) corner: (1592@828)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (685587200) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(435962624)
	Arguments and temporary variables: 
		aPoint: 	(732@246)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(341764864)
	Receiver's instance variables: 
		bounds: 	(730.0@238.0) corner: (937.0@472.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(805252352)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(730.0@238.0) corner: (937.0@472.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (1023820544) [other:  (basicColor -> Color veryDark...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(435943680)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(435962624)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(730.0@238.0) corner: (937.0@472.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(805252352)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(730.0@238.0) corner: (937.0@472.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (1023820544) [other:  (basicColor -> Color veryDark...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(435943680)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(435962624)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(730.0@238.0) corner: (937.0@472.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(805252352)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(730.0@238.0) corner: (937.0@472.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (1023820544) [other:  (basicColor -> Color veryDark...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(435943680)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(341764864)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(435962624)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@69)
		owner: 	a TransformWithLayoutMorph(598665984)
		submorphs: 	an Array(a RubPrimarySelectionMorph(708372224) a RubCursor(412253952...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (971536128) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(267116800)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(412253952)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(218474752))
		getMenuPolicy: 	a RubEditingArea(341764864)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(341764864)
	Arguments and temporary variables: 
		evt: 	[(62.0@25.0) mouseDown yellow 7482796 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@69)
		owner: 	a TransformWithLayoutMorph(598665984)
		submorphs: 	an Array(a RubPrimarySelectionMorph(708372224) a RubCursor(412253952...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (971536128) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(267116800)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(412253952)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(218474752))
		getMenuPolicy: 	a RubEditingArea(341764864)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(341764864)
	Arguments and temporary variables: 
		anEvent: 	[(62.0@25.0) mouseDown yellow 7482796 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@69)
		owner: 	a TransformWithLayoutMorph(598665984)
		submorphs: 	an Array(a RubPrimarySelectionMorph(708372224) a RubCursor(412253952...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (971536128) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(267116800)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(412253952)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(218474752))
		getMenuPolicy: 	a RubEditingArea(341764864)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(62.0@25.0) mouseDown yellow 7482796 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(341764864)
	Receiver's instance variables: 
		timeStamp: 	7482796
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(62.0@25.0)
		handler: 	a RubEditingArea(341764864)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(341764864)
	Arguments and temporary variables: 
		anEvent: 	[(62.0@25.0) mouseDown yellow 7482796 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@69)
		owner: 	a TransformWithLayoutMorph(598665984)
		submorphs: 	an Array(a RubPrimarySelectionMorph(708372224) a RubCursor(412253952...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (971536128) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(267116800)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(412253952)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(218474752))
		getMenuPolicy: 	a RubEditingArea(341764864)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(62.0@25.0) mouseDown yellow 7482796 nil]
		aMorph: 	a RubEditingArea(341764864)
		globalPt: 	(62.0@25.0)
		localEvt: 	[(62.0@25.0) mouseDown yellow 7482796 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(708372224)
		morphs: 	an Array(a RubPrimarySelectionMorph(708372224) a RubCursor(412253952))
		handler: 	a RubEditingArea(341764864)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(119104768)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(62.0@25.0) mouseDown yellow 7482796 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(62.0@25.0) mouseDown yellow 7482796 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	7482796
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(62.0@25.0)
		handler: 	a RubEditingArea(341764864)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(62.0@25.0) mouseDown yellow 7482796 nil]
		aMorph: 	a RubEditingArea(341764864)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(62.0@25.0) mouseDown yellow 7482796 nil]
		aMorph: 	a RubEditingArea(341764864)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(341764864)
	Arguments and temporary variables: 
		anEvent: 	[(62.0@25.0) mouseDown yellow 7482796 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@69)
		owner: 	a TransformWithLayoutMorph(598665984)
		submorphs: 	an Array(a RubPrimarySelectionMorph(708372224) a RubCursor(412253952...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (971536128) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(267116800)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(412253952)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(218474752))
		getMenuPolicy: 	a RubEditingArea(341764864)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(732@246) mouseDown yellow 7482796 nil]
		aMorph: 	a TransformWithLayoutMorph(598665984)
		globalPt: 	(732@246)
		localEvt: 	[(62.0@25.0) mouseDown yellow 7482796 nil]
		index: 	1
		child: 	a RubEditingArea(341764864)
		morphs: 	an Array(a RubEditingArea(341764864))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(119104768)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(732@246) mouseDown yellow 7482796 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(732@246) mouseDown yellow 7482796 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	7482796
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(732@246)
		handler: 	a RubScrolledTextMorph(119104768)
		wasHandled: 	false
		whichButton:THERE_BE_DRAGONS_HERE
RegexSyntaxError:  no terminating ":"
23 October 2018 8:23:25.56 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

RxParser class>>signalSyntaxException:at:
	Receiver: RxParser
	Arguments and temporary variables: 
		errorString: 	' no terminating ":"'
		errorPosition: 	36
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#atom->RxParser>>#atom #branch->RxParser>>#branc...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#RxParser
		classPool: 	a Dictionary(#BackslashConstants->a Dictionary($e->Character escape ...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Regex-Core'
		traitComposition: 	{}
		localSelectors: 	nil


RxParser>>signalParseError:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	' no terminating ":"'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>inputUpTo:errorMessage:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aCharacter: 	$:
		aString: 	' no terminating ":"'
		accumulator: 	a WriteStream
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>messagePredicate
	Receiver: a RxParser
	Arguments and temporary variables: 
		spec: 	nil
		negated: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>atom
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>piece
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
RegexSyntaxError:  no terminating ":"
23 October 2018 8:23:33.63 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

RxParser class>>signalSyntaxException:at:
	Receiver: RxParser
	Arguments and temporary variables: 
		errorString: 	' no terminating ":"'
		errorPosition: 	36
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#atom->RxParser>>#atom #branch->RxParser>>#branc...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#RxParser
		classPool: 	a Dictionary(#BackslashConstants->a Dictionary($e->Character escape ...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Regex-Core'
		traitComposition: 	{}
		localSelectors: 	nil


RxParser>>signalParseError:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	' no terminating ":"'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>inputUpTo:errorMessage:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aCharacter: 	$:
		aString: 	' no terminating ":"'
		accumulator: 	a WriteStream
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>messagePredicate
	Receiver: a RxParser
	Arguments and temporary variables: 
		spec: 	nil
		negated: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>atom
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>piece
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	nil
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	a RxsPiece
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>regex
	Receiver: a RxParser
	Arguments and temporary variables: 
		branch: 	nil
		regex: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parseStream:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		tree: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parse:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


ByteString(String)>>asRegex
	Receiver: 'D:\My Documents\ZHAW Archiv\psp_hs17'
	Arguments and temporary variables: 

	Receiver's instance variables: 
'D:\My Documents\ZHAW Archiv\psp_hs17'

FileList>>filesMatching:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		files: 	#()
		aRegex: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	THERE_BE_DRAGONS_HERE
RegexSyntaxError:  no terminating ":"
23 October 2018 8:23:34.073 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

RxParser class>>signalSyntaxException:at:
	Receiver: RxParser
	Arguments and temporary variables: 
		errorString: 	' no terminating ":"'
		errorPosition: 	36
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#atom->RxParser>>#atom #branch->RxParser>>#branc...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#RxParser
		classPool: 	a Dictionary(#BackslashConstants->a Dictionary($e->Character escape ...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Regex-Core'
		traitComposition: 	{}
		localSelectors: 	nil


RxParser>>signalParseError:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	' no terminating ":"'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>inputUpTo:errorMessage:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aCharacter: 	$:
		aString: 	' no terminating ":"'
		accumulator: 	a WriteStream
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>messagePredicate
	Receiver: a RxParser
	Arguments and temporary variables: 
		spec: 	nil
		negated: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>atom
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>piece
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	nil
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	a RxsPiece
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>regex
	Receiver: a RxParser
	Arguments and temporary variables: 
		branch: 	nil
		regex: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parseStream:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		tree: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parse:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


ByteString(String)>>asRegex
	Receiver: 'D:\My Documents\ZHAW Archiv\psp_hs17'
	Arguments and temporary variables: 

	Receiver's instance variables: 
'D:\My Documents\ZHAW Archiv\psp_hs17'

FileList>>filesMatching:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		files: 	#()
		aRegex: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>listForPattern:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		newList: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>updateFileList
	Receiver: a FileList
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>reference:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ D:\
		tmpReference: 	File @ D:\
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>directory:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ D:\
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>selectedDirectory:
	Receiver: a FileList
	Arguments and temporary variables: 
		aFileDirectoryWrapper: 	a FileDirectoryWrapper
		file: 	File @ D:\
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


SimpleHierarchicalListMorph>>setSelectedMorph:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		aMorph: 	an IndentingListItemMorph(166437120)'D:'
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	true
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph>>mouseUp:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		event: 	[(226@497) mouseUp 3950687 nil]
		aMorph: 	an IndentingListItemMorph(166437120)'D:'
		wasHigh: 	true
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	true
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph(Morph)>>handleMouseUp:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		anEvent: 	[(226@497) mouseUp 3950687 nil]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	true
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(226@497) mouseUp 3950687 nil]
	Arguments and temporary variables: 
		anObject: 	a SimpleHierarchicalListMorph(411121920)
	Receiver's instance variables: 
		timeStamp: 	3950687
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(226@497)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


SimpleHierarchicalListMorph(Morph)>>handleEvent:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		anEvent: 	[(226@497) mouseUp 3950687 nil]
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	true
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph(Morph)>>handleFocusEvent:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		anEvent: 	[(226@497) mouseUp 3950687 nil]
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	true
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(226@497) mouseUp 3950687 nil]
		focusHolder: 	a SimpleHierarchicalListMorph(411121920)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(226@497) corner: (242@513)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(226@497) mouseUp 3950687 nil]
		targetOffset: 	(28.0@351.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 3950687 226 497 0 0 2 1)
		lastKeyScanCode: 	13
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


BlockClosure>>on:do:
	Receiver: [ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (an...etc...
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
ActiveWorld := priorWorld.
ActiveEvent := priorEvent.
A...etc...
	Receiver's instance variables: 
		outerContext: 	HandMorph>>sendFocusEvent:to:clear:
		startpc: 	67
		numArgs: 	0


WorldMorph(PasteUpMorph)>>becomeActiveDuring:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		aBlock: 	[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	ha...etc...
		priorWorld: 	a WorldMorph(562956288) [world]
		priorHand: 	a HandMorph(58125568)
		priorEvent: 	[(226@497) mouseOver red 3950546 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a SystemWindow(1028214528) a Spec...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (569522432) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		result: 	nil
		anEvent: 	[(226@497) mouseUp 3950687 nil]
		focusHolder: 	a SimpleHierarchicalListMorph(411121920)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(226@497) corner: (242@513)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(226@497) mouseUp 3950687 nil]
		targetOffset: 	(28.0@351.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 3950687 226 497 0 0 2 1)
		lastKeyScanCode: 	13
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(226@497) mouseUp 3950687 nil]
		focusHolder: 	a SimpleHierarchicalListMorph(411121920)
		aBlock: 	[ self mouseFocus: nil ]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(226@497) corner: (242@513)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(226@497) mouseUp 3950687 nil]
		targetOffset: 	(28.0@351.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 3950687 226 497 0 0 2 1)
		lastKeyScanCode: 	13
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendMouseEvent:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(226@497) mouseUp 3950687 nil]
	Receiver's instance variables: 
		bounds: 	(226@497) corner: (242@513)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(226@497) mouseUp 3950687 nil]
		targetOffset: 	(28.0@351.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 3950687 226 497 0 0 2 1)
		lastKeyScanCode: 	13
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>handleEvent:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
RegexSyntaxError:  no terminating ":"
23 October 2018 8:23:35.131 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

RxParser class>>signalSyntaxException:at:
	Receiver: RxParser
	Arguments and temporary variables: 
		errorString: 	' no terminating ":"'
		errorPosition: 	36
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#atom->RxParser>>#atom #branch->RxParser>>#branc...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#RxParser
		classPool: 	a Dictionary(#BackslashConstants->a Dictionary($e->Character escape ...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Regex-Core'
		traitComposition: 	{}
		localSelectors: 	nil


RxParser>>signalParseError:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	' no terminating ":"'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>inputUpTo:errorMessage:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aCharacter: 	$:
		aString: 	' no terminating ":"'
		accumulator: 	a WriteStream
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>messagePredicate
	Receiver: a RxParser
	Arguments and temporary variables: 
		spec: 	nil
		negated: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>atom
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>piece
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	nil
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	a RxsPiece
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>regex
	Receiver: a RxParser
	Arguments and temporary variables: 
		branch: 	nil
		regex: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parseStream:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		tree: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parse:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


ByteString(String)>>asRegex
	Receiver: 'D:\My Documents\ZHAW Archiv\psp_hs17'
	Arguments and temporary variables: 

	Receiver's instance variables: 
'D:\My Documents\ZHAW Archiv\psp_hs17'

FileList>>filesMatching:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		files: 	#()
		aRegex: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>listForPattern:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		newList: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>updateFileList
	Receiver: a FileList
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>reference:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ D:\
		tmpReference: 	File @ D:\
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>directory:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ D:\
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>selectedDirectory:
	Receiver: a FileList
	Arguments and temporary variables: 
		aFileDirectoryWrapper: 	a FileDirectoryWrapper
		file: 	File @ D:\
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


SimpleHierarchicalListMorph>>setSelectedMorph:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		aMorph: 	an IndentingListItemMorph(166437120)'D:'
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph>>mouseUp:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		event: 	[(218@497) mouseUp 3951718 nil]
		aMorph: 	an IndentingListItemMorph(166437120)'D:'
		wasHigh: 	true
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph(Morph)>>handleMouseUp:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		anEvent: 	[(218@497) mouseUp 3951718 nil]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(218@497) mouseUp 3951718 nil]
	Arguments and temporary variables: 
		anObject: 	a SimpleHierarchicalListMorph(411121920)
	Receiver's instance variables: 
		timeStamp: 	3951718
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(218@497)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


SimpleHierarchicalListMorph(Morph)>>handleEvent:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		anEvent: 	[(218@497) mouseUp 3951718 nil]
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph(Morph)>>handleFocusEvent:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		anEvent: 	[(218@497) mouseUp 3951718 nil]
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(218@497) mouseUp 3951718 nil]
		focusHolder: 	a SimpleHierarchicalListMorph(411121920)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(218@497) corner: (234@513)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(218@497) corner: (234@513)
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(218@497) mouseUp 3951718 nil]
		targetOffset: 	(20.0@351.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 3951718 218 497 0 0 1 1)
		lastKeyScanCode: 	13
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


BlockClosure>>on:do:
	Receiver: [ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (an...etc...
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
ActiveWorld := priorWorld.
ActiveEvent := priorEvent.
A...etc...
	Receiver's instance variables: 
		outerContext: 	HandMorph>>sendFocusEvent:to:clear:
		startpc: 	67
		numArgs: 	0


WorldMorph(PasteUpMorph)>>becomeActiveDuring:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		aBlock: 	[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	ha...etc...
		priorWorld: 	a WorldMorph(562956288) [world]
		priorHand: 	a HandMorph(58125568)
		priorEvent: 	[(218@497) mouseOver red 3951609 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a SystemWindow(1028214528) a Spec...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (569522432) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		result: 	nil
		anEvent: 	[(218@497) mouseUp 3951718 nil]
		focusHolder: 	a SimpleHierarchicalListMorph(411121920)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(218@497) corner: (234@513)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(218@497) corner: (234@513)
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(218@497) mouseUp 3951718 nil]
		targetOffset: 	(20.0@351.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 3951718 218 497 0 0 1 1)
		lastKeyScanCode: 	13
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(218@497) mouseUp 3951718 nil]
		focusHolder: 	a SimpleHierarchicalListMorph(411121920)
		aBlock: 	[ self mouseFocus: nil ]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(218@497) corner: (234@513)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(218@497) corner: (234@513)
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(218@497) mouseUp 3951718 nil]
		targetOffset: 	(20.0@351.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 3951718 218 497 0 0 1 1)
		lastKeyScanCode: 	13
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendMouseEvent:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(218@497) mouseUp 3951718 nil]
	Receiver's instance variables: 
		bounds: 	(218@497) corner: (234@513)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(218@497) corner: (234@513)
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(218@497) mouseUp 3951718 nil]
		targetOffset: 	(20.0@351.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 3951718 218 497 0 0 1 1)
		lastKeyScanCode: 	13
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>handleEvent:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(218@497) mouseUp 3951718 nil]
		evt: 	[(218@497) mouseUp 3951718 nil]
	Receiver's instance variables: 
		bounds: 	(218@497) corner: (234@513)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(218@497) corner: (234@513)
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(218@497) mouseUp 3951718 nil]
		targetOffset: 	(20.0@351.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 3951718 218 497 0 0 1 1)
		lastKeyScanCode: 	13
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>processEventsFromQueue:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
RegexSyntaxError:  no terminating ":"
23 October 2018 8:23:36.444 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

RxParser class>>signalSyntaxException:at:
	Receiver: RxParser
	Arguments and temporary variables: 
		errorString: 	' no terminating ":"'
		errorPosition: 	36
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#atom->RxParser>>#atom #branch->RxParser>>#branc...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#RxParser
		classPool: 	a Dictionary(#BackslashConstants->a Dictionary($e->Character escape ...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Regex-Core'
		traitComposition: 	{}
		localSelectors: 	nil


RxParser>>signalParseError:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	' no terminating ":"'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>inputUpTo:errorMessage:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aCharacter: 	$:
		aString: 	' no terminating ":"'
		accumulator: 	a WriteStream
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>messagePredicate
	Receiver: a RxParser
	Arguments and temporary variables: 
		spec: 	nil
		negated: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>atom
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>piece
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	nil
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	a RxsPiece
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>regex
	Receiver: a RxParser
	Arguments and temporary variables: 
		branch: 	nil
		regex: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parseStream:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		tree: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parse:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


ByteString(String)>>asRegex
	Receiver: 'D:\My Documents\ZHAW Archiv\psp_hs17'
	Arguments and temporary variables: 

	Receiver's instance variables: 
'D:\My Documents\ZHAW Archiv\psp_hs17'

FileList>>filesMatching:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		files: 	#()
		aRegex: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>listForPattern:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		newList: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>updateFileList
	Receiver: a FileList
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>reference:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ D:\
		tmpReference: 	File @ D:\
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>directory:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ D:\
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>selectedDirectory:
	Receiver: a FileList
	Arguments and temporary variables: 
		aFileDirectoryWrapper: 	a FileDirectoryWrapper
		file: 	File @ D:\
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


SimpleHierarchicalListMorph>>setSelectedMorph:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		aMorph: 	an IndentingListItemMorph(166437120)'D:'
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph>>mouseUp:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		event: 	[(215@498) mouseUp 3953031 nil]
		aMorph: 	an IndentingListItemMorph(166437120)'D:'
		wasHigh: 	true
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedETHERE_BE_DRAGONS_HERE
RegexSyntaxError:  no terminating ":"
23 October 2018 8:23:49.188 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

RxParser class>>signalSyntaxException:at:
	Receiver: RxParser
	Arguments and temporary variables: 
		errorString: 	' no terminating ":"'
		errorPosition: 	36
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#atom->RxParser>>#atom #branch->RxParser>>#branc...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#RxParser
		classPool: 	a Dictionary(#BackslashConstants->a Dictionary($e->Character escape ...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Regex-Core'
		traitComposition: 	{}
		localSelectors: 	nil


RxParser>>signalParseError:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	' no terminating ":"'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>inputUpTo:errorMessage:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aCharacter: 	$:
		aString: 	' no terminating ":"'
		accumulator: 	a WriteStream
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>messagePredicate
	Receiver: a RxParser
	Arguments and temporary variables: 
		spec: 	nil
		negated: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>atom
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>piece
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	nil
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	a RxsPiece
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>regex
	Receiver: a RxParser
	Arguments and temporary variables: 
		branch: 	nil
		regex: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parseStream:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		tree: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parse:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


ByteString(String)>>asRegex
	Receiver: 'D:\My Documents\ZHAW Archiv\psp_hs17'
	Arguments and temporary variables: 

	Receiver's instance variables: 
'D:\My Documents\ZHAW Archiv\psp_hs17'

FileList>>filesMatching:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		files: 	#()
		aRegex: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>listForPattern:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		newList: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>updateFileList
	Receiver: a FileList
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>reference:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ D:\
		tmpReference: 	File @ D:\
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>directory:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ D:\
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>selectedDirectory:
	Receiver: a FileList
	Arguments and temporary variables: 
		aFileDirectoryWrapper: 	a FileDirectoryWrapper
		file: 	File @ D:\
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


SimpleHierarchicalListMorph>>setSelectedMorph:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		aMorph: 	an IndentingListItemMorph(166437120)'D:'
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	true
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph>>mouseUp:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		event: 	[(236@498) mouseUp 3965781 nil]
		aMorph: 	an IndentingListItemMorph(166437120)'D:'
		wasHigh: 	true
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	true
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil
THERE_BE_DRAGONS_HERE
RegexSyntaxError:  no terminating ":"
23 October 2018 8:23:49.476 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

RxParser class>>signalSyntaxException:at:
	Receiver: RxParser
	Arguments and temporary variables: 
		errorString: 	' no terminating ":"'
		errorPosition: 	36
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#atom->RxParser>>#atom #branch->RxParser>>#branc...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#RxParser
		classPool: 	a Dictionary(#BackslashConstants->a Dictionary($e->Character escape ...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Regex-Core'
		traitComposition: 	{}
		localSelectors: 	nil


RxParser>>signalParseError:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	' no terminating ":"'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>inputUpTo:errorMessage:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aCharacter: 	$:
		aString: 	' no terminating ":"'
		accumulator: 	a WriteStream
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>messagePredicate
	Receiver: a RxParser
	Arguments and temporary variables: 
		spec: 	nil
		negated: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>atom
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>piece
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	nil
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	a RxsPiece
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>regex
	Receiver: a RxParser
	Arguments and temporary variables: 
		branch: 	nil
		regex: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parseStream:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		tree: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parse:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


ByteString(String)>>asRegex
	Receiver: 'D:\My Documents\ZHAW Archiv\psp_hs17'
	Arguments and temporary variables: 

	Receiver's instance variables: 
'D:\My Documents\ZHAW Archiv\psp_hs17'

FileList>>filesMatching:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		files: 	#()
		aRegex: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>listForPattern:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		newList: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>updateFileList
	Receiver: a FileList
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>reference:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ D:\
		tmpReference: 	File @ D:\
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>directory:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ D:\
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>selectedDirectory:
	Receiver: a FileList
	Arguments and temporary variables: 
		aFileDirectoryWrapper: 	a FileDirectoryWrapper
		file: 	File @ D:\
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\
		volumeList: 	#('[]' ' D:')
		volumeListIndex: 	2
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


SimpleHierarchicalListMorph>>setSelectedMorph:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		aMorph: 	an IndentingListItemMorph(166437120)'D:'
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	true
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph>>mouseUp:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		event: 	[(236@498) mouseUp 3966046 nil]
		aMorph: 	an IndentingListItemMorph(166437120)'D:'
		wasHigh: 	true
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	true
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph(Morph)>>handleMouseUp:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		anEvent: 	[(236@498) mouseUp 3966046 nil]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	true
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(236@498) mouseUp 3966046 nil]
	Arguments and temporary variables: 
		anObject: 	a SimpleHierarchicalListMorph(411121920)
	Receiver's instance variables: 
		timeStamp: 	3966046
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(236@498)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


SimpleHierarchicalListMorph(Morph)>>handleEvent:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		anEvent: 	[(236@498) mouseUp 3966046 nil]
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	true
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph(Morph)>>handleFocusEvent:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		anEvent: 	[(236@498) mouseUp 3966046 nil]
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	true
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(236@498) mouseUp 3966046 nil]
		focusHolder: 	a SimpleHierarchicalListMorph(411121920)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(236@498) corner: (252@514)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(236@498) mouseUp 3966046 nil]
		targetOffset: 	(38.0@352.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 3966046 236 498 0 0 2 1)
		lastKeyScanCode: 	8
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


BlockClosure>>on:do:
	Receiver: [ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (an...etc...
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
ActiveWorld := priorWorld.
ActiveEvent := priorEvent.
A...etc...
	Receiver's instance variables: 
		outerContext: 	HandMorph>>sendFocusEvent:to:clear:
		startpc: 	67
		numArgs: 	0


WorldMorph(PasteUpMorph)>>becomeActiveDuring:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		aBlock: 	[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	ha...etc...
		priorWorld: 	a WorldMorph(562956288) [world]
		priorHand: 	a HandMorph(58125568)
		priorEvent: 	[(236@498) mouseOver red 3965937 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a SystemWindow(1028214528) a Spec...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (569522432) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		result: 	nil
		anEvent: 	[(236@498) mouseUp 3966046 nil]
		focusHolder: 	a SimpleHierarchicalListMorph(411121920)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(236@498) corner: (252@514)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(236@498) mouseUp 3966046 nil]
		targetOffset: 	(38.0@352.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 3966046 236 498 0 0 2 1)
		lastKeyScanCode: 	8
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(236@498) mouseUp 3966046 nil]
		focusHolder: 	a SimpleHierarchicalListMorph(411121920)
		aBlock: 	[ self mouseFocus: nil ]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(236@498) corner: (252@514)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(236@498) mouseUp 3966046 nil]
		targetOffset: 	(38.0@352.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 3966046 236 498 0 0 2 1)
		lastKeyScanCode: 	8
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendMouseEvent:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(236@498) mouseUp 3966046 nil]
	Receiver's instance variables: 
		bounds: 	(236@498) corner: (252@514)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(236@498) mouseUp 3966046 nil]
		targetOffset: 	(38.0@352.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 3966046 236 498 0 0 2 1)
		lastKeyScanCode: 	8
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>handleEvent:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(236@498) mouseUp 3966046 nil]
		evt: 	[(236@498) mouseUp 3966046 nil]
	Receiver's instance variables: 
		bounds: 	(236@498) corner: (252@514)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(236@498) mouseUp 3966046 nil]
		targetOffset: 	(38.0@352.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 3966046 236 498 0 0 2 1)
		lastKeyScanCode: 	8
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>processEventsFromQueue:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEventQueue: 	an InputEventSensor
		evt: 	[(236@498) mouseUp 3966046 nil]
		evtBuf: 	#(1 3966046 236 498 0 0 2 1)
		type: 	1
		hadAny: 	false
	Receiver's instance variables: 
		bounds: 	(236@498) corner: (252@514)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(236@498) mouseUp 3966046 nil]
		targetOffset: 	(38.0@352.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 3966046 236 498 0 0 2 1)
		lastKeyScanCode: 	8
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>processEvents
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(236@498) corner: (252@514)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(236@498) mouseUp 3966046 nil]
		targetOffset: 	(38.0@352.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 3966046 236 498 0 0 2 1)
		lastKeyScanCode: 	8
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		h: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(352119552))(a SearchMorp...etc...
		lastStepTime: 	108531
		lastStepMessage: 	nil
		lastCycleTime: 	108545
		alarms: 	a Heap()
		lastAlarmTime: 	108531
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


Array(SequenceableCollection)>>do:
	Receiver: an Array(a HandMorph(58125568))
	Arguments and temporary variables: 
		aBlock: 	[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ]
		index: 	1
	Receiver's instance variables: 
an Array(a HandMorph(58125568))

WorldState>>handsDo:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aBlock: 	[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(352119552))(a SearchMorp...etc...
		lastStepTime: 	108531
		lastStepMessage: 	nil
		lastCycleTime: 	108545
		alarms: 	a Heap()
		lastAlarmTime: 	108531
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(352119552))(a SearchMorp...etc...
		lastStepTime: 	108531
		lastStepMessage: 	nil
		lastCycleTime: 	108545
		alarms: 	a Heap()
		lastAlarmTime: 	108531
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(352119552))(a SearchMorp...etc...
		lastStepTime: 	108531
		lastStepMessage: 	nil
		lastCycleTime: 	108545
		alarms: 	a Heap()
		lastAlarmTime: 	108531
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a SystemWindow(1028214528) a Spec...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (569522432) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil



--- The full stack ---
RxParser class>>signalSyntaxException:at:
RxParser>>signalParseError:
RxParser>>inputUpTo:errorMessage:
RxParser>>messagePredicate
RxParser>>atom
RxParser>>piece
RxParser>>branch
RxParser>>branch
RxParser>>regex
RxParser>>parseStream:
RxParser>>parse:
ByteString(String)>>asRegex
FileList>>filesMatching:
FileList>>listForPattern:
FileList>>updateFileList
FileList>>reference:
FileList>>directory:
FileList>>selectedDirectory:
SimpleHierarchicalListMorph>>setSelectedMorph:
SimpleHierarchicalListMorph>>mouseUp:
SimpleHierarchicalListMorph(Morph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
SimpleHierarchicalListMorph(Morph)>>handleEvent:
SimpleHierarchicalListMorph(Morph)>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph(PasteUpMorph)>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycTHERE_BE_DRAGONS_HERE
RegexSyntaxError:  no terminating ":"
23 October 2018 8:23:53.753 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

RxParser class>>signalSyntaxException:at:
	Receiver: RxParser
	Arguments and temporary variables: 
		errorString: 	' no terminating ":"'
		errorPosition: 	36
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#atom->RxParser>>#atom #branch->RxParser>>#branc...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#RxParser
		classPool: 	a Dictionary(#BackslashConstants->a Dictionary($e->Character escape ...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Regex-Core'
		traitComposition: 	{}
		localSelectors: 	nil


RxParser>>signalParseError:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	' no terminating ":"'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>inputUpTo:errorMessage:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aCharacter: 	$:
		aString: 	' no terminating ":"'
		accumulator: 	a WriteStream
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>messagePredicate
	Receiver: a RxParser
	Arguments and temporary variables: 
		spec: 	nil
		negated: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>atom
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>piece
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	nil
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	a RxsPiece
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>regex
	Receiver: a RxParser
	Arguments and temporary variables: 
		branch: 	nil
		regex: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parseStream:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		tree: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parse:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


ByteString(String)>>asRegex
	Receiver: 'D:\My Documents\ZHAW Archiv\psp_hs17'
	Arguments and temporary variables: 

	Receiver's instance variables: 
'D:\My Documents\ZHAW Archiv\psp_hs17'

FileList>>filesMatching:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		files: 	#()
		aRegex: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ C:\dell
		volumeList: 	#('[]' ' C:' '  dell')
		volumeListIndex: 	3
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>listForPattern:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		newList: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ C:\dell
		volumeList: 	#('[]' ' C:' '  dell')
		volumeListIndex: 	3
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>updateFileList
	Receiver: a FileList
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ C:\dell
		volumeList: 	#('[]' ' C:' '  dell')
		volumeListIndex: 	3
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>reference:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ C:\dell
		tmpReference: 	File @ C:\dell
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ C:\dell
		volumeList: 	#('[]' ' C:' '  dell')
		volumeListIndex: 	3
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>directory:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ C:\dell
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ C:\dell
		volumeList: 	#('[]' ' C:' '  dell')
		volumeListIndex: 	3
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>selectedDirectory:
	Receiver: a FileList
	Arguments and temporary variables: 
		aFileDirectoryWrapper: 	a FileDirectoryWrapper
		file: 	File @ C:\dell
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ C:\dell
		volumeList: 	#('[]' ' C:' '  dell')
		volumeListIndex: 	3
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


SimpleHierarchicalListMorph>>setSelectedMorph:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		aMorph: 	an IndentingListItemMorph(574009600)'dell'
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	true
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph>>mouseUp:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		event: 	[(225@157) mouseUp 3970328 nil]
		aMorph: 	an IndentingListItemMorph(574009600)'dell'
		wasHigh: 	true
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	true
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
	THERE_BE_DRAGONS_HERE
RegexSyntaxError:  no terminating ":"
23 October 2018 8:24:10.931 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

RxParser class>>signalSyntaxException:at:
	Receiver: RxParser
	Arguments and temporary variables: 
		errorString: 	' no terminating ":"'
		errorPosition: 	36
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#atom->RxParser>>#atom #branch->RxParser>>#branc...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#RxParser
		classPool: 	a Dictionary(#BackslashConstants->a Dictionary($e->Character escape ...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Regex-Core'
		traitComposition: 	{}
		localSelectors: 	nil


RxParser>>signalParseError:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	' no terminating ":"'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>inputUpTo:errorMessage:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aCharacter: 	$:
		aString: 	' no terminating ":"'
		accumulator: 	a WriteStream
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>messagePredicate
	Receiver: a RxParser
	Arguments and temporary variables: 
		spec: 	nil
		negated: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>atom
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>piece
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	nil
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	a RxsPiece
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>regex
	Receiver: a RxParser
	Arguments and temporary variables: 
		branch: 	nil
		regex: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parseStream:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		tree: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parse:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


ByteString(String)>>asRegex
	Receiver: 'D:\My Documents\ZHAW Archiv\psp_hs17'
	Arguments and temporary variables: 

	Receiver's instance variables: 
'D:\My Documents\ZHAW Archiv\psp_hs17'

FileList>>filesMatching:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		files: 	an Array(File @ D:\My Documents\ZHAW Archiv\Agenda_Lehre_SoE_2016.pdf Fi...etc...
		aRegex: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv')
		volumeListIndex: 	4
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>listForPattern:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		newList: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv')
		volumeListIndex: 	4
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>updateFileList
	Receiver: a FileList
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv')
		volumeListIndex: 	4
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>reference:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ D:\My Documents\ZHAW Archiv
		tmpReference: 	File @ D:\My Documents\ZHAW Archiv
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv')
		volumeListIndex: 	4
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>directory:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ D:\My Documents\ZHAW Archiv
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv')
		volumeListIndex: 	4
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>selectedDirectory:
	Receiver: a FileList
	Arguments and temporary variables: 
		aFileDirectoryWrapper: 	a FileDirectoryWrapper
		file: 	File @ D:\My Documents\ZHAW Archiv
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv')
		volumeListIndex: 	4
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


SimpleHierarchicalListMorph>>setSelectedMorph:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		aMorph: 	an IndentingListItemMorph(639151872)'ZHAW Archiv'
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph>>mouseUp:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		event: 	[(237@503) mouseUp 3987515 nil]
		aMorph: 	an IndentingListItemMorph(639151872)'ZHAW Archiv'
		wasHigh: 	true
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph(Morph)>>handleMouseUp:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		anEvent: 	[(237@503) mouseUp 3987515 nil]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	THERE_BE_DRAGONS_HERE
RegexSyntaxError:  no terminating ":"
23 October 2018 8:24:28.219 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

RxParser class>>signalSyntaxException:at:
	Receiver: RxParser
	Arguments and temporary variables: 
		errorString: 	' no terminating ":"'
		errorPosition: 	36
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#atom->RxParser>>#atom #branch->RxParser>>#branc...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#RxParser
		classPool: 	a Dictionary(#BackslashConstants->a Dictionary($e->Character escape ...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Regex-Core'
		traitComposition: 	{}
		localSelectors: 	nil


RxParser>>signalParseError:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	' no terminating ":"'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>inputUpTo:errorMessage:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aCharacter: 	$:
		aString: 	' no terminating ":"'
		accumulator: 	a WriteStream
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>messagePredicate
	Receiver: a RxParser
	Arguments and temporary variables: 
		spec: 	nil
		negated: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>atom
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>piece
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	nil
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	a RxsPiece
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>regex
	Receiver: a RxParser
	Arguments and temporary variables: 
		branch: 	nil
		regex: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parseStream:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		tree: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parse:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


ByteString(String)>>asRegex
	Receiver: 'D:\My Documents\ZHAW Archiv\psp_hs17'
	Arguments and temporary variables: 

	Receiver's instance variables: 
'D:\My Documents\ZHAW Archiv\psp_hs17'

FileList>>filesMatching:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		files: 	an Array(File @ D:\My Documents\ZHAW Archiv\psp_hs17\5 The Smalltalk obj...etc...
		aRegex: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17\5 The Smalltalk object m...etc...
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv' '    psp_hs17' '    ...etc...
		volumeListIndex: 	6
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>listForPattern:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		newList: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17\5 The Smalltalk object m...etc...
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv' '    psp_hs17' '    ...etc...
		volumeListIndex: 	6
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>updateFileList
	Receiver: a FileList
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17\5 The Smalltalk object m...etc...
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv' '    psp_hs17' '    ...etc...
		volumeListIndex: 	6
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>reference:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17\5 The Smalltalk object model_f...etc...
		tmpReference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17\5 The Smalltalk objec...etc...
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17\5 The Smalltalk object m...etc...
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv' '    psp_hs17' '    ...etc...
		volumeListIndex: 	6
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>directory:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17\5 The Smalltalk object model_f...etc...
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17\5 The Smalltalk object m...etc...
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv' '    psp_hs17' '    ...etc...
		volumeListIndex: 	6
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>selectedDirectory:
	Receiver: a FileList
	Arguments and temporary variables: 
		aFileDirectoryWrapper: 	a FileDirectoryWrapper
		file: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17\5 The Smalltalk object model_...etc...
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17\5 The Smalltalk object m...etc...
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv' '    psp_hs17' '    ...etc...
		volumeListIndex: 	6
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


SimpleHierarchicalListMorph>>setSelectedMorph:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		aMorph: 	an IndentingListItemMorph(1068873984)'5 The Smalltalk object model_file...etc...
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	true
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph>>mouseUp:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		event: 	[(315@417) mouseUp 4004812 nil]
		aMorph: 	an IndentingListItemMorph(1068873984)'5 The Smalltalk object model_file...etc...
		wasHigh: 	true
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	true
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSeTHERE_BE_DRAGONS_HERE
RegexSyntaxError:  no terminating ":"
23 October 2018 8:24:28.788 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

RxParser class>>signalSyntaxException:at:
	Receiver: RxParser
	Arguments and temporary variables: 
		errorString: 	' no terminating ":"'
		errorPosition: 	36
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#atom->RxParser>>#atom #branch->RxParser>>#branc...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#RxParser
		classPool: 	a Dictionary(#BackslashConstants->a Dictionary($e->Character escape ...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Regex-Core'
		traitComposition: 	{}
		localSelectors: 	nil


RxParser>>signalParseError:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	' no terminating ":"'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>inputUpTo:errorMessage:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aCharacter: 	$:
		aString: 	' no terminating ":"'
		accumulator: 	a WriteStream
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>messagePredicate
	Receiver: a RxParser
	Arguments and temporary variables: 
		spec: 	nil
		negated: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>atom
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>piece
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	nil
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	a RxsPiece
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>regex
	Receiver: a RxParser
	Arguments and temporary variables: 
		branch: 	nil
		regex: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parseStream:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		tree: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


RxParser>>parse:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	#epsilon


ByteString(String)>>asRegex
	Receiver: 'D:\My Documents\ZHAW Archiv\psp_hs17'
	Arguments and temporary variables: 

	Receiver's instance variables: 
'D:\My Documents\ZHAW Archiv\psp_hs17'

FileList>>filesMatching:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		files: 	an Array(File @ D:\My Documents\ZHAW Archiv\psp_hs17\02_Introduction.ppt...etc...
		aRegex: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv' '    psp_hs17')
		volumeListIndex: 	5
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>listForPattern:
	Receiver: a FileList
	Arguments and temporary variables: 
		aPattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		newList: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv' '    psp_hs17')
		volumeListIndex: 	5
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>updateFileList
	Receiver: a FileList
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv' '    psp_hs17')
		volumeListIndex: 	5
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>reference:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17
		tmpReference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv' '    psp_hs17')
		volumeListIndex: 	5
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>directory:
	Receiver: a FileList
	Arguments and temporary variables: 
		dir: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv' '    psp_hs17')
		volumeListIndex: 	5
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>selectedDirectory:
	Receiver: a FileList
	Arguments and temporary variables: 
		aFileDirectoryWrapper: 	a FileDirectoryWrapper
		file: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(1028214528) a SearchMorph(35211955...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv' '    psp_hs17')
		volumeListIndex: 	5
		list: 	an Array(File @ C:\tmp\Pharo6.1\FT2Plugin.dll File @ C:\tmp\Pharo6.1\Phar...etc...
		listIndex: 	0
		pattern: 	'D:\My Documents\ZHAW Archiv\psp_hs17'
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
FT2Plugin.dll
Pharo.exe
Phar...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(403653376)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


SimpleHierarchicalListMorph>>setSelectedMorph:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		aMorph: 	an IndentingListItemMorph(895898368)'psp_hs17'
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph>>mouseUp:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		event: 	[(310@406) mouseUp 4005390 nil]
		aMorph: 	an IndentingListItemMorph(895898368)'psp_hs17'
		wasHigh: 	true
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph(Morph)>>handleMouseUp:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		anEvent: 	[(310@406) mouseUp 4005390 nil]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(310@406) mouseUp 4005390 nil]
	Arguments and temporary variables: 
		anObject: 	a SimpleHierarchicalListMorph(411121920)
	Receiver's instance variables: 
		timeStamp: 	4005390
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(310@406)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


SimpleHierarchicalListMorph(Morph)>>handleEvent:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		anEvent: 	[(310@406) mouseUp 4005390 nil]
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


SimpleHierarchicalListMorph(Morph)>>handleFocusEvent:
	Receiver: a SimpleHierarchicalListMorph(411121920)
	Arguments and temporary variables: 
		anEvent: 	[(310@406) mouseUp 4005390 nil]
	Receiver's instance variables: 
		bounds: 	(198.0@146.0) corner: (351.0@613.0)
		owner: 	a SystemWindow(1028214528)
		submorphs: 	an Array(a ScrollBar(492864768) a ScrollBar(564979456) a TransformMo...etc...
		fullBounds: 	(198@146) corner: (351@613)
		color: 	Color white
		extension: 	a MorphExtension (736414464) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		model: 	a FileList
		scrollBar: 	a ScrollBar(564979456)
		scroller: 	a TransformMorph(74809088)
		getMenuSelector: 	#volumeMenu:
		getMenuTitleSelector: 	nil
		hasFocus: 	false
		hScrollBar: 	a ScrollBar(492864768)
		selectedMorph: 	nil
		getListSelector: 	#initialDirectoryList
		keystrokeActionSelector: 	nil
		autoDeselect: 	false
		columns: 	nil
		sortingSelector: 	nil
		getSelectionSelector: 	#selectedDirectory
		setSelectionSelector: 	#selectedDirectory:
		potentialDropMorph: 	nil
		lineColor: 	nil
		lastSelection: 	0
		lastKeystrokeTime: 	0
		lastKeystrokes: 	''
		searchedElement: 	nil


[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(310@406) mouseUp 4005390 nil]
		focusHolder: 	a SimpleHierarchicalListMorph(411121920)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(310@406) corner: (326@422)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(310@406) corner: (326@422)
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(310@406) mouseUp 4005390 nil]
		targetOffset: 	(112.0@260.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 4005390 310 406 0 0 1 1)
		lastKeyScanCode: 	8
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


BlockClosure>>on:do:
	Receiver: [ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (an...etc...
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
ActiveWorld := priorWorld.
ActiveEvent := priorEvent.
A...etc...
	Receiver's instance variables: 
		outerContext: 	HandMorph>>sendFocusEvent:to:clear:
		startpc: 	67
		numArgs: 	0


WorldMorph(PasteUpMorph)>>becomeActiveDuring:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		aBlock: 	[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	ha...etc...
		priorWorld: 	a WorldMorph(562956288) [world]
		priorHand: 	a HandMorph(58125568)
		priorEvent: 	[(310@406) mouseOver red 4005281 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a SystemWindow(1028214528) a Spec...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (569522432) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		result: 	nil
		anEvent: 	[(310@406) mouseUp 4005390 nil]
		focusHolder: 	a SimpleHierarchicalListMorph(411121920)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(310@406) corner: (326@422)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(310@406) corner: (326@422)
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(310@406) mouseUp 4005390 nil]
		targetOffset: 	(112.0@260.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 4005390 310 406 0 0 1 1)
		lastKeyScanCode: 	8
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(310@406) mouseUp 4005390 nil]
		focusHolder: 	a SimpleHierarchicalListMorph(411121920)
		aBlock: 	[ self mouseFocus: nil ]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(310@406) corner: (326@422)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(310@406) corner: (326@422)
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(310@406) mouseUp 4005390 nil]
		targetOffset: 	(112.0@260.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 4005390 310 406 0 0 1 1)
		lastKeyScanCode: 	8
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendMouseEvent:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(310@406) mouseUp 4005390 nil]
	Receiver's instance variables: 
		bounds: 	(310@406) corner: (326@422)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(310@406) corner: (326@422)
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(310@406) mouseUp 4005390 nil]
		targetOffset: 	(112.0@260.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 4005390 310 406 0 0 1 1)
		lastKeyScanCode: 	8
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>handleEvent:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(310@406) mouseUp 4005390 nil]
		evt: 	[(310@406) mouseUp 4005390 nil]
	Receiver's instance variables: 
		bounds: 	(310@406) corner: (326@422)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(310@406) corner: (326@422)
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(310@406) mouseUp 4005390 nil]
		targetOffset: 	(112.0@260.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 4005390 310 406 0 0 1 1)
		lastKeyScanCode: 	8
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>processEventsFromQueue:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEventQueue: 	an InputEventSensor
		evt: 	[(310@406) mouseUp 4005390 nil]
		evtBuf: 	#(1 4005390 310 406 0 0 1 1)
		type: 	1
		hadAny: 	false
	Receiver's instance variables: 
		bounds: 	(310@406) corner: (326@422)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(310@406) corner: (326@422)
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(310@406) mouseUp 4005390 nil]
		targetOffset: 	(112.0@260.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 4005390 310 406 0 0 1 1)
		lastKeyScanCode: 	8
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>processEvents
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(310@406) corner: (326@422)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(310@406) corner: (326@422)
		color: 	Color blue
		extension: 	a MorphExtension (621350144)
		mouseFocus: 	nil
		keyboardFocus: 	a SimpleHierarchicalListMorph(411121920)
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(310@406) mouseUp 4005390 nil]
		targetOffset: 	(112.0@260.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 4005390 310 406 0 0 1 1)
		lastKeyScanCode: 	8
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		h: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(352119552))(a SearchMorp...etc...
		lastStepTime: 	147831
		lastStepMessage: 	nil
		lastCycleTime: 	147852
		alarms: 	a Heap()
		lastAlarmTime: 	147831
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


Array(SequenceableCollection)>>do:
	Receiver: an Array(a HandMorph(58125568))
	Arguments and temporary variables: 
		aBlock: 	[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ]
		index: 	1
	Receiver's instance variables: 
an Array(a HandMorph(58125568))

WorldState>>handsDo:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aBlock: 	[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(352119552))(a SearchMorp...etc...
		lastStepTime: 	147831
		lastStepMessage: 	nil
		lastCycleTime: 	147852
		alarms: 	a Heap()
		lastAlarmTime: 	147831
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(352119552))(a SearchMorp...etc...
		lastStepTime: 	147831
		lastStepMessage: 	nil
		lastCycleTime: 	147852
		alarms: 	a Heap()
		lastAlarmTime: 	147831
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1592@828)
		canvas: 	a FormCanvas on: DisplayScreen(1592x828x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(352119552))(a SearchMorp...etc...
		lastStepTime: 	147831
		lastStepMessage: 	nil
		lastCycleTime: 	147852
		alarms: 	a Heap()
		lastAlarmTime: 	147831
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1592@828)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a SystemWindow(1028214528) a Spec...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (569522432) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil



--- The full stack ---
RxParser class>>signalSyntaxException:at:
RxParser>>signalParseError:
RxParser>>inputUpTo:errorMessage:
RxParser>>messagePredicate
RxParser>>atom
RxParser>>piece
RxParser>>branch
RxParser>>branch
RxParser>>regex
RxParser>>parseStream:
RxParser>>parse:
ByteString(String)>>asRegex
FileList>>filesMatching:
FileList>>listForPattern:
FileList>>updateFileList
FileList>>reference:
FileList>>directory:
FileList>>selectedDirectory:
SimpleHierarchicalListMorph>>setSelectedMorph:
SimpleHierarchicalListMorph>>mouseUp:
SimpleHierarchicalListMorph(Morph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
SimpleHierarchicalListMorph(Morph)>>handleEvent:
SimpleHierarchicalListMorph(Morph)>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph(PasteUpMorph)>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of RubSmalltalkEditor did not understand #fileItIn
23 October 2018 9:20:16.161 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

RubSmalltalkEditor(Object)>>doesNotUnderstand: #fileItIn
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aMessage: 	fileItIn
		exception: 	MessageNotUnderstood: RubSmalltalkEditor>>fileItIn
		resumeValue: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(739932416)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


FileList(Object)>>perform:orSendTo:
	Receiver: a FileList
	Arguments and temporary variables: 
		selector: 	#fileItIn
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(396077312) a SearchMorph(410021120...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv' '    psp_hs17')
		volumeListIndex: 	5
		list: 	an Array(File @ D:\My Documents\ZHAW Archiv\psp_hs17\02_Introduction.ppt ...etc...
		listIndex: 	0
		pattern: 	nil
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
02_Introduction.ppt
04-Prolo...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(85897472)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>perform:orSendTo:
	Receiver: a FileList
	Arguments and temporary variables: 
		selector: 	#fileItIn
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(396077312) a SearchMorph(410021120...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv' '    psp_hs17')
		volumeListIndex: 	5
		list: 	an Array(File @ D:\My Documents\ZHAW Archiv\psp_hs17\02_Introduction.ppt ...etc...
		listIndex: 	0
		pattern: 	nil
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
02_Introduction.ppt
04-Prolo...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(85897472)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(915537664)'FileIn selection'
	Arguments and temporary variables: 
		evt: 	[(374@745) mouseUp 7352750 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(290.0@737.0) corner: (493.0@754.0)
		owner: 	a MenuMorph(81149696)
		submorphs: 	#()
		fullBounds: 	(290.0@737.0) corner: (493.0@754.0)
		color: 	Color black
		extension: 	a MorphExtension (281111296)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'FileIn selection'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a FileList
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#fileItIn a RubSmalltalkEditor)
		icon: 	Form(16x1x8)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'G'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of RubSmalltalkEditor did not understand #fileItIn
23 October 2018 9:20:27.585 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

RubSmalltalkEditor(Object)>>doesNotUnderstand: #fileItIn
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aMessage: 	fileItIn
		exception: 	MessageNotUnderstood: RubSmalltalkEditor>>fileItIn
		resumeValue: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(739932416)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


FileList(Object)>>perform:orSendTo:
	Receiver: a FileList
	Arguments and temporary variables: 
		selector: 	#fileItIn
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(396077312) a SearchMorph(410021120...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv' '    psp_hs17')
		volumeListIndex: 	5
		list: 	an Array(File @ D:\My Documents\ZHAW Archiv\psp_hs17\02_Introduction.ppt ...etc...
		listIndex: 	0
		pattern: 	nil
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
02_Introduction.ppt
04-Prolo...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(85897472)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


FileList>>perform:orSendTo:
	Receiver: a FileList
	Arguments and temporary variables: 
		selector: 	#fileItIn
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(396077312) a SearchMorph(410021120...etc...
		announceur: 	nil
		reference: 	File @ D:\My Documents\ZHAW Archiv\psp_hs17
		volumeList: 	#('[]' ' D:' '  My Documents' '   ZHAW Archiv' '    psp_hs17')
		volumeListIndex: 	5
		list: 	an Array(File @ D:\My Documents\ZHAW Archiv\psp_hs17\02_Introduction.ppt ...etc...
		listIndex: 	0
		pattern: 	nil
		brevityState: 	#FileList
		dirSelectionBlock: 	[ :dirName | true ]
		modalView: 	nil
		ok: 	false
		contents: 	'NO FILE SELECTED
  -- Folder Summary --
02_Introduction.ppt
04-Prolo...etc...
		optionalButtonSpecs: 	nil
		grid: 	a MorphTreeMorph(85897472)
		fileEncoding: 	nil
		sortBlock: 	[ :x :y | 
| xIsDir |
(xIsDir := x isDirectory) = y isDirectory
	ifT...etc...
		baseLabel: 	''
		configuredServices: 	an OrderedCollection()
		sourceTextModel: 	a RubScrolledTextModel


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(608622336)'FileIn selection'
	Arguments and temporary variables: 
		evt: 	[(447@751) mouseUp 7364171 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(342.0@742.0) corner: (545.0@759.0)
		owner: 	a MenuMorph(748690688)
		submorphs: 	#()
		fullBounds: 	(342.0@742.0) corner: (545.0@759.0)
		color: 	Color black
		extension: 	a MorphExtension (409155328)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'FileIn selection'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a FileList
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#fileItIn a RubSmalltalkEditor)
		icon: 	Form(16x1x8)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'G'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(608622336)'FileIn selection'
	Arguments and temporary variables: 
		evt: 	[(447@751) mouseUp 7364171 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(342.0@742.0) corner: (545.0@759.0)
		owner: 	a MenuMorph(748690688)
		submorphs: 	#()
		fullBounds: 	(342.0@742.0) corner: (545.0@759.0)
		color: 	Color black
		extension: 	a MorphExtension (409155328)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'FileIn selection'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	THERE_BE_DRAGONS_HERE
#value: was sent to nil
23 October 2018 9:36:08.23 am

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #value:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	value: 12
		exception: 	MessageNotUnderstood: receiver of "value:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ b value: 12
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(478462720)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#openInWindowLabeled: was sent to nil
30 October 2018 4:28:13.43025 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #openInWindowLabeled:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	openInWindowLabeled: 'Hallo'
		exception: 	MessageNotUnderstood: receiver of "openInWindowLabeled:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ m openInWindowLabeled: 'Hallo'
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(640434944)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Warning
30 October 2018 4:33:10.35325 pm

VM: Win32 - IX86 - 5.1 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

SlotClassBuilder>>validateClassName
	Receiver: a SlotClassBuilder
	Arguments and temporary variables: 

	Receiver's instance variables: 
		installer: 	a PharoClassInstaller
		oldClasses: 	an OrderedCollection()
		newClasses: 	an OrderedCollection()
		classSlots: 	#()
		category: 	nil
		superclass: 	Object
		name: 	#NameOfSubclass
		layoutClass: 	nil
		slots: 	#()
		traitComposition: 	{}
		classTraitComposition: 	{}
		result: 	nil
		sharedPoolsString: 	''
		sharedVariables: 	#()
		comment: 	nil
		commentStamp: 	nil


SlotClassBuilder>>name:
	Receiver: a SlotClassBuilder
	Arguments and temporary variables: 
		aName: 	#NameOfSubclass
	Receiver's instance variables: 
		installer: 	a PharoClassInstaller
		oldClasses: 	an OrderedCollection()
		newClasses: 	an OrderedCollection()
		classSlots: 	#()
		category: 	nil
		superclass: 	Object
		name: 	#NameOfSubclass
		layoutClass: 	nil
		slots: 	#()
		traitComposition: 	{}
		classTraitComposition: 	{}
		result: 	nil
		sharedPoolsString: 	''
		sharedVariables: 	#()
		comment: 	nil
		commentStamp: 	nil


[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self classLayout class;
	slots: f asSlotCollection;
	sharedVariablesFromString: d;
	sharedPools: s;
	category: cat;
	environment: self environment;
	copyClassSlotsFromExistingClass ] in Object class(Class)>>private_subclass:instanceVariableNames:classVariableNames:poolDictionaries:category:
	Receiver: Object
	Arguments and temporary variables: 
		t: 	#NameOfSubclass
		f: 	'n'
		d: 	''
		s: 	''
		cat: 	'Hello'
		builder: 	a SlotClassBuilder
	Receiver's instance variables: 
		superclass: 	ProtoObject
		methodDict: 	a MethodDictionary(size 408)
		format: 	0
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...
		name: 	#Object
		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Objects'
		traitComposition: 	{}
		localSelectors: 	nil


PharoClassInstaller class(AbstractClassInstaller class)>>make:
	Receiver: PharoClassInstaller
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#isReturnSpecial was sent to nil
22 October 2019 12:49:50.514977 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #isReturnSpecial
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	isReturnSpecial
		exception: 	MessageNotUnderstood: receiver of "isReturnSpecial" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

RubSmalltalkEditor>>debug:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		method: 	nil
		receiver: 	nil
		context: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(861233920)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>debugHighlight
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(861233920)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor debugHighlight.
textMorph shoutStyler style: textMorph text ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>debugHighlightedText
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(847963904)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea editor debugHighlight.
textMorph shoutStyler ...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	782507
		lastStepMessage: 	nil
		lastCycleTime: 	899844
		alarms: 	a Heap(MorphicAlarm(#popupError: -> a GLMPopperNotificationStrategy) Mo...etc...
		lastAlarmTime: 	899823
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(515480320) a Sy...etc...
		fullBounds: 	(0@0) corner: (1824@1153)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	782507
		lastStepMessage: 	nil
		lastCycleTime: 	899844
		alarms: 	a Heap(MorphicAlarm(#popupError: -> a GLMPopperNotificationStrategy) Mo...etc...
		lastAlarmTime: 	899823
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	782507
		lastStepMessage: 	nil
		lastCycleTime: 	899844
		alarms: 	a Heap(MorphicAlarm(#popupError: -> a GLMPopperNotificationStrategy) Mo...etc...
		lastAlarmTime: 	899823
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(515480320) a Sy...etc...
		fullBounds: 	(0@0) corner: (1824@1153)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #isReturnSpecial
RubSmalltalkEditor>>debug:
RubSmalltalkEditor>>debugHighlight
[ textMorph textArea editor debugHighlight.
textMorph shoutStyler style: textMorph text ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>debugHighlightedText
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE

22 October 2019 1:34:59.263977 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

Process>>terminate
	Receiver: a Process in Process>>terminate
	Arguments and temporary variables: 
		ctxt: 	nil
		unwindBlock: 	nil
		oldList: 	nil
	Receiver's instance variables: 
		nextLink: 	nil
		suspendedContext: 	Process>>terminate
		priority: 	40
		myList: 	nil
		name: 	nil
		env: 	nil
		effectiveProcess: 	nil
		terminating: 	true


NECController>>stopCompletionDelay
	Receiver: a NECController
	Arguments and temporary variables: 

	Receiver's instance variables: 
		model: 	a GLMRubricSmalltalkTextModel
		menuMorph: 	nil
		editor: 	a RubSmalltalkEditor
		context: 	nil
		inverseMapping: 	a Dictionary($"->$" $'->$' $)->$( $]->$[ $}->${ )
		completionDelay: 	a Process in Process>>terminate


NECController>>closeMenu
	Receiver: a NECController
	Arguments and temporary variables: 

	Receiver's instance variables: 
		model: 	a GLMRubricSmalltalkTextModel
		menuMorph: 	nil
		editor: 	a RubSmalltalkEditor
		context: 	nil
		inverseMapping: 	a Dictionary($"->$" $'->$' $)->$( $]->$[ $}->${ )
		completionDelay: 	a Process in Process>>terminate


MessageSend>>value
	Receiver: MessageSend(#closeMenu -> a NECController)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a NECController
		selector: 	#closeMenu
		arguments: 	#()


MessageSend>>cull:
	Receiver: MessageSend(#closeMenu -> a NECController)
	Arguments and temporary variables: 
		arg: 	a MorphLostFocus
	Receiver's instance variables: 
		receiver: 	a NECController
		selector: 	#closeMenu
		arguments: 	#()


MessageSend>>cull:cull:
	Receiver: MessageSend(#closeMenu -> a NECController)
	Arguments and temporary variables: 
		arg1: 	a MorphLostFocus
		arg2: 	an Announcer
	Receiver's instance variables: 
		receiver: 	a NECController
		selector: 	#closeMenu
		arguments: 	#()


[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
	Receiver's instance variables: 
		announcer: 	an Announcer
		announcementClass: 	MorphLostFocus
		subscriber: 	a NECController
		action: 	MessageSend(#closeMenu -> a NECController)


BlockClosure>>on:do:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx...etc...
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	47
		numArgs: 	0


BlockClosure>>on:fork:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | ex pass ]
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	47
		numArgs: 	0


AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
	Receiver's instance variables: 
		announcer: 	an Announcer
		announcementClass: 	MorphLostFocus
		subscriber: 	a NECController
		action: 	MessageSend(#closeMenu -> a NECController)


[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
		subs: 	an Array(an AnnouncementSubscription an AnnouncementSubscription an Annou...etc...
		startIndex: 	1
		index: 	5
		subscription: 	an AnnouncementSubscription
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


BlockClosure>>ifCurtailed:
	Receiver: [ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ]
	Arguments and temporary variables: 
		aBlock: 	[ self deliver: anAnnouncement to: subs startingAt: index + 1 ]
		complete: 	nil
		result: 	nil
	Receiver's instance variables: 
		outerContext: 	SubscriptionRegistry>>deliver:to:startingAt:
		startpc: 	54
		numArgs: 	0


SubscriptionRegistry>>deliver:to:startingAt:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
		subs: 	an Array(an AnnouncementSubscription an AnnouncementSubscription an Annou...etc...
		startIndex: 	1
		subscription: 	an AnnouncementSubscription
		index: 	5
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


SubscriptionRegistry>>deliver:to:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
		subs: 	an Array(an AnnouncementSubscription an AnnouncementSubscription an Annou...etc...
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


SubscriptionRegistry>>deliver:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		interestedSubscriptions: 	an Array(an AnnouncementSubscription an AnnouncementSu...etc...
		anAnnouncement: 	a MorphLostFocus
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


Announcer>>announce:
	Receiver: an Announcer
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
		announcement: 	a MorphLostFocus
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry


RubEditingArea(Morph)>>doAnnounce:
	Receiver: a RubEditingArea(861233920)
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@278)
		owner: 	a TransformWithLayoutMorph(721394944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(416827136) a RubCursor(125246208...etc...
		fullBounds: 	(0@0) corner: (811@278)
		color: 	Color transparent
		extension: 	a MorphExtension (357302016) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(867502336)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(125246208)
		segments: 	an OrderedCollection()
		getMenuPolicy: 	a RubEditingArea(861233920)
		mouseDownPoint: 	(350.0@384.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>announceKeyboardFocusChange:
	Receiver: a RubEditingArea(861233920)
	Arguments and temporary variables: 
		gotFocus: 	false
		announcement: 	a MorphLostFocus
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@278)
		owner: 	a TransformWithLayoutMorph(721394944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(416827136) a RubCursor(125246208...etc...
		fullBounds: 	(0@0) corner: (811@278)
		color: 	Color transparent
		extension: 	a MorphExtension (357302016) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(867502336)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(125246208)
		segments: 	an OrderedCollection()
		getMenuPolicy: 	a RubEditingArea(861233920)
		mouseDownPoint: 	(350.0@384.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>keyboardFocusChange:
	Receiver: a RubEditingArea(861233920)
	Arguments and temporary variables: 
		gotFocus: 	false
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@278)
		owner: 	a TransformWithLayoutMorph(721394944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(416827136) a RubCursor(125246208...etc...
		fullBounds: 	(0@0) corner: (811@278)
		color: 	Color transparent
		extension: 	a MorphExtension (357302016) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(867502336)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(125246208)
		segments: 	an OrderedCollection()
		getMenuPolicy: 	a RubEditingArea(861233920)
		mouseDownPoint: 	(350.0@384.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>keyboardFocusChange:
	Receiver: a RubEditingArea(861233920)
	Arguments and temporary variables: 
		aBoolean: 	false
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@278)
		owner: 	a TransformWithLayoutMorph(721394944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(416827136) a RubCursor(125246208...etc...
		fullBounds: 	(0@0) corner: (811@278)
		color: 	Color transparent
		extension: 	a MorphExtension (357302016) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(867502336)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(125246208)
		segments: 	an OrderedCollection()
		getMenuPolicy: 	a RubEditingArea(861233920)
		mouseDownPoint: 	(350.0@384.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


HandMorph>>newKeyboardFocus:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		aMorphOrNil: 	nil
		oldFocus: 	a RubEditingArea(861233920)
	Receiver's instance variables: 
		bounds: 	(1262@516) corner: (1278@532)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (587897088)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	a MouseClickState[#firstClickUp]
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(1262@516) mouseOver 9941531 nil]
		targetOffset: 	(350.0@384.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 9941531 1262 516 0 0 1 1)
		lastKeyScanCode: 	83
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	3


HandMorph>>releaseKeyboardFocus
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(1262@516) corner: (1278@532)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (587897088)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	a MouseClickState[#firstClickUp]
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(1262@516) mouseOver 9941531 nil]
		targetOffset: 	(350.0@384.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 9941531 1262 516 0 0 1 1)
		lastKeyScanCode: 	83
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	3


[ :hand | hand releaseKeyboardFocus ] in WorldMorph>>viewBox:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		newViewBox: 	(0@0) corner: (1824@1153)
		hand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(515480320) a Sy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


Array(SequenceableCollection)>>do:
	Receiver: an Array(a HandMorph(58125568))
	Arguments and temporary variables: 
		aBlock: 	[ :hand | hand releaseKeyboardFocus ]
		index: 	1
	Receiver's instance variables: 
an Array(a HandMorph(58125568))

WorldState>>handsDo:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aBlock: 	[ :hand | hand releaseKeyboardFocus ]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	nil
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	3607048
		lastStepMessage: 	nil
		lastCycleTime: 	3608273
		alarms: 	a Heap()
		lastAlarmTime: 	3608252
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>viewBox:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		newViewBox: 	(0@0) corner: (1824@1153)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(515480320) a Sy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph(PasteUpMorph)>>restoreMorphicDisplay
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(515480320) a Sy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>startUp
	Receiver: WorldMorph
	Arguments and temporary variables: 
		world: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


WorldMorph class(Behavior)>>startUp:
	Receiver: WorldMorph
	Arguments and temporary variables: 
		resuming: 	false
	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


ClassSessionHandler>>startup:
	Receiver: a ClassSessionHandler(WorldMorph)
	Arguments and temporary variables: 
		isImageStarting: 	false
	Receiver's instance variables: 
		registeredClassName: 	#WorldMorph


[ :each | each startup: isImageStarting ] in WorkingSession>>runStartup:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		isImageStarting: 	false
		each: 	a ClassSessionHandler(WorldMorph)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-22T12:34:50.715977+02:00


[ aBlock value: each ] in [ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | self errorHandler handleError: error ] ] in WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		aList: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(S...etc...
		aBlock: 	[ :each | each startup: isImageStarting ]
		each: 	a ClassSessionHandler(WorldMorph)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-22T12:34:50.715977+02:00


BlockClosure>>on:do:
	Receiver: [ aBlock value: each ]
	Arguments and temporary variables: 
		exception: 	Exception
		handlerAction: 	[ :error | self errorHandler handleError: error ]
	Receiver's instance variables: 
		outerContext: 	[ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | ...etc...
		startpc: 	41
		numArgs: 	0


[ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | self errorHandler handleError: error ] ] in WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		aList: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(S...etc...
		aBlock: 	[ :each | each startup: isImageStarting ]
		each: 	a ClassSessionHandler(WorldMorph)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-22T12:34:50.715977+02:00


Array(SequenceableCollection)>>do:
	Receiver: an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(SmallInteger) a Cla...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | self e...etc...
		index: 	49
	Receiver's instance variables: 
an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(SmallInteger) a Cla...etc...

WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		aList: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(S...etc...
		aBlock: 	[ :each | each startup: isImageStarting ]
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-22T12:34:50.715977+02:00


WorkingSession>>runStartup:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		isImageStarting: 	false
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-22T12:34:50.715977+02:00


WorkingSession>>start:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		isImageStarting: 	false
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-22T12:34:50.715977+02:00


SessionManager>>snapshot:andQuit:
	Receiver: a SessionManager
	Arguments and temporary variables: 
		save: 	true
		quit: 	false
		isImageStarting: 	false
		snapshotResult: 	false
	Receiver's instance variables: 
		currentSession: 	a WorkingSession
		categories: 	an OrderedCollection(a SessionCategory(System) a SessionCategory(Ne...etc...
		guiCategory: 	a SessionCategory(Graphical User Interface)
		toolsCategory: 	a SessionCategory(Tools)
		networkCategory: 	a SessionCategory(Network)
		systemCategory: 	a SessionCategory(System)
		userCategory: 	a SessionCategory(User)



--- The full stack ---
Process>>terminate
NECController>>stopCompletionDelay
NECController>>closeMenu
MessageSend>>value
MessageSend>>cull:
MessageSend>>cull:cull:
[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
BlockClosure>>on:do:
BlockClosure>>on:fork:
AnnouncementSubscription>>deliver:
[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
BlockClosure>>ifCurtailed:
SubscriptionRegistry>>deliver:to:startingAt:
SubscriptionRegistry>>deliver:to:
SubscriptionRegistry>>deliver:
Announcer>>announce:
RubEditingArea(Morph)>>doAnnounce:
RubEditingArea(Morph)>>announceKeyboardFocusChange:
RubEditingArea(Morph)>>keyboardFocusChange:
RubEditingArea(RubAbstractTextArea)>>keyboardFocusChange:
HandMorph>>newKeyboardFocus:
HandMorph>>releaseKeyboardFocus
[ :hand | hand releaseKeyboardFocus ] in WorldMorph>>viewBox:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldMorph>>viewBox:
WorldMorph(PasteUpMorph)>>restoreMorphicDisplay
WorldMorph class>>startUp
WorldMorph class(Behavior)>>startUp:
ClassSessionHandler>>startup:
[ :each | each startup: isImageStarting ] in WorkingSession>>runStartup:
[ aBlock value: each ] in [ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | self errorHandler handleError: error ] ] in WorkingSession>>runList:do:
BlockClosure>>on:do:
[ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | self errorHandler handleError: error ] ] in WorkingSession>>runList:do:
Array(SequenceableCollection)>>do:
WorkingSession>>runList:do:
WorkingSession>>runStartup:
WorkingSession>>start:
SessionManager>>snapshot:andQuit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ ^ SessionManager default snapshot: save andQuit: quit ] in SmalltalkImage>>snapshot:andQuit:
CurrentExecutionEnvironment class>>activate:for:
DefaultExecutionEnvironment(ExecutionEnvironment)>>beActiveDuring:
DefaultExecutionEnvironment class>>beActiveDuring:
SmalltalkImage>>snapshot:andQuit:
[ (Smalltalk snapshot: true andQuit: false)
	ifFalse: [ UIManager default inform: 'Image saved' ] ] in ToolShortcutsCategory>>saveImage
BlockClosure>>cull:
BlockClosure>>cull:cull:
BlockClosure>>cull:cull:cull:
KMCategoryBinding>>completeMatch:buffer:
[ :l | l completeMatch: self buffer: aBuffer ] in KMKeymap>>notifyCompleteMatchTo:buffer:
Array(SequenceableCollection)>>do:
KMKeymap>>notifyCompleteMatchTo:buffer:
KMKeymap>>onMatchWith:notify:andDo:
[ :entry | entry onMatchWith: anEventBuffer notify: aMatchListener andDo: aBlock ] in ToolShortcutsCategory(KMCategory)>>onMatchWith:notify:andDo:
Set>>do:
ToolShortcutsCategory(KMCategory)>>onMatchWith:notify:andDo:
KMCategoryBinding>>verifyMatchWith:notifying:thenDoing:
[ :aTarget | 
"nice hack to stop in the first listener"
aTarget
	verifyMatchWith: anEventBuffer
	notifying: self
	thenDoing: [ ^ self ] ] in KMDispatcher>>dispatch:inCategories:
OrderedCollection>>do:
KMDispatcher>>dispatch:inCategories:
KmGlobalDispatcher>>dispatch:
[ :targetToDispatch | 
targetToDispatch dispatch: KMBuffer uniqueInstance buffer copy.
aKeyboardEvent wasHandled
	ifTrue: [ ^ self ] ] in KMDispatchChain>>dispatch:
KMDispatchChain>>do:
KMDispatchChain>>dispatch:
KMDispatcher>>dispatchKeystroke:
RubEditingArea(Morph)>>dispatchKeystrokeForEvent:
RubEditingArea(RubAbstractTextArea)>>handleKeystroke:
KeyboardEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
RubEditingArea(Morph)>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph(PasteUpMorph)>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendKeyboardEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE

22 October 2019 1:57:06.187977 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

Process>>terminate
	Receiver: a Process in Process>>terminate
	Arguments and temporary variables: 
		ctxt: 	nil
		unwindBlock: 	nil
		oldList: 	nil
	Receiver's instance variables: 
		nextLink: 	nil
		suspendedContext: 	Process>>terminate
		priority: 	40
		myList: 	nil
		name: 	nil
		env: 	nil
		effectiveProcess: 	nil
		terminating: 	true


NECController>>stopCompletionDelay
	Receiver: a NECController
	Arguments and temporary variables: 

	Receiver's instance variables: 
		model: 	a GLMRubricSmalltalkTextModel
		menuMorph: 	nil
		editor: 	a RubSmalltalkEditor
		context: 	nil
		inverseMapping: 	a Dictionary($"->$" $'->$' $)->$( $]->$[ $}->${ )
		completionDelay: 	a Process in Process>>terminate


NECController>>closeMenu
	Receiver: a NECController
	Arguments and temporary variables: 

	Receiver's instance variables: 
		model: 	a GLMRubricSmalltalkTextModel
		menuMorph: 	nil
		editor: 	a RubSmalltalkEditor
		context: 	nil
		inverseMapping: 	a Dictionary($"->$" $'->$' $)->$( $]->$[ $}->${ )
		completionDelay: 	a Process in Process>>terminate


MessageSend>>value
	Receiver: MessageSend(#closeMenu -> a NECController)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a NECController
		selector: 	#closeMenu
		arguments: 	#()


MessageSend>>cull:
	Receiver: MessageSend(#closeMenu -> a NECController)
	Arguments and temporary variables: 
		arg: 	a MorphLostFocus
	Receiver's instance variables: 
		receiver: 	a NECController
		selector: 	#closeMenu
		arguments: 	#()


MessageSend>>cull:cull:
	Receiver: MessageSend(#closeMenu -> a NECController)
	Arguments and temporary variables: 
		arg1: 	a MorphLostFocus
		arg2: 	an Announcer
	Receiver's instance variables: 
		receiver: 	a NECController
		selector: 	#closeMenu
		arguments: 	#()


[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
	Receiver's instance variables: 
		announcer: 	an Announcer
		announcementClass: 	MorphLostFocus
		subscriber: 	a NECController
		action: 	MessageSend(#closeMenu -> a NECController)


BlockClosure>>on:do:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx...etc...
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	47
		numArgs: 	0


BlockClosure>>on:fork:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | ex pass ]
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	47
		numArgs: 	0


AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
	Receiver's instance variables: 
		announcer: 	an Announcer
		announcementClass: 	MorphLostFocus
		subscriber: 	a NECController
		action: 	MessageSend(#closeMenu -> a NECController)


[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
		subs: 	an Array(an AnnouncementSubscription an AnnouncementSubscription an Annou...etc...
		startIndex: 	1
		index: 	5
		subscription: 	an AnnouncementSubscription
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


BlockClosure>>ifCurtailed:
	Receiver: [ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ]
	Arguments and temporary variables: 
		aBlock: 	[ self deliver: anAnnouncement to: subs startingAt: index + 1 ]
		complete: 	nil
		result: 	nil
	Receiver's instance variables: 
		outerContext: 	SubscriptionRegistry>>deliver:to:startingAt:
		startpc: 	54
		numArgs: 	0


SubscriptionRegistry>>deliver:to:startingAt:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
		subs: 	an Array(an AnnouncementSubscription an AnnouncementSubscription an Annou...etc...
		startIndex: 	1
		subscription: 	an AnnouncementSubscription
		index: 	5
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


SubscriptionRegistry>>deliver:to:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
		subs: 	an Array(an AnnouncementSubscription an AnnouncementSubscription an Annou...etc...
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


SubscriptionRegistry>>deliver:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		interestedSubscriptions: 	an Array(an AnnouncementSubscription an AnnouncementSu...etc...
		anAnnouncement: 	a MorphLostFocus
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


Announcer>>announce:
	Receiver: an Announcer
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
		announcement: 	a MorphLostFocus
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry


RubEditingArea(Morph)>>doAnnounce:
	Receiver: a RubEditingArea(861233920)
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@278)
		owner: 	a TransformWithLayoutMorph(721394944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(416827136) a RubCursor(125246208...etc...
		fullBounds: 	(0@0) corner: (811@278)
		color: 	Color transparent
		extension: 	a MorphExtension (357302016) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(867502336)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(125246208)
		segments: 	an OrderedCollection()
		getMenuPolicy: 	a RubEditingArea(861233920)
		mouseDownPoint: 	(277.0@432.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>announceKeyboardFocusChange:
	Receiver: a RubEditingArea(861233920)
	Arguments and temporary variables: 
		gotFocus: 	false
		announcement: 	a MorphLostFocus
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@278)
		owner: 	a TransformWithLayoutMorph(721394944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(416827136) a RubCursor(125246208...etc...
		fullBounds: 	(0@0) corner: (811@278)
		color: 	Color transparent
		extension: 	a MorphExtension (357302016) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(867502336)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(125246208)
		segments: 	an OrderedCollection()
		getMenuPolicy: 	a RubEditingArea(861233920)
		mouseDownPoint: 	(277.0@432.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>keyboardFocusChange:
	Receiver: a RubEditingArea(861233920)
	Arguments and temporary variables: 
		gotFocus: 	false
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@278)
		owner: 	a TransformWithLayoutMorph(721394944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(416827136) a RubCursor(125246208...etc...
		fullBounds: 	(0@0) corner: (811@278)
		color: 	Color transparent
		extension: 	a MorphExtension (357302016) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(867502336)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(125246208)
		segments: 	an OrderedCollection()
		getMenuPolicy: 	a RubEditingArea(861233920)
		mouseDownPoint: 	(277.0@432.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>keyboardFocusChange:
	Receiver: a RubEditingArea(861233920)
	Arguments and temporary variables: 
		aBoolean: 	false
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@278)
		owner: 	a TransformWithLayoutMorph(721394944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(416827136) a RubCursor(125246208...etc...
		fullBounds: 	(0@0) corner: (811@278)
		color: 	Color transparent
		extension: 	a MorphExtension (357302016) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(867502336)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(125246208)
		segments: 	an OrderedCollection()
		getMenuPolicy: 	a RubEditingArea(861233920)
		mouseDownPoint: 	(277.0@432.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


HandMorph>>newKeyboardFocus:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		aMorphOrNil: 	nil
		oldFocus: 	a RubEditingArea(861233920)
	Receiver's instance variables: 
		bounds: 	(1189@564) corner: (1205@580)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (587897088)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	a MouseClickState[#firstClickUp]
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(1189@564) mouseOver 11267343 nil]
		targetOffset: 	(277.0@432.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 11267343 1189 564 0 0 1 1)
		lastKeyScanCode: 	83
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	3


HandMorph>>releaseKeyboardFocus
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(1189@564) corner: (1205@580)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (587897088)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	a MouseClickState[#firstClickUp]
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(1189@564) mouseOver 11267343 nil]
		targetOffset: 	(277.0@432.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 11267343 1189 564 0 0 1 1)
		lastKeyScanCode: 	83
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	3


[ :hand | hand releaseKeyboardFocus ] in WorldMorph>>viewBox:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		newViewBox: 	(0@0) corner: (1824@1153)
		hand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(515480320) a Sy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


Array(SequenceableCollection)>>do:
	Receiver: an Array(a HandMorph(58125568))
	Arguments and temporary variables: 
		aBlock: 	[ :hand | hand releaseKeyboardFocus ]
		index: 	1
	Receiver's instance variables: 
an Array(a HandMorph(58125568))

WorldState>>handsDo:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aBlock: 	[ :hand | hand releaseKeyboardFocus ]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	nil
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	3612166
		lastStepMessage: 	nil
		lastCycleTime: 	4935102
		alarms: 	a Heap()
		lastAlarmTime: 	4935081
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>viewBox:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		newViewBox: 	(0@0) corner: (1824@1153)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(515480320) a Sy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph(PasteUpMorph)>>restoreMorphicDisplay
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(515480320) a Sy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>startUp
	Receiver: WorldMorph
	Arguments and temporary variables: 
		world: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


WorldMorph class(Behavior)>>startUp:
	Receiver: WorldMorph
	Arguments and temporary variables: 
		resuming: 	false
	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


ClassSessionHandler>>startup:
	Receiver: a ClassSessionHandler(WorldMorph)
	Arguments and temporary variables: 
		isImageStarting: 	false
	Receiver's instance variables: 
		registeredClassName: 	#WorldMorph


[ :each | each startup: isImageStarting ] in WorkingSession>>runStartup:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		isImageStarting: 	false
		each: 	a ClassSessionHandler(WorldMorph)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-22T12:34:50.715977+02:00


[ aBlock value: each ] in [ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | self errorHandler handleError: error ] ] in WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		aList: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(S...etc...
		aBlock: 	[ :each | each startup: isImageStarting ]
		each: 	a ClassSessionHandler(WorldMorph)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-22T12:34:50.715977+02:00


BlockClosure>>on:do:
	Receiver: [ aBlock value: each ]
	Arguments and temporary variables: 
		exception: 	Exception
		handlerAction: 	[ :error | self errorHandler handleError: error ]
	Receiver's instance variables: 
		outerContext: 	[ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | ...etc...
		startpc: 	41
		numArgs: 	0


[ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | self errorHandler handleError: error ] ] in WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		aList: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(S...etc...
		aBlock: 	[ :each | each startup: isImageStarting ]
		each: 	a ClassSessionHandler(WorldMorph)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-22T12:34:50.715977+02:00


Array(SequenceableCollection)>>do:
	Receiver: an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(SmallInteger) a Cla...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | self e...etc...
		index: 	49
	Receiver's instance variables: 
an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(SmallInteger) a Cla...etc...

WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		aList: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(S...etc...
		aBlock: 	[ :each | each startup: isImageStarting ]
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-22T12:34:50.715977+02:00


WorkingSession>>runStartup:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		isImageStarting: 	false
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-22T12:34:50.715977+02:00


WorkingSession>>start:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		isImageStarting: 	false
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-22T12:34:50.715977+02:00


SessionManager>>snapshot:andQuit:
	Receiver: a SessionManager
	Arguments and temporary variables: 
		save: 	true
		quit: 	false
		isImageStarting: 	false
		snapshotResult: 	false
	Receiver's instance variables: 
		currentSession: 	a WorkingSession
		categories: 	an OrderedCollection(a SessionCategory(System) a SessionCategory(Ne...etc...
		guiCategory: 	a SessionCategory(Graphical User Interface)
		toolsCategory: 	a SessionCategory(Tools)
		networkCategory: 	a SessionCategory(Network)
		systemCategory: 	a SessionCategory(System)
		userCategory: 	a SessionCategory(User)



--- The full stack ---
Process>>terminate
NECController>>stopCompletionDelay
NECController>>closeMenu
MessageSend>>value
MessageSend>>cull:
MessageSend>>cull:cull:
[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
BlockClosure>>on:do:
BlockClosure>>on:fork:
AnnouncementSubscription>>deliver:
[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
BlockClosure>>ifCurtailed:
SubscriptionRegistry>>deliver:to:startingAt:
SubscriptionRegistry>>deliver:to:
SubscriptionRegistry>>deliver:
Announcer>>announce:
RubEditingArea(Morph)>>doAnnounce:
RubEditingArea(Morph)>>announceKeyboardFocusChange:
RubEditingArea(Morph)>>keyboardFocusChange:
RubEditingArea(RubAbstractTextArea)>>keyboardFocusChange:
HandMorph>>newKeyboardFocus:
HandMorph>>releaseKeyboardFocus
[ :hand | hand releaseKeyboardFocus ] in WorldMorph>>viewBox:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldMorph>>viewBox:
WorldMorph(PasteUpMorph)>>restoreMorphicDisplay
WorldMorph class>>startUp
WorldMorph class(Behavior)>>startUp:
ClassSessionHandler>>startup:
[ :each | each startup: isImageStarting ] in WorkingSession>>runStartup:
[ aBlock value: each ] in [ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | self errorHandler handleError: error ] ] in WorkingSession>>runList:do:
BlockClosure>>on:do:
[ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | self errorHandler handleError: error ] ] in WorkingSession>>runList:do:
Array(SequenceableCollection)>>do:
WorkingSession>>runList:do:
WorkingSession>>runStartup:
WorkingSession>>start:
SessionManager>>snapshot:andQuit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ ^ SessionManager default snapshot: save andQuit: quit ] in SmalltalkImage>>snapshot:andQuit:
CurrentExecutionEnvironment class>>activate:for:
DefaultExecutionEnvironment(ExecutionEnvironment)>>beActiveDuring:
DefaultExecutionEnvironment class>>beActiveDuring:
SmalltalkImage>>snapshot:andQuit:
[ (Smalltalk snapshot: true andQuit: false)
	ifFalse: [ UIManager default inform: 'Image saved' ] ] in ToolShortcutsCategory>>saveImage
BlockClosure>>cull:
BlockClosure>>cull:cull:
BlockClosure>>cull:cull:cull:
KMCategoryBinding>>completeMatch:buffer:
[ :l | l completeMatch: self buffer: aBuffer ] in KMKeymap>>notifyCompleteMatchTo:buffer:
Array(SequenceableCollection)>>do:
KMKeymap>>notifyCompleteMatchTo:buffer:
KMKeymap>>onMatchWith:notify:andDo:
[ :entry | entry onMatchWith: anEventBuffer notify: aMatchListener andDo: aBlock ] in ToolShortcutsCategory(KMCategory)>>onMatchWith:notify:andDo:
Set>>do:
ToolShortcutsCategory(KMCategory)>>onMatchWith:notify:andDo:
KMCategoryBinding>>verifyMatchWith:notifying:thenDoing:
[ :aTarget | 
"nice hack to stop in the first listener"
aTarget
	verifyMatchWith: anEventBuffer
	notifying: self
	thenDoing: [ ^ self ] ] in KMDispatcher>>dispatch:inCategories:
OrderedCollection>>do:
KMDispatcher>>dispatch:inCategories:
KmGlobalDispatcher>>dispatch:
[ :targetToDispatch | 
targetToDispatch dispatch: KMBuffer uniqueInstance buffer copy.
aKeyboardEvent wasHandled
	ifTrue: [ ^ self ] ] in KMDispatchChain>>dispatch:
KMDispatchChain>>do:
KMDispatchChain>>dispatch:
KMDispatcher>>dispatchKeystroke:
RubEditingArea(Morph)>>dispatchKeystrokeForEvent:
RubEditingArea(RubAbstractTextArea)>>handleKeystroke:
KeyboardEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
RubEditingArea(Morph)>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph(PasteUpMorph)>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendKeyboardEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#drawBlock: was sent to nil
27 October 2019 4:12:20.134562 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #drawBlock:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	drawBlock: [ :c | 
rand := Random new.
1 to: 100 do: [ :i | 
	x := ra...etc...
		exception: 	MessageNotUnderstood: receiver of "drawBlock:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'm drawBlock: [ :c |
	rand := Random new.
	1 to: 100 do: [: i |...etc...
		itsSelection: 	a Text for 'm drawBlock: [ :c |
	rand := Random new.
	1 to: 100 d...etc...
		itsSelectionString: 	'm drawBlock: [ :c |
	rand := Random new.
	1 to: 100 do: [:...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	^ m
		drawBlock: [ :c | 
			rand := Random new.
			1 to: 100 do: [ :...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449863168)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449863168)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(1014396160)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(449863168)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@183)
		owner: 	a TransformWithLayoutMorph(634350592)
		submorphs: 	an Array(a RubPrimarySelectionMorph(898202368) a RubCursor(351164160...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (732854784) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(349711616)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(351164160)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(198160384))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(1014396160)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4959662
		lastStepMessage: 	nil
		lastCycleTime: 	2134844
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(351164160)))
		lastAlarmTime: 	2134823
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1808@1137)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(494185216) a GL...etc...
		fullBounds: 	(0@0) corner: (1808@1137)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4959662
		lastStepMessage: 	nil
		lastCycleTime: 	2134844
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(351164160)))
		lastAlarmTime: 	2134823
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4959662
		lastStepMessage: 	nil
		lastCycleTime: 	2134844
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(351164160)))
		lastAlarmTime: 	2134823
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1808@1137)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(494185216) a GL...etc...
		fullBounds: 	(0@0) corner: (1808@1137)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #drawBlock:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#new was sent to nil
27 October 2019 4:14:10.030562 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'm := CanvasMorph new.
m openInWindowLabeled: ''Hallo''.

m dra...etc...
		itsSelection: 	a Text for 'm := CanvasMorph new.
m openInWindowLabeled: ''Hallo'...etc...
		itsSelectionString: 	'm := CanvasMorph new.
m openInWindowLabeled: ''Hallo''.

m...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	m := CanvasMorph new.
	m openInWindowLabeled: 'Hallo'.
	m
		drawBloc...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449863168)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449863168)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(1014396160)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(449863168)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@278)
		owner: 	a TransformWithLayoutMorph(634350592)
		submorphs: 	an Array(a RubPrimarySelectionMorph(898202368) a RubCursor(351164160...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (732854784) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(349711616)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(351164160)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1011494144))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(1014396160)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4959662
		lastStepMessage: 	nil
		lastCycleTime: 	2244762
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(351164160)))
		lastAlarmTime: 	2244740
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1808@1137)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(494185216) a Sp...etc...
		fullBounds: 	(0@0) corner: (1808@1137)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4959662
		lastStepMessage: 	nil
		lastCycleTime: 	2244762
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(351164160)))
		lastAlarmTime: 	2244740
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4959662
		lastStepMessage: 	nil
		lastCycleTime: 	2244762
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(351164160)))
		lastAlarmTime: 	2244740
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1808@1137)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(494185216) a Sp...etc...
		fullBounds: 	(0@0) corner: (1808@1137)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#new was sent to nil
27 October 2019 4:14:12.683562 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: new
	Arguments and temporary variables: 
		receiver: 	nil
	Receiver's instance variables: 
		selector: 	#new
		args: 	#()
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "new" is nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'm := CanvasMorph new.
m openInWindowLabeled: ''Hallo''.

m dra...etc...
		itsSelection: 	a Text for 'm := CanvasMorph new.
m openInWindowLabeled: ''Hallo'...etc...
		itsSelectionString: 	'm := CanvasMorph new.
m openInWindowLabeled: ''Hallo''.

m...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	m := CanvasMorph new.
	m openInWindowLabeled: 'Hallo'.
	m
		drawBloc...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449863168)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449863168)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(1014396160)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(449863168)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@278)
		owner: 	a TransformWithLayoutMorph(634350592)
		submorphs: 	an Array(a RubPrimarySelectionMorph(898202368) a RubCursor(351164160...etc...
		fullBounds: 	(0@0) corner: (811@278)
		color: 	Color transparent
		extension: 	a MorphExtension (732854784) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(349711616)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(351164160)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1011494144))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(1014396160)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4959662
		lastStepMessage: 	nil
		lastCycleTime: 	2247417
		alarms: 	a Heap()
		lastAlarmTime: 	2247395
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1808@1137)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(494185216) a Sp...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4959662
		lastStepMessage: 	nil
		lastCycleTime: 	2247417
		alarms: 	a Heap()
		lastAlarmTime: 	2247395
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4959662
		lastStepMessage: 	nil
		lastCycleTime: 	2247417
		alarms: 	a Heap()
		lastAlarmTime: 	2247395
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1808@1137)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(494185216) a Sp...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #new
Message>>sentTo:
UndefinedObject(Object)>>doesNotUnderstand: #new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#new was sent to nil
27 October 2019 4:14:16.647562 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: new
	Arguments and temporary variables: 
		receiver: 	nil
	Receiver's instance variables: 
		selector: 	#new
		args: 	#()
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "new" is nil
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: new
	Arguments and temporary variables: 
		receiver: 	nil
	Receiver's instance variables: 
		selector: 	#new
		args: 	#()
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "new" is nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'm := CanvasMorph new.
m openInWindowLabeled: ''Hallo''.

m dra...etc...
		itsSelection: 	a Text for 'm := CanvasMorph new.
m openInWindowLabeled: ''Hallo'...etc...
		itsSelectionString: 	'm := CanvasMorph new.
m openInWindowLabeled: ''Hallo''.

m...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	m := CanvasMorph new.
	m openInWindowLabeled: 'Hallo'.
	m
		drawBloc...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449863168)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449863168)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(1014396160)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(449863168)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@278)
		owner: 	a TransformWithLayoutMorph(634350592)
		submorphs: 	an Array(a RubPrimarySelectionMorph(898202368) a RubCursor(351164160...etc...
		fullBounds: 	(0@0) corner: (811@278)
		color: 	Color transparent
		extension: 	a MorphExtension (732854784) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(349711616)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(351164160)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1011494144))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(1014396160)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2249880
		lastStepMessage: 	nil
		lastCycleTime: 	2251387
		alarms: 	a Heap()
		lastAlarmTime: 	2251365
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1808@1137)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(494185216) a Sp...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2249880
		lastStepMessage: 	nil
		lastCycleTime: 	2251387
		alarms: 	a Heap()
		lastAlarmTime: 	2251365
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2249880
		lastStepMessage: 	nil
		lastCycleTime: 	2251387
		alarms: 	a Heap()
		lastAlarmTime: 	2251365
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1808@1137)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(494185216) a Sp...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #new
Message>>sentTo:
UndefinedObject(Object)>>doesNotUnderstand: #new
Message>>sentTo:
UndefinedObject(Object)>>doesNotUnderstand: #new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#new was sent to nil
27 October 2019 4:14:17.543562 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: new
	Arguments and temporary variables: 
		receiver: 	nil
	Receiver's instance variables: 
		selector: 	#new
		args: 	#()
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "new" is nil
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: new
	Arguments and temporary variables: 
		receiver: 	nil
	Receiver's instance variables: 
		selector: 	#new
		args: 	#()
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "new" is nil
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: new
	Arguments and temporary variables: 
		receiver: 	nil
	Receiver's instance variables: 
		selector: 	#new
		args: 	#()
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "new" is nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'm := CanvasMorph new.
m openInWindowLabeled: ''Hallo''.

m dra...etc...
		itsSelection: 	a Text for 'm := CanvasMorph new.
m openInWindowLabeled: ''Hallo'...etc...
		itsSelectionString: 	'm := CanvasMorph new.
m openInWindowLabeled: ''Hallo''.

m...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	m := CanvasMorph new.
	m openInWindowLabeled: 'Hallo'.
	m
		drawBloc...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449863168)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(449863168)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(1014396160)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(449863168)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@278)
		owner: 	a TransformWithLayoutMorph(634350592)
		submorphs: 	an Array(a RubPrimarySelectionMorph(898202368) a RubCursor(351164160...etc...
		fullBounds: 	(0@0) corner: (811@278)
		color: 	Color transparent
		extension: 	a MorphExtension (732854784) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(349711616)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(351164160)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1011494144))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(1014396160)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2249880
		lastStepMessage: 	nil
		lastCycleTime: 	2252283
		alarms: 	a Heap()
		lastAlarmTime: 	2252261
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1808@1137)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(494185216) a Sp...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2249880
		lastStepMessage: 	nil
		lastCycleTime: 	2252283
		alarms: 	a Heap()
		lastAlarmTime: 	2252261
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	2249880
		lastStepMessage: 	nil
		lastCycleTime: 	2252283
		alarms: 	a Heap()
		lastAlarmTime: 	2252261
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1808@1137)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(494185216) a Sp...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #new
Message>>sentTo:
UndefinedObject(Object)>>doesNotUnderstand: #new
Message>>sentTo:
UndefinedObject(Object)>>doesNotUnderstand: #new
Message>>sentTo:
UndefinedObject(Object)>>doesNotUnderstand: #new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of BoxedFloat64 class did not understand #maxVal
27 October 2019 4:38:21.564554 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

BoxedFloat64 class(Object)>>doesNotUnderstand: #maxVal
	Receiver: BoxedFloat64
	Arguments and temporary variables: 
		aMessage: 	maxVal
		exception: 	MessageNotUnderstood: BoxedFloat64 class>>maxVal
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Float
		methodDict: 	a MethodDictionary(#*->BoxedFloat64>>#* #+->BoxedFloat64>>#+ #-->Bo...etc...
		format: 	655360
		layout: 	a WordLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#BoxedFloat64
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Numbers'
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ 1.0 class maxVal
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(902831616)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(902831616)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(514431744)
		textModel: 	a GLMRubricSmalltalkTextModel


MorphicAlarm(MessageSend)>>value
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	1072019
		numArgs: 	0


MorphicAlarm>>value:
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 
		anArgument: 	1072033
		nArgs: 	0
	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	1072019
		numArgs: 	0


WorldState>>triggerAlarmsBefore:
	Receiver: a WorldState
	Arguments and temporary variables: 
		nowTime: 	1072033
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(722004736))(a DropList...etc...
		lastStepTime: 	1072011
		lastStepMessage: 	nil
		lastCycleTime: 	1072033
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	1072011
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>runLocalStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		now: 	1072033
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(722004736))(a DropList...etc...
		lastStepTime: 	1072011
		lastStepMessage: 	nil
		lastCycleTime: 	1072033
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	1072011
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(722004736))(a DropList...etc...
		lastStepTime: 	1072011
		lastStepMessage: 	nil
		lastCycleTime: 	1072033
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	1072011
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1808@1137)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(128082688) a Na...etc...
		fullBounds: 	(0@0) corner: (1808@1137)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(722004736))(a DropList...etc...
		lastStepTime: 	1072011
		lastStepMessage: 	nil
		lastCycleTime: 	1072033
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	1072011
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(722004736))(a DropList...etc...
		lastStepTime: 	1072011
		lastStepMessage: 	nil
		lastCycleTime: 	1072033
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	1072011
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1808@1137)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(128082688) a Na...etc...
		fullBounds: 	(0@0) corner: (1808@1137)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
BoxedFloat64 class(Object)>>doesNotUnderstand: #maxVal
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
MorphicAlarm(MessageSend)>>value
MorphicAlarm>>value:
WorldState>>triggerAlarmsBefore:
WorldState>>runLocalStepMethodsIn:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of BoxedFloat64 did not understand #r
27 October 2019 7:43:24.806554 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

BoxedFloat64(Object)>>doesNotUnderstand: #r
	Receiver: 1.0103537721882985
	Arguments and temporary variables: 
		aMessage: 	r
		exception: 	MessageNotUnderstood: BoxedFloat64>>r
		resumeValue: 	nil
	Receiver's instance variables: 
1.0103537721882985

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		redPoints: 	0
		iter: 	10
		rand: 	a Random
		i: 	1
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'| redPoints iter rand |
redPoints := 0.
iter := 10.

Transcrip...etc...
		itsSelection: 	a Text for '| redPoints iter rand |
redPoints := 0.
iter := 10.

...etc...
		itsSelectionString: 	'| redPoints iter rand |
redPoints := 0.
iter := 10.

Trans...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	| redPoints iter rand |
	redPoints := 0.
	iter := 10.
	Transcript cl...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(902831616)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(902831616)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(514431744)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(902831616)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@316)
		owner: 	a TransformWithLayoutMorph(848482048)
		submorphs: 	an Array(a RubPrimarySelectionMorph(214261248) a RubCursor(634692096...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (376357632) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(73691648)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(634692096)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(30711296))
		getMenuPolicy: 	a RubEditingArea(902831616)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(514431744)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(364782336))(a SearchMorp...etc...
		lastStepTime: 	12175230
		lastStepMessage: 	nil
		lastCycleTime: 	12175252
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	12175230
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(128082688) a Sy...etc...
		fullBounds: 	(0@0) corner: (1824@1153)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(364782336))(a SearchMorp...etc...
		lastStepTime: 	12175230
		lastStepMessage: 	nil
		lastCycleTime: 	12175252
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	12175230
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(364782336))(a SearchMorp...etc...
		lastStepTime: 	12175230
		lastStepMessage: 	nil
		lastCycleTime: 	12175252
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	12175230
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(128082688) a Sy...etc...
		fullBounds: 	(0@0) corner: (1824@1153)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
BoxedFloat64(Object)>>doesNotUnderstand: #r
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of BoxedFloat64 did not understand #r
27 October 2019 7:43:50.174554 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

BoxedFloat64(Object)>>doesNotUnderstand: #r
	Receiver: 1.2014770952443465
	Arguments and temporary variables: 
		aMessage: 	r
		exception: 	MessageNotUnderstood: BoxedFloat64>>r
		resumeValue: 	nil
	Receiver's instance variables: 
1.2014770952443465

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		redPoints: 	0
		iter: 	10
		rand: 	a Random
		i: 	1
		x: 	0.19804677935226206
		y: 	0.5722205734682365
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'| redPoints iter rand |
redPoints := 0.
iter := 10.

Transcrip...etc...
		itsSelection: 	a Text for '| redPoints iter rand |
redPoints := 0.
iter := 10.

...etc...
		itsSelectionString: 	'| redPoints iter rand |
redPoints := 0.
iter := 10.

Trans...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	| redPoints iter rand |
	redPoints := 0.
	iter := 10.
	Transcript cl...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(902831616)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(902831616)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(514431744)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(902831616)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@316)
		owner: 	a TransformWithLayoutMorph(848482048)
		submorphs: 	an Array(a RubPrimarySelectionMorph(214261248) a RubCursor(634692096...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (376357632) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(73691648)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(634692096)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(374645248))
		getMenuPolicy: 	a RubEditingArea(902831616)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(514431744)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(364782336))(a SearchMorp...etc...
		lastStepTime: 	12200620
		lastStepMessage: 	nil
		lastCycleTime: 	12200641
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	12200620
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(128082688) a Sy...etc...
		fullBounds: 	(0@0) corner: (1824@1153)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(364782336))(a SearchMorp...etc...
		lastStepTime: 	12200620
		lastStepMessage: 	nil
		lastCycleTime: 	12200641
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	12200620
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(364782336))(a SearchMorp...etc...
		lastStepTime: 	12200620
		lastStepMessage: 	nil
		lastCycleTime: 	12200641
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	12200620
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(128082688) a Sy...etc...
		fullBounds: 	(0@0) corner: (1824@1153)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
BoxedFloat64(Object)>>doesNotUnderstand: #r
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of BoxedFloat64 did not understand #r
27 October 2019 7:43:54.988554 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

BoxedFloat64(Object)>>doesNotUnderstand: #r
	Receiver: 1.7738069398275722
	Arguments and temporary variables: 
		aMessage: 	r
		exception: 	MessageNotUnderstood: BoxedFloat64>>r
		resumeValue: 	nil
	Receiver's instance variables: 
1.7738069398275722

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		redPoints: 	0
		iter: 	10
		rand: 	a Random
		i: 	1
		x: 	0.6957150626441999
		y: 	0.8830578610687786
		r: 	nil
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'| redPoints iter rand |
redPoints := 0.
iter := 10.

Transcrip...etc...
		itsSelection: 	a Text for '| redPoints iter rand |
redPoints := 0.
iter := 10.

...etc...
		itsSelectionString: 	'| redPoints iter rand |
redPoints := 0.
iter := 10.

Trans...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	| redPoints iter rand |
	redPoints := 0.
	iter := 10.
	Transcript cl...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(902831616)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(902831616)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(514431744)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(902831616)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@316)
		owner: 	a TransformWithLayoutMorph(848482048)
		submorphs: 	an Array(a RubPrimarySelectionMorph(214261248) a RubCursor(634692096...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (376357632) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(73691648)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(634692096)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(472191744))
		getMenuPolicy: 	a RubEditingArea(902831616)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(514431744)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(364782336))(a SearchMorp...etc...
		lastStepTime: 	12205422
		lastStepMessage: 	nil
		lastCycleTime: 	12205445
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	12205422
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(128082688) a Sp...etc...
		fullBounds: 	(0@0) corner: (1824@1153)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(364782336))(a SearchMorp...etc...
		lastStepTime: 	12205422
		lastStepMessage: 	nil
		lastCycleTime: 	12205445
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	12205422
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(364782336))(a SearchMorp...etc...
		lastStepTime: 	12205422
		lastStepMessage: 	nil
		lastCycleTime: 	12205445
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	12205422
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(128082688) a Sp...etc...
		fullBounds: 	(0@0) corner: (1824@1153)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
BoxedFloat64(Object)>>doesNotUnderstand: #r
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of BoxedFloat64 did not understand #r
27 October 2019 7:43:58.428554 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

BoxedFloat64(Object)>>doesNotUnderstand: #r
	Receiver: 1.6760099431757873
	Arguments and temporary variables: 
		aMessage: 	r
		exception: 	MessageNotUnderstood: BoxedFloat64>>r
		resumeValue: 	nil
	Receiver's instance variables: 
1.6760099431757873

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		redPoints: 	0
		iter: 	10
		rand: 	a Random
		i: 	1
		x: 	0.7814974262292951
		y: 	0.6272426357619663
		r: 	nil
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'| redPoints iter rand |
redPoints := 0.
iter := 10.

Transcrip...etc...
		itsSelection: 	a Text for '| redPoints iter rand |
redPoints := 0.
iter := 10.

...etc...
		itsSelectionString: 	'| redPoints iter rand |
redPoints := 0.
iter := 10.

Trans...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	| redPoints iter rand |
	redPoints := 0.
	iter := 10.
	Transcript cl...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(902831616)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(902831616)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(514431744)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(902831616)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@316)
		owner: 	a TransformWithLayoutMorph(848482048)
		submorphs: 	an Array(a RubPrimarySelectionMorph(214261248) a RubCursor(634692096...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (376357632) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(73691648)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(634692096)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(460317440))
		getMenuPolicy: 	a RubEditingArea(902831616)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(514431744)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(722004736))(a DropList...etc...
		lastStepTime: 	12208874
		lastStepMessage: 	nil
		lastCycleTime: 	12208895
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	12208874
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(128082688) a Sp...etc...
		fullBounds: 	(0@0) corner: (1824@1153)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(722004736))(a DropList...etc...
		lastStepTime: 	12208874
		lastStepMessage: 	nil
		lastCycleTime: 	12208895
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	12208874
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(722004736))(a DropList...etc...
		lastStepTime: 	12208874
		lastStepMessage: 	nil
		lastCycleTime: 	12208895
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	12208874
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(128082688) a Sp...etc...
		fullBounds: 	(0@0) corner: (1824@1153)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
BoxedFloat64(Object)>>doesNotUnderstand: #r
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of SmallInteger did not understand #,
27 October 2019 7:48:25.150554 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

SmallInteger(Object)>>doesNotUnderstand: #,
	Receiver: 0
	Arguments and temporary variables: 
		aMessage: 	, ' '
		exception: 	MessageNotUnderstood: SmallInteger>>,
		resumeValue: 	nil
	Receiver's instance variables: 
0

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		redPoints: 	0
		iter: 	10
		rand: 	a Random
		x: 	0.7233258610234251
		y: 	0.9377462207049813
		i: 	1
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'| redPoints iter rand x y |
redPoints := 0.
iter := 10.

Trans...etc...
		itsSelection: 	a Text for '| redPoints iter rand x y |
redPoints := 0.
iter := 1...etc...
		itsSelectionString: 	'| redPoints iter rand x y |
redPoints := 0.
iter := 10.

T...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	| redPoints iter rand x y |
	redPoints := 0.
	iter := 10.
	Transcrip...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(902831616)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(902831616)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(514431744)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(902831616)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@297)
		owner: 	a TransformWithLayoutMorph(848482048)
		submorphs: 	an Array(a RubPrimarySelectionMorph(190836480) a RubCursor(634692096...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (376357632) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(73691648)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(634692096)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(834875136))
		getMenuPolicy: 	a RubEditingArea(902831616)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(514431744)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(722004736))(a DropList...etc...
		lastStepTime: 	12475596
		lastStepMessage: 	nil
		lastCycleTime: 	12475617
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	12475596
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(128082688) a Sy...etc...
		fullBounds: 	(0@0) corner: (1824@1153)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(722004736))(a DropList...etc...
		lastStepTime: 	12475596
		lastStepMessage: 	nil
		lastCycleTime: 	12475617
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	12475596
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(722004736))(a DropList...etc...
		lastStepTime: 	12475596
		lastStepMessage: 	nil
		lastCycleTime: 	12475617
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(634692096)))
		lastAlarmTime: 	12475596
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(128082688) a Sy...etc...
		fullBounds: 	(0@0) corner: (1824@1153)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
SmallInteger(Object)>>doesNotUnderstand: #,
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
TraitException: Invalid trait name
27 October 2019 8:54:02.610868 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

Trait>>setName:andRegisterInCategory:environment:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aSymbol: 	#count
		categorySymbol: 	#Montecarlo
		aSystemDictionary: 	a SystemDictionary(lots of globals)
	Receiver's instance variables: 
		methodDict: 	a MethodDictionary()
		traitComposition: 	{}
		localSelectors: 	nil
		users: 	an IdentitySet()
		organization: 	nil
		name: 	nil
		environment: 	nil
		classTrait: 	<<error during printing>>

Trait class>>named:uses:category:env:
	Receiver: Trait
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		superclass: 	TraitDescription
		methodDict: 	a MethodDictionary(size 184)
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Trait
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Traits-Kernel'
		traitComposition: 	TClass
		localSelectors: 	an IdentitySet(#asClassDefinition #basicCategory: #fuelAccept: ...etc...


Trait class>>named:uses:package:
	Receiver: Trait
	Arguments and temporary variables: 
		aSymbol: 	#count
		aTraitCompositionOrCollection: 	#()
		aString: 	'Montecarlo'
		env: 	a SystemDictionary(lots of globals)
	Receiver's instance variables: 
		superclass: 	TraitDescription
		methodDict: 	a MethodDictionary(size 184)
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Trait
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Traits-Kernel'
		traitComposition: 	TClass
		localSelectors: 	an IdentitySet(#asClassDefinition #basicCategory: #fuelAccept: ...etc...


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	nil
		itsSelectionString: 	nil
	Receiver's instance variables: 
		ast: 	DoIt
	^ Trait named: #count uses: {} package: 'Montecarlo'
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


OpalCompiler(AbstractCompiler)>>evaluate:
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		textOrString: 	'Trait named: #count
	uses: {}
	package: ''Montecarlo'''
	Receiver's instance variables: 
		ast: 	DoIt
	^ Trait named: #count uses: {} package: 'Montecarlo'
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


NautilusUI class(Behavior)>>evaluate:
	Receiver: NautilusUI
	Arguments and temporary variables: 
		aString: 	'Trait named: #count
	uses: {}
	package: ''Montecarlo'''
	Receiver's instance variables: 
		superclass: 	AbstractNautilusUI
		methodDict: 	a MethodDictionary(size 183)
		format: 	65560
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#NautilusUI
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Nautilus
		traitComposition: 	{}
		localSelectors: 	nil


NautilusUI(AbstractTool)>>addTraitIn:
	Receiver: a NautilusUI
	Arguments and temporary variables: 
		aPackage: 	a RPackage(Montecarlo)
		systemCategory: 	#Montecarlo
		classDefinition: 	'Trait named: #count
	uses: {}
	package: ''Montecarlo'''
		newTrait: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a CategoryWidget a MethodWidget a ClassWidget a P...etc...
		announceur: 	nil
		model: 	a Nautilus
		window: 	a NautilusWindow(202938880)
		sourceCodePanel: 	a PanelMorph(1061064448)
		fullDisplayedComment: 	false
		sourceCodeContainer: 	a PanelMorph(607040000)
		shouldUpdateTitle: 	true
		contentSelection: 	a Text for ''
		acceptor: 	a ClassOrMethodDefinitionAcceptor
		commentWidget: 	a RubScrolledTextMorph(765512192)
		sourceTextWidget: 	a RubScrolledTextMorph(197025280)
		sourceCodeSelectionInterval: 	(1 to: 0)
		sourceTextModel: 	a RubScrolledTextModel
		methodClassifier: 	nil
		commentTextModel: 	a RubScrolledTextModel
		instanceButtonWidget: 	a PluggableToggleButtonMorph(326194944)
		categoryWidget: 	a CategoryWidget
		methodWidget: 	a MethodWidget
		classWidget: 	a ClassWidget
		packageWidget: 	a PackageWidget
		packagePatternString: 	nil
		packagePattern: 	nil
		searchWidget: 	a SearchMorph(883997184)


NautilusUI>>addTraitIn:
	Receiver: a NautilusUI
	Arguments and temporary variables: 
		aPackage: 	a PackageTreePackageSelection
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a CategoryWidget a MethodWidget a ClassWidget a P...etc...
		announceur: 	nil
		model: 	a Nautilus
		window: 	a NautilusWindow(202938880)
		sourceCodePanel: 	a PanelMorph(1061064448)
		fullDisplayedComment: 	false
		sourceCodeContainer: 	a PanelMorph(607040000)
		shouldUpdateTitle: 	true
		contentSelection: 	a Text for ''
		acceptor: 	a ClassOrMethodDefinitionAcceptor
		commentWidget: 	a RubScrolledTextMorph(765512192)
		sourceTextWidget: 	a RubScrolledTextMorph(197025280)
		sourceCodeSelectionInterval: 	(1 to: 0)
		sourceTextModel: 	a RubScrolledTextModel
		methodClassifier: 	nil
		commentTextModel: 	a RubScrolledTextModel
		instanceButtonWidget: 	a PluggableToggleButtonMorph(326194944)
		categoryWidget: 	a CategoryWidget
		methodWidget: 	a MethodWidget
		classWidget: 	a ClassWidget
		packageWidget: 	a PackageWidget
		packagePatternString: 	nil
		packagePattern: 	nil
		searchWidget: 	a SearchMorph(883997184)


NautilusUI(AbstractNautilusUI)>>addTrait
	Receiver: a NautilusUI
	Arguments and temporary variables: 
		package: 	a PackageTreePackageSelection
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a CategoryWidget a MethodWidget a ClassWidget a P...etc...
		announceur: 	nil
		model: 	a Nautilus
		window: 	a NautilusWindow(202938880)
		sourceCodePanel: 	a PanelMorph(1061064448)
		fullDisplayedComment: 	false
		sourceCodeContainer: 	a PanelMorph(607040000)
		shouldUpdateTitle: 	true
		contentSelection: 	a Text for ''
		acceptor: 	a ClassOrMethodDefinitionAcceptor
		commentWidget: 	a RubScrolledTextMorph(765512192)
		sourceTextWidget: 	a RubScrolledTextMorph(197025280)
		sourceCodeSelectionInterval: 	(1 to: 0)
		sourceTextModel: 	a RubScrolledTextModel
		methodClassifier: 	nil
		commentTextModel: 	a RubScrolledTextModel
		instanceButtonWidget: 	a PluggableToggleButtonMorph(326194944)
		categoryWidget: 	a CategoryWidget
		methodWidget: 	a MethodWidget
		classWidget: 	a ClassWidget
		packageWidget: 	a PackageWidget
		packagePatternString: 	nil
		packagePattern: 	nil
		searchWidget: 	a SearchMorph(883997184)


[ target addTrait ] in AbstractNautilusUI class>>classesFixMenu:
	Receiver: AbstractNautilusUI
	Arguments and temporary variables: 
		aBuilder: 	a PragmaMenuAndShortcutRegistration
		target: 	a NautilusUI
	Receiver's instance variables: 
		superclass: 	AbstractTool
		methodDict: 	a MethodDictionary(size 361)
		format: 	65553
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{NautilusUI}
		name: 	#AbstractNautilusUI
		classPool: 	a Dictionary(#NextFocusKey->Character arrowRight #PackagesIconsCache...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Nautilus
		traitComposition: 	{}
		localSelectors: 	nil


BlockClosure>>cull:
	Receiver: [ target addTrait ]
	Arguments and temporary variables: 
		anArg: 	a NautilusUI
	Receiver's instance variables: 
		outerContext: 	AbstractNautilusUI class>>classesFixMenu:
		startpc: 	273
		numArgs: 	0


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(704553472)'Add Trait...'
	Arguments and temporary variables: 
		evt: 	[(869@384) mouseUp 200909687 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	1
	Receiver's instance variables: 
		bounds: 	(765.0@371.0) corner: (970.0@388.0)
		owner: 	a MenuMorph(272337664)
		submorphs: 	#()
		fullBounds: 	(765.0@371.0) corner: (970.0@388.0)
		color: 	Color white
		extension: 	a MorphExtension (359367168)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Add Trait...'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target addTrait ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	Form(16x1x8)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(704553472)'Add Trait...'
	Arguments and temporary variables: 
		evt: 	[(869@384) mouseUp 200909687 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(765.0@371.0) corner: (970.0@388.0)
		owner: 	a MenuMorph(272337664)
		submorphs: 	#()
		fullBounds: 	(765.0@371.0) corner: (970.0@388.0)
		color: 	Color white
		extension: 	a MorphExtension (359367168)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Add Trait...'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target addTrait ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	Form(16x1x8)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(704553472)'Add Trait...'
	Arguments and temporary variables: 
		evt: 	[(869@384) mouseUp 200909687 nil]
	Receiver's instance variables: 
		bounds: 	(765.0@371.0) corner: (970.0@388.0)
		owner: 	a MenuMorph(272337664)
		submorphs: 	#()
		fullBounds: 	(765.0@371.0) corner: (970.0@388.0)
		color: 	Color white
		extension: 	a MorphExtension (359367168)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Add Trait...'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target addTrait ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	Form(16x1x8)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(704553472)'Add Trait...'
	Arguments and temporary variables: 
		anEvent: 	[(869@384) mouseUp 200909687 nil]
	Receiver's instance variables: 
		bounds: 	(765.0@371.0) corner: (970.0@388.0)
		owner: 	a MenuMorph(272337664)
		submorphs: 	#()
		fullBounds: 	(765.0@371.0) corner: (970.0@388.0)
		color: 	Color white
		extension: 	a MorphExtension (359367168)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Add Trait...'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target addTrait ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	Form(16x1x8)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(869@384) mouseUp 200909687 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(704553472)'Add Trait...'
	Receiver's instance variables: 
		timeStamp: 	200909687
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(869@384)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(704553472)'Add Trait...'
	Arguments and temporary variables: 
		anEvent: 	[(869@384) mouseUp 200909687 nil]
	Receiver's instance variables: 
		bounds: 	(765.0@371.0) corner: (970.0@388.0)
		owner: 	a MenuMorph(272337664)
		submorphs: 	#()
		fullBounds: 	(765.0@371.0) corner: (970.0@388.0)
		color: 	Color white
		extension: 	a MorphExtension (359367168)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Add Trait...'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target addTrait ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	Form(16x1x8)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(869@384) mouseUp 200909687 nil]
		aMorph: 	a ToggleMenuItemMorph(704553472)'Add Trait...'
		localEvt: 	nil
		index: 	1
		child: 	nil
		morphs: 	#()
		inside: 	true
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(869@384) mouseUp 200909687 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(869@384) mouseUp 200909687 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	200909687
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(869@384)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(869@384) mouseUp 200909687 nil]
		aMorph: 	a ToggleMenuItemMorph(704553472)'Add Trait...'
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(869@384) mouseUp 200909687 nil]
		aMorph: 	a ToggleMenuItemMorph(704553472)'Add Trait...'
	Receiver's instance variables: 
		morph: 	nil


ToggleMenuItemMorph(Morph)>>processEvent:using:
	Receiver: a ToggleMenuItemMorph(704553472)'Add Trait...'
	Arguments and temporary variables: 
		anEvent: 	[(869@384) mouseUp 200909687 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(765.0@371.0) corner: (970.0@388.0)
		owner: 	a MenuMorph(272337664)
		submorphs: 	#()
		fullBounds: 	(765.0@371.0) corner: (970.0@388.0)
		color: 	Color white
		extension: 	a MorphExtension (359367168)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Add Trait...'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target addTrait ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	Form(16x1x8)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(869@384) mouseUp 200909687 nil]
		aMorph: 	a MenuMorph(272337664)
		localEvt: 	[(869@384) mouseUp 200909687 nil]
		index: 	14
		child: 	a ToggleMenuItemMorph(704553472)'Add Trait...'
		morphs: 	an Array(a ToggleMenuItemMorph(892540416)'Refactoring' a ToggleMenuItem...etc...
		inside: 	false
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(869@384) mouseUp 200909687 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(869@384) mouseUp 200909687 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	200909687
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(869@384)
		handler: 	nil
		wasHandled: 	false
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(869@384) mouseUp 200909687 nil]
		aMorph: 	a MenuMorph(272337664)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(869@384) mouseUp 200909687 nil]
		aMorph: 	a MenuMorph(272337664)
	Receiver's instance variables: 
		morph: 	nil


MenuMorph(Morph)>>processEvent:using:
	Receiver: a MenuMorph(272337664)
	Arguments and temporary variables: 
		anEvent: 	[(869@384) mouseUp 200909687 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(761.0@181.0) corner: (974.0@525.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(892540416)'Refactoring' a ToggleMenuI...etc...
		fullBounds: 	(761.0@181.0) corner: (974.0@525.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (297001728) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	a ClassWidget
		selectedItem: 	a ToggleMenuItemMorph(704553472)'Add Trait...'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph(Morph)>>processEvent:
	Receiver: a MenuMorph(272337664)
	Arguments and temporary variables: 
		anEvent: 	[(869@384) mouseUp 200909687 nil]
	Receiver's instance variables: 
		bounds: 	(761.0@181.0) corner: (974.0@525.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(892540416)'Refactoring' a ToggleMenuI...etc...
		fullBounds: 	(761.0@181.0) corner: (974.0@525.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (297001728) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	a ClassWidget
		selectedItem: 	a ToggleMenuItemMorph(704553472)'Add Trait...'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>handleFocusEvent:
	Receiver: a MenuMorph(272337664)
	Arguments and temporary variables: 
		evt: 	[(869@384) mouseUp 200909687 nil]
	Receiver's instance variables: 
		bounds: 	(761.0@181.0) corner: (974.0@525.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(892540416)'Refactoring' a ToggleMenuI...etc...
		fullBounds: 	(761.0@181.0) corner: (974.0@525.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (297001728) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	a ClassWidget
		selectedItem: 	a ToggleMenuItemMorph(704553472)'Add Trait...'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(869@384) mouseUp 200909687 nil]
		focusHolder: 	a MenuMorph(272337664)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(1054@553) corner: (1070@569)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (587897088)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	a MouseClickState[#firstClickUp]
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(1054@553) mouseOver 200933406 nil]
		targetOffset: 	(32.0@14.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 200933406 1054 553 0 0 1 1)
		lastKeyScanCode: 	84
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


BlockClosure>>on:do:
	Receiver: [ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (an...etc...
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
ActiveWorld := priorWorld.
ActiveEvent := priorEvent.
A...etc...
	Receiver's instance variables: 
		outerContext: 	HandMorph>>sendFocusEvent:to:clear:
		startpc: 	67
		numArgs: 	0


WorldMorph(PasteUpMorph)>>becomeActiveDuring:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		aBlock: 	[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	ha...etc...
		priorWorld: 	a WorldMorph(562956288) [world]
		priorHand: 	a HandMorph(58125568)
		priorEvent: 	[(869@384) mouseOver red 200909515 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a NautilusWindow(202938880) a GLM...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil



--- The full stack ---
Trait>>setName:andRegisterInCategory:environment:
Trait class>>named:uses:category:env:
Trait class>>named:uses:package:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
OpalCompiler(AbstractCompiler)>>evaluate:
NautilusUI class(Behavior)>>evaluate:
NautilusUI(AbstractTool)>>addTraitIn:
NautilusUI>>addTraitIn:
NautilusUI(AbstractNautilusUI)>>addTrait
[ target addTrait ] in AbstractNautilusUI class>>classesFixMenu:
BlockClosure>>cull:
[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
BlockClosure>>ensure:
CursorWithMask(Cursor)>>showWhile:
ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
ToggleMenuItemMorph(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
ToggleMenuItemMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
MenuMorph(Morph)>>processEvent:using:
MenuMorph(Morph)>>processEvent:
MenuMorph>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph(PasteUpMorph)>>becomeActiveDuring:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
TraitException: Invalid trait name
27 October 2019 8:55:45.380868 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

Trait>>setName:andRegisterInCategory:environment:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aSymbol: 	#TNameOfTrait
		categorySymbol: 	#Montecarlo
		aSystemDictionary: 	a SystemDictionary(lots of globals)
	Receiver's instance variables: 
		methodDict: 	a MethodDictionary()
		traitComposition: 	{}
		localSelectors: 	nil
		users: 	an IdentitySet()
		organization: 	nil
		name: 	nil
		environment: 	nil
		classTrait: 	<<error during printing>>

Trait class>>named:uses:category:env:
	Receiver: Trait
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		superclass: 	TraitDescription
		methodDict: 	a MethodDictionary(size 184)
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Trait
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Traits-Kernel'
		traitComposition: 	TClass
		localSelectors: 	an IdentitySet(#asClassDefinition #basicCategory: #fuelAccept: ...etc...


Trait class>>named:uses:package:
	Receiver: Trait
	Arguments and temporary variables: 
		aSymbol: 	#TNameOfTrait
		aTraitCompositionOrCollection: 	#()
		aString: 	'Montecarlo'
		env: 	a SystemDictionary(lots of globals)
	Receiver's instance variables: 
		superclass: 	TraitDescription
		methodDict: 	a MethodDictionary(size 184)
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Trait
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Traits-Kernel'
		traitComposition: 	TClass
		localSelectors: 	an IdentitySet(#asClassDefinition #basicCategory: #fuelAccept: ...etc...


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	nil
		itsSelectionString: 	nil
	Receiver's instance variables: 
		ast: 	DoIt
	^ Trait named: #TNameOfTrait uses: {} package: 'Montecarlo'
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


OpalCompiler(AbstractCompiler)>>evaluate:
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		textOrString: 	'Trait named: #TNameOfTrait
	uses: {}
	package: ''Montecarlo'''
	Receiver's instance variables: 
		ast: 	DoIt
	^ Trait named: #TNameOfTrait uses: {} package: 'Montecarlo'
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


NautilusUI class(Behavior)>>evaluate:
	Receiver: NautilusUI
	Arguments and temporary variables: 
		aString: 	'Trait named: #TNameOfTrait
	uses: {}
	package: ''Montecarlo'''
	Receiver's instance variables: 
		superclass: 	AbstractNautilusUI
		methodDict: 	a MethodDictionary(size 183)
		format: 	65560
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#NautilusUI
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Nautilus
		traitComposition: 	{}
		localSelectors: 	nil


NautilusUI(AbstractTool)>>addTraitIn:
	Receiver: a NautilusUI
	Arguments and temporary variables: 
		aPackage: 	a RPackage(Montecarlo)
		systemCategory: 	#Montecarlo
		classDefinition: 	'Trait named: #TNameOfTrait
	uses: {}
	package: ''Montecarlo''...etc...
		newTrait: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a CategoryWidget a MethodWidget a ClassWidget a P...etc...
		announceur: 	nil
		model: 	a Nautilus
		window: 	a NautilusWindow(526555648)
		sourceCodePanel: 	a PanelMorph(495739392)
		fullDisplayedComment: 	false
		sourceCodeContainer: 	a PanelMorph(732375808)
		shouldUpdateTitle: 	true
		contentSelection: 	a Text for ''
		acceptor: 	a ClassDefinitionAcceptor
		commentWidget: 	a RubScrolledTextMorph(669372160)
		sourceTextWidget: 	a RubScrolledTextMorph(533290752)
		sourceCodeSelectionInterval: 	(84 to: 83)
		sourceTextModel: 	a RubScrolledTextModel
		methodClassifier: 	nil
		commentTextModel: 	nil
		instanceButtonWidget: 	a PluggableToggleButtonMorph(698353408)
		categoryWidget: 	a CategoryWidget
		methodWidget: 	a MethodWidget
		classWidget: 	a ClassWidget
		packageWidget: 	a PackageWidget
		packagePatternString: 	nil
		packagePattern: 	nil
		searchWidget: 	a SearchMorph(634137344)


NautilusUI>>addTraitIn:
	Receiver: a NautilusUI
	Arguments and temporary variables: 
		aPackage: 	a PackageTreePackageSelection
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a CategoryWidget a MethodWidget a ClassWidget a P...etc...
		announceur: 	nil
		model: 	a Nautilus
		window: 	a NautilusWindow(526555648)
		sourceCodePanel: 	a PanelMorph(495739392)
		fullDisplayedComment: 	false
		sourceCodeContainer: 	a PanelMorph(732375808)
		shouldUpdateTitle: 	true
		contentSelection: 	a Text for ''
		acceptor: 	a ClassDefinitionAcceptor
		commentWidget: 	a RubScrolledTextMorph(669372160)
		sourceTextWidget: 	a RubScrolledTextMorph(533290752)
		sourceCodeSelectionInterval: 	(84 to: 83)
		sourceTextModel: 	a RubScrolledTextModel
		methodClassifier: 	nil
		commentTextModel: 	nil
		instanceButtonWidget: 	a PluggableToggleButtonMorph(698353408)
		categoryWidget: 	a CategoryWidget
		methodWidget: 	a MethodWidget
		classWidget: 	a ClassWidget
		packageWidget: 	a PackageWidget
		packagePatternString: 	nil
		packagePattern: 	nil
		searchWidget: 	a SearchMorph(634137344)


NautilusUI(AbstractNautilusUI)>>addTrait
	Receiver: a NautilusUI
	Arguments and temporary variables: 
		package: 	a PackageTreePackageSelection
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a CategoryWidget a MethodWidget a ClassWidget a P...etc...
		announceur: 	nil
		model: 	a Nautilus
		window: 	a NautilusWindow(526555648)
		sourceCodePanel: 	a PanelMorph(495739392)
		fullDisplayedComment: 	false
		sourceCodeContainer: 	a PanelMorph(732375808)
		shouldUpdateTitle: 	true
		contentSelection: 	a Text for ''
		acceptor: 	a ClassDefinitionAcceptor
		commentWidget: 	a RubScrolledTextMorph(669372160)
		sourceTextWidget: 	a RubScrolledTextMorph(533290752)
		sourceCodeSelectionInterval: 	(84 to: 83)
		sourceTextModel: 	a RubScrolledTextModel
		methodClassifier: 	nil
		commentTextModel: 	nil
		instanceButtonWidget: 	a PluggableToggleButtonMorph(698353408)
		categoryWidget: 	a CategoryWidget
		methodWidget: 	a MethodWidget
		classWidget: 	a ClassWidget
		packageWidget: 	a PackageWidget
		packagePatternString: 	nil
		packagePattern: 	nil
		searchWidget: 	a SearchMorph(634137344)


[ target addTrait ] in AbstractNautilusUI class>>classesFixMenu:
	Receiver: AbstractNautilusUI
	Arguments and temporary variables: 
		aBuilder: 	a PragmaMenuAndShortcutRegistration
		target: 	a NautilusUI
	Receiver's instance variables: 
		superclass: 	AbstractTool
		methodDict: 	a MethodDictionary(size 361)
		format: 	65553
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{NautilusUI}
		name: 	#AbstractNautilusUI
		classPool: 	a Dictionary(#NextFocusKey->Character arrowRight #PackagesIconsCache...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Nautilus
		traitComposition: 	{}
		localSelectors: 	nil


BlockClosure>>cull:
	Receiver: [ target addTrait ]
	Arguments and temporary variables: 
		anArg: 	a NautilusUI
	Receiver's instance variables: 
		outerContext: 	AbstractNautilusUI class>>classesFixMenu:
		startpc: 	273
		numArgs: 	0


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(1062402816)'Add Trait...'
	Arguments and temporary variables: 
		evt: 	[(848@368) mouseUp 201033968 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	1
	Receiver's instance variables: 
		bounds: 	(775.0@362.0) corner: (938.0@379.0)
		owner: 	a MenuMorph(269627136)
		submorphs: 	#()
		fullBounds: 	(775.0@362.0) corner: (938.0@379.0)
		color: 	Color white
		extension: 	a MorphExtension (853163520)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Add Trait...'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target addTrait ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	nil
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(1062402816)'Add Trait...'
	Arguments and temporary variables: 
		evt: 	[(848@368) mouseUp 201033968 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(775.0@362.0) corner: (938.0@379.0)
		owner: 	a MenuMorph(269627136)
		submorphs: 	#()
		fullBounds: 	(775.0@362.0) corner: (938.0@379.0)
		color: 	Color white
		extension: 	a MorphExtension (853163520)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Add Trait...'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target addTrait ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	nil
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(1062402816)'Add Trait...'
	Arguments and temporary variables: 
		evt: 	[(848@368) mouseUp 201033968 nil]
	Receiver's instance variables: 
		bounds: 	(775.0@362.0) corner: (938.0@379.0)
		owner: 	a MenuMorph(269627136)
		submorphs: 	#()
		fullBounds: 	(775.0@362.0) corner: (938.0@379.0)
		color: 	Color white
		extension: 	a MorphExtension (853163520)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Add Trait...'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target addTrait ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	nil
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(1062402816)'Add Trait...'
	Arguments and temporary variables: 
		anEvent: 	[(848@368) mouseUp 201033968 nil]
	Receiver's instance variables: 
		bounds: 	(775.0@362.0) corner: (938.0@379.0)
		owner: 	a MenuMorph(269627136)
		submorphs: 	#()
		fullBounds: 	(775.0@362.0) corner: (938.0@379.0)
		color: 	Color white
		extension: 	a MorphExtension (853163520)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Add Trait...'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target addTrait ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	nil
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(848@368) mouseUp 201033968 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(1062402816)'Add Trait...'
	Receiver's instance variables: 
		timeStamp: 	201033968
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(848@368)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(1062402816)'Add Trait...'
	Arguments and temporary variables: 
		anEvent: 	[(848@368) mouseUp 201033968 nil]
	Receiver's instance variables: 
		bounds: 	(775.0@362.0) corner: (938.0@379.0)
		owner: 	a MenuMorph(269627136)
		submorphs: 	#()
		fullBounds: 	(775.0@362.0) corner: (938.0@379.0)
		color: 	Color white
		extension: 	a MorphExtension (853163520)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Add Trait...'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target addTrait ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	nil
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(848@368) mouseUp 201033968 nil]
		aMorph: 	a ToggleMenuItemMorph(1062402816)'Add Trait...'
		localEvt: 	nil
		index: 	1
		child: 	nil
		morphs: 	#()
		inside: 	true
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(848@368) mouseUp 201033968 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(848@368) mouseUp 201033968 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	201033968
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(848@368)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(848@368) mouseUp 201033968 nil]
		aMorph: 	a ToggleMenuItemMorph(1062402816)'Add Trait...'
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(848@368) mouseUp 201033968 nil]
		aMorph: 	a ToggleMenuItemMorph(1062402816)'Add Trait...'
	Receiver's instance variables: 
		morph: 	nil


ToggleMenuItemMorph(Morph)>>processEvent:using:
	Receiver: a ToggleMenuItemMorph(1062402816)'Add Trait...'
	Arguments and temporary variables: 
		anEvent: 	[(848@368) mouseUp 201033968 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(775.0@362.0) corner: (938.0@379.0)
		owner: 	a MenuMorph(269627136)
		submorphs: 	#()
		fullBounds: 	(775.0@362.0) corner: (938.0@379.0)
		color: 	Color white
		extension: 	a MorphExtension (853163520)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Add Trait...'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target addTrait ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	nil
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(848@368) mouseUp 201033968 nil]
		aMorph: 	a MenuMorph(269627136)
		localEvt: 	[(848@368) mouseUp 201033968 nil]
		index: 	4
		child: 	a ToggleMenuItemMorph(1062402816)'Add Trait...'
		morphs: 	an Array(a ToggleMenuItemMorph(374189824)'Find Method...' a ToggleMenuI...etc...
		inside: 	false
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(848@368) mouseUp 201033968 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(848@368) mouseUp 201033968 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	201033968
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(848@368)
		handler: 	nil
		wasHandled: 	false
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(848@368) mouseUp 201033968 nil]
		aMorph: 	a MenuMorph(269627136)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(848@368) mouseUp 201033968 nil]
		aMorph: 	a MenuMorph(269627136)
	Receiver's instance variables: 
		morph: 	nil


MenuMorph(Morph)>>processEvent:using:
	Receiver: a MenuMorph(269627136)
	Arguments and temporary variables: 
		anEvent: 	[(848@368) mouseUp 201033968 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(771.0@304.0) corner: (942.0@403.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(374189824)'Find Method...' a ToggleMe...etc...
		fullBounds: 	(771.0@304.0) corner: (942.0@403.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (103584256) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	a ClassWidget
		selectedItem: 	a ToggleMenuItemMorph(1062402816)'Add Trait...'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph(Morph)>>processEvent:
	Receiver: a MenuMorph(269627136)
	Arguments and temporary variables: 
		anEvent: 	[(848@368) mouseUp 201033968 nil]
	Receiver's instance variables: 
		bounds: 	(771.0@304.0) corner: (942.0@403.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(374189824)'Find Method...' a ToggleMe...etc...
		fullBounds: 	(771.0@304.0) corner: (942.0@403.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (103584256) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	a ClassWidget
		selectedItem: 	a ToggleMenuItemMorph(1062402816)'Add Trait...'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>handleFocusEvent:
	Receiver: a MenuMorph(269627136)
	Arguments and temporary variables: 
		evt: 	[(848@368) mouseUp 201033968 nil]
	Receiver's instance variables: 
		bounds: 	(771.0@304.0) corner: (942.0@403.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(374189824)'Find Method...' a ToggleMe...etc...
		fullBounds: 	(771.0@304.0) corner: (942.0@403.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (103584256) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	a ClassWidget
		selectedItem: 	a ToggleMenuItemMorph(1062402816)'Add Trait...'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(848@368) mouseUp 201033968 nil]
		focusHolder: 	a MenuMorph(269627136)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(1008@528) corner: (1024@544)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (587897088)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	a MouseClickState[#firstClickUp]
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(1008@528) mouseOver 201036203 nil]
		targetOffset: 	(7.0@5.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	Form(16x16x8)
		temporaryCursorOffset: 	(-8@ -9)
		hardwareCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r...etc...
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 201036203 1008 528 0 0 1 1)
		lastKeyScanCode: 	27
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


BlockClosure>>on:do:
	Receiver: [ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (an...etc...
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
ActiveWorld := priorWorld.
ActiveEvent := priorEvent.
A...etc...
	Receiver's instance variables: 
		outerContext: 	HandMorph>>sendFocusEvent:to:clear:
		startpc: 	67
		numArgs: 	0


WorldMorph(PasteUpMorph)>>becomeActiveDuring:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		aBlock: 	[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	ha...etc...
		priorWorld: 	a WorldMorph(562956288) [world]
		priorHand: 	a HandMorph(58125568)
		priorEvent: 	[(848@368) mouseOver red 201033765 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a NautilusWindow(526555648) a Nau...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil



--- The full stack ---
Trait>>setName:andRegisterInCategory:environment:
Trait class>>named:uses:category:env:
Trait class>>named:uses:package:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
OpalCompiler(AbstractCompiler)>>evaluate:
NautilusUI class(Behavior)>>evaluate:
NautilusUI(AbstractTool)>>addTraitIn:
NautilusUI>>addTraitIn:
NautilusUI(AbstractNautilusUI)>>addTrait
[ target addTrait ] in AbstractNautilusUI class>>classesFixMenu:
BlockClosure>>cull:
[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
BlockClosure>>ensure:
CursorWithMask(Cursor)>>showWhile:
ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
ToggleMenuItemMorph(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
ToggleMenuItemMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
MenuMorph(Morph)>>processEvent:using:
MenuMorph(Morph)>>processEvent:
MenuMorph>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph(PasteUpMorph)>>becomeActiveDuring:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Warning
27 October 2019 8:56:46.920868 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

SlotClassBuilder>>validateClassName
	Receiver: a SlotClassBuilder
	Arguments and temporary variables: 

	Receiver's instance variables: 
		installer: 	a PharoClassInstaller
		oldClasses: 	an OrderedCollection()
		newClasses: 	an OrderedCollection()
		classSlots: 	#()
		category: 	nil
		superclass: 	Object
		name: 	#NameOfSubclass
		layoutClass: 	nil
		slots: 	#()
		traitComposition: 	{}
		classTraitComposition: 	{}
		result: 	nil
		sharedPoolsString: 	''
		sharedVariables: 	#()
		comment: 	nil
		commentStamp: 	nil


SlotClassBuilder>>name:
	Receiver: a SlotClassBuilder
	Arguments and temporary variables: 
		aName: 	#NameOfSubclass
	Receiver's instance variables: 
		installer: 	a PharoClassInstaller
		oldClasses: 	an OrderedCollection()
		newClasses: 	an OrderedCollection()
		classSlots: 	#()
		category: 	nil
		superclass: 	Object
		name: 	#NameOfSubclass
		layoutClass: 	nil
		slots: 	#()
		traitComposition: 	{}
		classTraitComposition: 	{}
		result: 	nil
		sharedPoolsString: 	''
		sharedVariables: 	#()
		comment: 	nil
		commentStamp: 	nil


[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self classLayout class;
	slots: f asSlotCollection;
	sharedVariablesFromString: d;
	sharedPools: s;
	category: cat;
	environment: self environment;
	copyClassSlotsFromExistingClass ] in Object class(Class)>>private_subclass:instanceVariableNames:classVariableNames:poolDictionaries:category:
	Receiver: Object
	Arguments and temporary variables: 
		t: 	#NameOfSubclass
		f: 	'count'
		d: 	''
		s: 	''
		cat: 	'Montecarlo'
		builder: 	a SlotClassBuilder
	Receiver's instance variables: 
		superclass: 	ProtoObject
		methodDict: 	a MethodDictionary(size 408)
		format: 	0
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...
		name: 	#Object
		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Objects'
		traitComposition: 	{}
		localSelectors: 	nil


PharoClassInstaller class(AbstractClassInstaller class)>>make:
	Receiver: PharoClassInstaller
	Arguments and temporary variables: 
		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc...
		builder: 	a SlotClassBuilder
	Receiver's instance variables: 
		superclass: 	AbstractClassInstaller
		methodDict: 	a MethodDictionary(#basicClassDefinitionChangedFrom:to:using:->Phar...etc...
		format: 	65540
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#PharoClassInstaller
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Slot-ClassBuilder'
		traitComposition: 	{}
		localSelectors: 	nil


Object class(Class)>>private_subclass:instanceVariableNames:classVariableNames:poolDictionaries:category:
	Receiver: Object
	Arguments and temporary variables: 
		t: 	#NameOfSubclass
		f: 	'count'
		d: 	''
		s: 	''
		cat: 	'Montecarlo'
	Receiver's instance variables: 
		superclass: 	ProtoObject
		methodDict: 	a MethodDictionary(size 408)
		format: 	0
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...
		name: 	#Object
		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Objects'
		traitComposition: 	{}
		localSelectors: 	nil


[ self
	private_subclass: aName
	instanceVariableNames: someInstanceVariableNames
	classVariableNames: someClassVariableNames
	poolDictionaries: someSharedPoolNames
	category: aCategory ] in Object class(Class)>>subclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:package:
	Receiver: Object
	Arguments and temporary variables: 
		aName: 	#NameOfSubclass
		aTraitCompositionOrArray: 	#()
		someInstanceVariableNames: 	'count'
		someClassVariableNames: 	''
		someSharedPoolNames: 	''
		aCategory: 	'Montecarlo'
	Receiver's instance variables: 
		superclass: 	ProtoObject
		methodDict: 	a MethodDictionary(size 408)
		format: 	0
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...
		name: 	#Object
		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Objects'
		traitComposition: 	{}
		localSelectors: 	nil


[ | newClass |
"Create the class and set the trait composition"
newClass := aBlock value.
newClass setTraitComposition: aTraitComposition asTraitComposition.
SystemAnnouncer uniqueInstance classModificationAppliedTo: newClass.
newClass ] in Object class(Class)>>subclass:uses:with:
	Receiver: Object
	Arguments and temporary variables: 
		aName: 	#NameOfSubclass
		aTraitComposition: 	#()
		aBlock: 	[ self
	private_subclass: aName
	instanceVariableNames: someInstanceVar...etc...
		newClass: 	nil
	Receiver's instance variables: 
		superclass: 	ProtoObject
		methodDict: 	a MethodDictionary(size 408)
		format: 	0
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...
		name: 	#Object
		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Objects'
		traitComposition: 	{}
		localSelectors: 	nil


SystemDictionary(Dictionary)>>at:ifPresent:ifAbsent:
	Receiver: a SystemDictionary(lots of globals)
	Arguments and temporary variables: 
		key: 	#NameOfSubclass
		aPresentBlock: 	[ :old | 
| copyOfOld newClass |
copyOfOld := old copy.

"Modify...etc...
		anAbsentBlock: 	[ | newClass |
"Create the class and set the trait composition"
...etc...
	Receiver's instance variables: 
		tally: 	6586
		array: 	an Array(#SmallDictionary->SmallDictionary #MetacelloExampleProjectConfi...etc...
		cachedClassNames: 	an OrderedCollection(#AColorSelectorMorph #AGroupContentHasBe...etc...
		cachedNonClassNames: 	an OrderedCollection(#ActiveEvent #ActiveHand #ActiveWorld...etc...


Object class(Class)>>subclass:uses:with:
	Receiver: Object
	Arguments and temporary variables: 
		aName: 	#NameOfSubclass
		aTraitComposition: 	#()
		aBlock: 	[ self
	private_subclass: aName
	instanceVariableNames: someInstanceVar...etc...
	Receiver's instance variables: 
		superclass: 	ProtoObject
		methodDict: 	a MethodDictionary(size 408)
		format: 	0
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...
		name: 	#Object
		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Objects'
		traitComposition: 	{}
		localSelectors: 	nil


Object class(Class)>>subclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:package:
	Receiver: Object
	Arguments and temporary variables: 
		aName: 	#NameOfSubclass
		aTraitCompositionOrArray: 	#()
		someInstanceVariableNames: 	'count'
		someClassVariableNames: 	''
		someSharedPoolNames: 	''
		aCategory: 	'Montecarlo'
	Receiver's instance variables: 
		superclass: 	ProtoObject
		methodDict: 	a MethodDictionary(size 408)
		format: 	0
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...
		name: 	#Object
		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Objects'
		traitComposition: 	{}
		localSelectors: 	nil


Object class(Class)>>subclass:instanceVariableNames:classVariableNames:poolDictionaries:package:
	Receiver: Object
	Arguments and temporary variables: 
		t: 	#NameOfSubclass
		f: 	'count'
		d: 	''
		s: 	''
		cat: 	'Montecarlo'
	Receiver's instance variables: 
		superclass: 	ProtoObject
		methodDict: 	a MethodDictionary(size 408)
		format: 	0
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...
		name: 	#Object
		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Objects'
		traitComposition: 	{}
		localSelectors: 	nil


Object class(Class)>>subclass:instanceVariableNames:classVariableNames:package:
	Receiver: Object
	Arguments and temporary variables: 
		aSubclassSymbol: 	#NameOfSubclass
		instVarNames: 	'count'
		classVarNames: 	''
		aPackageSymbol: 	'Montecarlo'
	Receiver's instance variables: 
		superclass: 	ProtoObject
		methodDict: 	a MethodDictionary(size 408)
		format: 	0
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...
		name: 	#Object
		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Objects'
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	nil
		itsSelectionString: 	nil
	Receiver's instance variables: 
		ast: 	DoIt
	^ Object
		subclass: #NameOfSubclass
		instanceVariableNames: 'count...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


NautilusUI(AbstractTool)>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a NautilusUI
	Arguments and temporary variables: 
		aString: 	'Object subclass: #NameOfSubclass
	instanceVariableNames: ''count''
	c...etc...
		aController: 	a RubScrolledTextMorph(533290752)
		aClass: 	nil
		oldClass: 	nil
		class: 	nil
		newClassName: 	'NameOfSubclass'
		defTokens: 	an OrderedCollection('Object' 'subclass:' '#NameOfSubclass' 'instanc...etc...
		keywdIx: 	2
		envt: 	a SystemDictionary(lots of globals)
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a CategoryWidget a MethodWidget a ClassWidget a P...etc...
		announceur: 	nil
		model: 	a Nautilus
		window: 	a NautilusWindow(526555648)
		sourceCodePanel: 	a PanelMorph(495739392)
		fullDisplayedComment: 	false
		sourceCodeContainer: 	a PanelMorph(732375808)
		shouldUpdateTitle: 	true
		contentSelection: 	a Text for ''
		acceptor: 	a ClassDefinitionAcceptor
		commentWidget: 	a RubScrolledTextMorph(669372160)
		sourceTextWidget: 	a RubScrolledTextMorph(533290752)
		sourceCodeSelectionInterval: 	(64 to: 63)
		sourceTextModel: 	a RubScrolledTextModel
		methodClassifier: 	nil
		commentTextModel: 	nil
		instanceButtonWidget: 	a PluggableToggleButtonMorph(698353408)
		categoryWidget: 	a CategoryWidget
		methodWidget: 	a MethodWidget
		classWidget: 	a ClassWidget
		packageWidget: 	a PackageWidget
		packagePatternString: 	nil
		packagePattern: 	nil
		searchWidget: 	a SearchMorph(634137344)


NautilusUI(AbstractNautilusUI)>>compileAClassFrom:notifying:
	Receiver: a NautilusUI
	Arguments and temporary variables: 
		aString: 	'Object subclass: #NameOfSubclass
	instanceVariableNames: ''count''
	c...etc...
		aController: 	a RubScrolledTextMorph(533290752)
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a CategoryWidget a MethodWidget a ClassWidget a P...etc...
		announceur: 	nil
		model: 	a Nautilus
		window: 	a NautilusWindow(526555648)
		sourceCodePanel: 	a PanelMorph(495739392)
		fullDisplayedComment: 	false
		sourceCodeContainer: 	a PanelMorph(732375808)
		shouldUpdateTitle: 	true
		contentSelection: 	a Text for ''
		acceptor: 	a ClassDefinitionAcceptor
		commentWidget: 	a RubScrolledTextMorph(669372160)
		sourceTextWidget: 	a RubScrolledTextMorph(533290752)
		sourceCodeSelectionInterval: 	(64 to: 63)
		sourceTextModel: 	a RubScrolledTextModel
		methodClassifier: 	nil
		commentTextModel: 	nil
		instanceButtonWidget: 	a PluggableToggleButtonMorph(698353408)
		categoryWidget: 	a CategoryWidget
		methodWidget: 	a MethodWidget
		classWidget: 	a ClassWidget
		packageWidget: 	a PackageWidget
		packagePatternString: 	nil
		packagePattern: 	nil
		searchWidget: 	a SearchMorph(634137344)


ClassDefinitionAcceptor>>accept:notifying:
	Receiver: a ClassDefinitionAcceptor
	Arguments and temporary variables: 
		aText: 	'Object subclass: #NameOfSubclass
	instanceVariableNames: ''count''
	cla...etc...
		aController: 	a RubScrolledTextMorph(533290752)
	Receiver's instance variables: 
		model: 	a NautilusUI


NautilusUI>>compileSource:notifying:
	Receiver: a NautilusUI
	Arguments and temporary variables: 
		aText: 	'Object subclass: #NameOfSubclass
	instanceVariableNames: ''count''
	cla...etc...
		aController: 	a RubScrolledTextMorph(533290752)
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a CategoryWidget a MethodWidget a ClassWidget a P...etc...
		announceur: 	nil
		model: 	a Nautilus
		window: 	a NautilusWindow(526555648)
		sourceCodePanel: 	a PanelMorph(495739392)
		fullDisplayedComment: 	false
		sourceCodeContainer: 	a PanelMorph(732375808)
		shouldUpdateTitle: 	true
		contentSelection: 	a Text for ''
		acceptor: 	a ClassDefinitionAcceptor
		commentWidget: 	a RubScrolledTextMorph(669372160)
		sourceTextWidget: 	a RubScrolledTextMorph(533290752)
		sourceCodeSelectionInterval: 	(64 to: 63)
		sourceTextModel: 	a RubScrolledTextModel
		methodClassifier: 	nil
		commentTextModel: 	nil
		instanceButtonWidget: 	a PluggableToggleButtonMorph(698353408)
		categoryWidget: 	a CategoryWidget
		methodWidget: 	a MethodWidget
		classWidget: 	a ClassWidget
		packageWidget: 	a PackageWidget
		packagePatternString: 	nil
		packagePattern: 	nil
		searchWidget: 	a SearchMorph(634137344)


NautilusUI(AbstractNautilusUI)>>whenTextAcceptedInView:
	Receiver: a NautilusUI
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepted
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a CategoryWidget a MethodWidget a ClassWidget a P...etc...
		announceur: 	nil
		model: 	a Nautilus
		window: 	a NautilusWindow(526555648)
		sourceCodePanel: 	a PanelMorph(495739392)
		fullDisplayedComment: 	false
		sourceCodeContainer: 	a PanelMorph(732375808)
		shouldUpdateTitle: 	true
		contentSelection: 	a Text for ''
		acceptor: 	a ClassDefinitionAcceptor
		commentWidget: 	a RubScrolledTextMorph(669372160)
		sourceTextWidget: 	a RubScrolledTextMorph(533290752)
		sourceCodeSelectionInterval: 	(64 to: 63)
		sourceTextModel: 	a RubScrolledTextModel
		methodClassifier: 	nil
		commentTextModel: 	nil
		instanceButtonWidget: 	a PluggableToggleButtonMorph(698353408)
		categoryWidget: 	a CategoryWidget
		methodWidget: 	a MethodWidget
		classWidget: 	a ClassWidget
		packageWidget: 	a PackageWidget
		packagePatternString: 	nil
		packagePattern: 	nil
		searchWidget: 	a SearchMorph(634137344)


MessageSend>>value:
	Receiver: MessageSend(#whenTextAcceptedInView: -> a NautilusUI)
	Arguments and temporary variables: 
		anObject: 	a RubTextAccepted
	Receiver's instance variables: 
		receiver: 	a NautilusUI
		selector: 	#whenTextAcceptedInView:
		arguments: 	#()


MessageSend>>cull:
	Receiver: MessageSend(#whenTextAcceptedInView: -> a NautilusUI)
	Arguments and temporary variables: 
		arg: 	a RubTextAccepted
	Receiver's instance variables: 
		receiver: 	a NautilusUI
		selector: 	#whenTextAcceptedInView:
		arguments: 	#()


MessageSend>>cull:cull:
	Receiver: MessageSend(#whenTextAcceptedInView: -> a NautilusUI)
	Arguments and temporary variables: 
		arg1: 	a RubTextAccepted
		arg2: 	an Announcer
	Receiver's instance variables: 
		receiver: 	a NautilusUI
		selector: 	#whenTextAcceptedInView:
		arguments: 	#()


[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepted
	Receiver's instance variables: 
		announcer: 	an Announcer
		announcementClass: 	RubTextAccepted
		subscriber: 	a NautilusUI
		action: 	MessageSend(#whenTextAcceptedInView: -> a NautilusUI)


BlockClosure>>on:do:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx...etc...
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	47
		numArgs: 	0


BlockClosure>>on:fork:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | ex pass ]
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	47
		numArgs: 	0


AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepted
	Receiver's instance variables: 
		announcer: 	an Announcer
		announcementClass: 	RubTextAccepted
		subscriber: 	a NautilusUI
		action: 	MessageSend(#whenTextAcceptedInView: -> a NautilusUI)


[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepted
		subs: 	an Array(an AnnouncementSubscription)
		startIndex: 	1
		index: 	1
		subscription: 	an AnnouncementSubscription
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


BlockClosure>>ifCurtailed:
	Receiver: [ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ]
	Arguments and temporary variables: 
		aBlock: 	[ self deliver: anAnnouncement to: subs startingAt: index + 1 ]
		complete: 	nil
		result: 	nil
	Receiver's instance variables: 
		outerContext: 	SubscriptionRegistry>>deliver:to:startingAt:
		startpc: 	54
		numArgs: 	0


SubscriptionRegistry>>deliver:to:startingAt:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepted
		subs: 	an Array(an AnnouncementSubscription)
		startIndex: 	1
		subscription: 	an AnnouncementSubscription
		index: 	1
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


SubscriptionRegistry>>deliver:to:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepted
		subs: 	an Array(an AnnouncementSubscription)
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


SubscriptionRegistry>>deliver:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		interestedSubscriptions: 	an Array(an AnnouncementSubscription)
		anAnnouncement: 	a RubTextAccepted
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


Announcer>>announce:
	Receiver: an Announcer
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepted
		announcement: 	a RubTextAccepted
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry


RubScrolledTextMorph>>acceptContents
	Receiver: a RubScrolledTextMorph(533290752)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(447.0@447.0) corner: (1287.0@693.0)
		owner: 	a PanelMorph(495739392)
		submorphs: 	an Array(a RubTextScrollPane(437718528) a RubAdornmentDisplayer(9788...etc...
		fullBounds: 	(447@447) corner: (1287@693)
		color: 	(Color r: 0.13 g: 0.13 b: 0.13 alpha: 1.0)
		extension: 	a MorphExtension (66048512) [other:  (announcer -> an Announcer) (km...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	false
		alwaysAccept: 	nil
		setTextSelector: 	#setText:from:
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(437718528)
		rulers: 	a SortedCollection(a NautilusAnnotationDisplayer(969560576) a RubTextSe...etc...
		enabled: 	true
		highlights: 	an OrderedCollection()


RubScrolledTextMorph>>whenTextAcceptRequest:
	Receiver: a RubScrolledTextMorph(533290752)
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAcceptRequest
	Receiver's instance variables: 
		bounds: 	(447.0@447.0) corner: (1287.0@693.0)
		owner: 	a PanelMorph(495739392)
		submorphs: 	an Array(a RubTextScrollPane(437718528) a RubAdornmentDisplayer(9788...etc...
		fullBounds: 	(447@447) corner: (1287@693)
		color: 	(Color r: 0.13 g: 0.13 b: 0.13 alpha: 1.0)
		extension: 	a MorphExtension (66048512) [other:  (announcer -> an Announcer) (km...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	false
		alwaysAccept: 	nil
		setTextSelector: 	#setText:from:
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(437718528)
		rulers: 	a SortedCollection(a NautilusAnnotationDisplayer(969560576) a RubTextSe...etc...
		enabled: 	true
		highlights: 	an OrderedCollection()


MessageSend>>value:
	Receiver: MessageSend(#whenTextAcceptRequest: -> a RubScrolledTextMorph(533290752))
	Arguments and temporary variables: 
		anObject: 	a RubTextAcceptRequest
	Receiver's instance variables: 
		receiver: 	a RubScrolledTextMorph(533290752)
		selector: 	#whenTextAcceptRequest:
		arguments: 	#()


MessageSend>>cull:
	Receiver: MessageSend(#whenTextAcceptRequest: -> a RubScrolledTextMorph(533290752))
	Arguments and temporary variables: 
		arg: 	a RubTextAcceptRequest
	Receiver's instance variables: 
		receiver: 	a RubScrolledTextMorph(533290752)
		selector: 	#whenTextAcceptRequest:
		arguments: 	#()


MessageSend>>cull:cull:
	Receiver: MessageSend(#whenTextAcceptRequest: -> a RubScrolledTextMorph(533290752))
	Arguments and temporary variables: 
		arg1: 	a RubTextAcceptRequest
		arg2: 	an Announcer
	Receiver's instance variables: 
		receiver: 	a RubScrolledTextMorph(533290752)
		selector: 	#whenTextAcceptRequest:
		arguments: 	#()


[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAcceptRequest
	Receiver's instance variables: 
		announcer: 	an Announcer
		announcementClass: 	RubTextAcceptRequest
		subscriber: 	a RubScrolledTextMorph(533290752)
		action: 	MessageSend(#whenTextAcceptRequest: -> a RubScrolledTextMorph(533290752...etc...


BlockClosure>>on:do:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx...etc...
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	47
		numArgs: 	0



--- The full stack ---
SlotClassBuilder>>validateClassName
SlotClassBuilder>>name:
[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self classLayout class;
	slots: f asSlotCollection;
	sharedVariablesFromString: d;
	sharedPools: s;
	category: cat;
	environment: self environment;
	copyClassSlotsFromExistingClass ] in Object class(Class)>>private_subclass:instanceVariableNames:classVariableNames:poolDictionaries:category:
PharoClassInstaller class(AbstractClassInstaller class)>>make:
Object class(Class)>>private_subclass:instanceVariableNames:classVariableNames:poolDictionaries:category:
[ self
	private_subclass: aName
	instanceVariableNames: someInstanceVariableNames
	classVariableNames: someClassVariableNames
	poolDictionaries: someSharedPoolNames
	category: aCategory ] in Object class(Class)>>subclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:package:
[ | newClass |
"Create the class and set the trait composition"
newClass := aBlock value.
newClass setTraitComposition: aTraitComposition asTraitComposition.
SystemAnnouncer uniqueInstance classModificationAppliedTo: newClass.
newClass ] in Object class(Class)>>subclass:uses:with:
SystemDictionary(Dictionary)>>at:ifPresent:ifAbsent:
Object class(Class)>>subclass:uses:with:
Object class(Class)>>subclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:package:
Object class(Class)>>subclass:instanceVariableNames:classVariableNames:poolDictionaries:package:
Object class(Class)>>subclass:instanceVariableNames:classVariableNames:package:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
NautilusUI(AbstractTool)>>compileANewClassFrom:notifying:startingFrom:
NautilusUI(AbstractNautilusUI)>>compileAClassFrom:notifying:
ClassDefinitionAcceptor>>accept:notifying:
NautilusUI>>compileSource:notifying:
NautilusUI(AbstractNautilusUI)>>whenTextAcceptedInView:
MessageSend>>value:
MessageSend>>cull:
MessageSend>>cull:cull:
[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
BlockClosure>>on:do:
BlockClosure>>on:fork:
AnnouncementSubscription>>deliver:
[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
BlockClosure>>ifCurtailed:
SubscriptionRegistry>>deliver:to:startingAt:
SubscriptionRegistry>>deliver:to:
SubscriptionRegistry>>deliver:
Announcer>>announce:
RubScrolledTextMorph>>acceptContents
RubScrolledTextMorph>>whenTextAcceptRequest:
MessageSend>>value:
MessageSend>>cull:
MessageSend>>cull:cull:
[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
BlockClosure>>on:do:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
BlockClosure>>on:fork:
AnnouncementSubscription>>deliver:
[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
BlockClosure>>ifCurtailed:
SubscriptionRegistry>>deliver:to:startingAt:
SubscriptionRegistry>>deliver:to:
SubscriptionRegistry>>deliver:
Announcer>>announce:
RubEditingArea(RubAbstractTextArea)>>announce:
RubEditingArea(RubAbstractTextArea)>>acceptContents
RubSmalltalkEditor(RubTextEditor)>>accept
[ :target | target editor accept ] in RubTextEditor class>>buildShortcutsOn:
BlockClosure>>cull:
BlockClosure>>cull:cull:
BlockClosure>>cull:cull:cull:
KMCategoryBinding>>completeMatch:buffer:
[ :l | l completeMatch: self buffer: aBuffer ] in KMKeymap>>notifyCompleteMatchTo:buffer:
Array(SequenceableCollection)>>do:
KMKeymap>>notifyCompleteMatchTo:buffer:
KMKeymap>>onMatchWith:notify:andDo:
THERE_BE_DRAGONS_HERE
Instance of Montecarlo class did not understand #pi
27 October 2019 9:07:28.921868 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

Montecarlo class(Object)>>doesNotUnderstand: #pi
	Receiver: Montecarlo
	Arguments and temporary variables: 
		aMessage: 	pi
		exception: 	MessageNotUnderstood: Montecarlo class>>pi
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#pi->Montecarlo>>#pi )
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Montecarlo
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Montecarlo
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ Montecarlo pi
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(252216064)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(252216064)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(27865600)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(252216064)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@373)
		owner: 	a TransformWithLayoutMorph(937483776)
		submorphs: 	an Array(a RubPrimarySelectionMorph(239788544) a RubCursor(543089408...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (376220416) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(205524736)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(543089408)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945747456))
		getMenuPolicy: 	nil
		mouseDownPoint: 	(188.0@362.0)
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(27865600)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(883997184))(a SearchMorp...etc...
		lastStepTime: 	2515479
		lastStepMessage: 	nil
		lastCycleTime: 	2515501
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(543089408)))
		lastAlarmTime: 	2515479
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(689067520) a Na...etc...
		fullBounds: 	(0@0) corner: (1824@1153)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(883997184))(a SearchMorp...etc...
		lastStepTime: 	2515479
		lastStepMessage: 	nil
		lastCycleTime: 	2515501
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(543089408)))
		lastAlarmTime: 	2515479
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(883997184))(a SearchMorp...etc...
		lastStepTime: 	2515479
		lastStepMessage: 	nil
		lastCycleTime: 	2515501
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(543089408)))
		lastAlarmTime: 	2515479
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(689067520) a Na...etc...
		fullBounds: 	(0@0) corner: (1824@1153)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
Montecarlo class(Object)>>doesNotUnderstand: #pi
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Montecarlo class did not understand #pi:
27 October 2019 9:07:44.516868 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

Montecarlo class(Object)>>doesNotUnderstand: #pi:
	Receiver: Montecarlo
	Arguments and temporary variables: 
		aMessage: 	pi: nil
		exception: 	MessageNotUnderstood: Montecarlo class>>pi:
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#pi->Montecarlo>>#pi )
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Montecarlo
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Montecarlo
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	a Text for ''
		itsSelectionString: 	''
	Receiver's instance variables: 
		ast: 	DoIt
	^ Montecarlo pi: value
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(252216064)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(252216064)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(27865600)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(252216064)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@373)
		owner: 	a TransformWithLayoutMorph(937483776)
		submorphs: 	an Array(a RubPrimarySelectionMorph(239788544) a RubCursor(543089408...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (376220416) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(205524736)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(543089408)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(547869184))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(27865600)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(634137344))(a SearchMorp...etc...
		lastStepTime: 	2531077
		lastStepMessage: 	nil
		lastCycleTime: 	2531098
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(543089408)))
		lastAlarmTime: 	2531077
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(689067520) a Na...etc...
		fullBounds: 	(0@0) corner: (1824@1153)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(634137344))(a SearchMorp...etc...
		lastStepTime: 	2531077
		lastStepMessage: 	nil
		lastCycleTime: 	2531098
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(543089408)))
		lastAlarmTime: 	2531077
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	a FormCanvas on: DisplayScreen(1824x1153x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(634137344))(a SearchMorp...etc...
		lastStepTime: 	2531077
		lastStepMessage: 	nil
		lastCycleTime: 	2531098
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(543089408)))
		lastAlarmTime: 	2531077
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(689067520) a Na...etc...
		fullBounds: 	(0@0) corner: (1824@1153)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
Montecarlo class(Object)>>doesNotUnderstand: #pi:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE

27 October 2019 9:08:28.110868 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

Process>>terminate
	Receiver: a Process in Process>>terminate
	Arguments and temporary variables: 
		ctxt: 	nil
		unwindBlock: 	nil
		oldList: 	nil
	Receiver's instance variables: 
		nextLink: 	nil
		suspendedContext: 	Process>>terminate
		priority: 	40
		myList: 	nil
		name: 	nil
		env: 	nil
		effectiveProcess: 	nil
		terminating: 	true


NECController>>stopCompletionDelay
	Receiver: a NECController
	Arguments and temporary variables: 

	Receiver's instance variables: 
		model: 	a GLMRubricSmalltalkTextModel
		menuMorph: 	nil
		editor: 	a RubSmalltalkEditor
		context: 	nil
		inverseMapping: 	a Dictionary($"->$" $'->$' $)->$( $]->$[ $}->${ )
		completionDelay: 	a Process in Process>>terminate


NECController>>closeMenu
	Receiver: a NECController
	Arguments and temporary variables: 

	Receiver's instance variables: 
		model: 	a GLMRubricSmalltalkTextModel
		menuMorph: 	nil
		editor: 	a RubSmalltalkEditor
		context: 	nil
		inverseMapping: 	a Dictionary($"->$" $'->$' $)->$( $]->$[ $}->${ )
		completionDelay: 	a Process in Process>>terminate


MessageSend>>value
	Receiver: MessageSend(#closeMenu -> a NECController)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a NECController
		selector: 	#closeMenu
		arguments: 	#()


MessageSend>>cull:
	Receiver: MessageSend(#closeMenu -> a NECController)
	Arguments and temporary variables: 
		arg: 	a MorphLostFocus
	Receiver's instance variables: 
		receiver: 	a NECController
		selector: 	#closeMenu
		arguments: 	#()


MessageSend>>cull:cull:
	Receiver: MessageSend(#closeMenu -> a NECController)
	Arguments and temporary variables: 
		arg1: 	a MorphLostFocus
		arg2: 	an Announcer
	Receiver's instance variables: 
		receiver: 	a NECController
		selector: 	#closeMenu
		arguments: 	#()


[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
	Receiver's instance variables: 
		announcer: 	an Announcer
		announcementClass: 	MorphLostFocus
		subscriber: 	a NECController
		action: 	MessageSend(#closeMenu -> a NECController)


BlockClosure>>on:do:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx...etc...
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	47
		numArgs: 	0


BlockClosure>>on:fork:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | ex pass ]
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	47
		numArgs: 	0


AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
	Receiver's instance variables: 
		announcer: 	an Announcer
		announcementClass: 	MorphLostFocus
		subscriber: 	a NECController
		action: 	MessageSend(#closeMenu -> a NECController)


[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
		subs: 	an Array(an AnnouncementSubscription an AnnouncementSubscription an Annou...etc...
		startIndex: 	1
		index: 	5
		subscription: 	an AnnouncementSubscription
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


BlockClosure>>ifCurtailed:
	Receiver: [ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ]
	Arguments and temporary variables: 
		aBlock: 	[ self deliver: anAnnouncement to: subs startingAt: index + 1 ]
		complete: 	nil
		result: 	nil
	Receiver's instance variables: 
		outerContext: 	SubscriptionRegistry>>deliver:to:startingAt:
		startpc: 	54
		numArgs: 	0


SubscriptionRegistry>>deliver:to:startingAt:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
		subs: 	an Array(an AnnouncementSubscription an AnnouncementSubscription an Annou...etc...
		startIndex: 	1
		subscription: 	an AnnouncementSubscription
		index: 	5
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


SubscriptionRegistry>>deliver:to:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
		subs: 	an Array(an AnnouncementSubscription an AnnouncementSubscription an Annou...etc...
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


SubscriptionRegistry>>deliver:
	Receiver: a SubscriptionRegistry
	Arguments and temporary variables: 
		interestedSubscriptions: 	an Array(an AnnouncementSubscription an AnnouncementSu...etc...
		anAnnouncement: 	a MorphLostFocus
	Receiver's instance variables: 
		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...
		monitor: 	a Semaphore()


Announcer>>announce:
	Receiver: an Announcer
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
		announcement: 	a MorphLostFocus
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry


RubEditingArea(Morph)>>doAnnounce:
	Receiver: a RubEditingArea(252216064)
	Arguments and temporary variables: 
		anAnnouncement: 	a MorphLostFocus
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@335)
		owner: 	a TransformWithLayoutMorph(937483776)
		submorphs: 	an Array(a RubPrimarySelectionMorph(317680128) a RubCursor(543089408...etc...
		fullBounds: 	(0@0) corner: (811@335)
		color: 	Color transparent
		extension: 	a MorphExtension (376220416) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(205524736)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(543089408)
		segments: 	an OrderedCollection()
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>announceKeyboardFocusChange:
	Receiver: a RubEditingArea(252216064)
	Arguments and temporary variables: 
		gotFocus: 	false
		announcement: 	a MorphLostFocus
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@335)
		owner: 	a TransformWithLayoutMorph(937483776)
		submorphs: 	an Array(a RubPrimarySelectionMorph(317680128) a RubCursor(543089408...etc...
		fullBounds: 	(0@0) corner: (811@335)
		color: 	Color transparent
		extension: 	a MorphExtension (376220416) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(205524736)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(543089408)
		segments: 	an OrderedCollection()
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>keyboardFocusChange:
	Receiver: a RubEditingArea(252216064)
	Arguments and temporary variables: 
		gotFocus: 	false
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@335)
		owner: 	a TransformWithLayoutMorph(937483776)
		submorphs: 	an Array(a RubPrimarySelectionMorph(317680128) a RubCursor(543089408...etc...
		fullBounds: 	(0@0) corner: (811@335)
		color: 	Color transparent
		extension: 	a MorphExtension (376220416) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(205524736)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(543089408)
		segments: 	an OrderedCollection()
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>keyboardFocusChange:
	Receiver: a RubEditingArea(252216064)
	Arguments and temporary variables: 
		aBoolean: 	false
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@335)
		owner: 	a TransformWithLayoutMorph(937483776)
		submorphs: 	an Array(a RubPrimarySelectionMorph(317680128) a RubCursor(543089408...etc...
		fullBounds: 	(0@0) corner: (811@335)
		color: 	Color transparent
		extension: 	a MorphExtension (376220416) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(205524736)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(543089408)
		segments: 	an OrderedCollection()
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


HandMorph>>newKeyboardFocus:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		aMorphOrNil: 	nil
		oldFocus: 	a RubEditingArea(252216064)
	Receiver's instance variables: 
		bounds: 	(1259@907) corner: (1275@923)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (587897088)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(1259@907) mouseOver CTRL 201798234 nil]
		targetOffset: 	(313.0@308.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 201798234 1259 907 0 2 0 1)
		lastKeyScanCode: 	83
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	3


HandMorph>>releaseKeyboardFocus
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(1259@907) corner: (1275@923)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (587897088)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(1259@907) mouseOver CTRL 201798234 nil]
		targetOffset: 	(313.0@308.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	false
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 201798234 1259 907 0 2 0 1)
		lastKeyScanCode: 	83
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	3


[ :hand | hand releaseKeyboardFocus ] in WorldMorph>>viewBox:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		newViewBox: 	(0@0) corner: (1824@1153)
		hand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(689067520) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


Array(SequenceableCollection)>>do:
	Receiver: an Array(a HandMorph(58125568))
	Arguments and temporary variables: 
		aBlock: 	[ :hand | hand releaseKeyboardFocus ]
		index: 	1
	Receiver's instance variables: 
an Array(a HandMorph(58125568))

WorldState>>handsDo:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aBlock: 	[ :hand | hand releaseKeyboardFocus ]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1824@1153)
		canvas: 	nil
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(883997184))(a SearchMorp...etc...
		lastStepTime: 	2574343
		lastStepMessage: 	nil
		lastCycleTime: 	2574366
		alarms: 	a Heap()
		lastAlarmTime: 	2574343
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>viewBox:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		newViewBox: 	(0@0) corner: (1824@1153)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(689067520) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph(PasteUpMorph)>>restoreMorphicDisplay
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1824@1153)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(689067520) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>startUp
	Receiver: WorldMorph
	Arguments and temporary variables: 
		world: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


WorldMorph class(Behavior)>>startUp:
	Receiver: WorldMorph
	Arguments and temporary variables: 
		resuming: 	false
	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


ClassSessionHandler>>startup:
	Receiver: a ClassSessionHandler(WorldMorph)
	Arguments and temporary variables: 
		isImageStarting: 	false
	Receiver's instance variables: 
		registeredClassName: 	#WorldMorph


[ :each | each startup: isImageStarting ] in WorkingSession>>runStartup:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		isImageStarting: 	false
		each: 	a ClassSessionHandler(WorldMorph)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-27T20:25:33.454868+01:00


[ aBlock value: each ] in [ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | self errorHandler handleError: error ] ] in WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		aList: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(S...etc...
		aBlock: 	[ :each | each startup: isImageStarting ]
		each: 	a ClassSessionHandler(WorldMorph)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-27T20:25:33.454868+01:00


BlockClosure>>on:do:
	Receiver: [ aBlock value: each ]
	Arguments and temporary variables: 
		exception: 	Exception
		handlerAction: 	[ :error | self errorHandler handleError: error ]
	Receiver's instance variables: 
		outerContext: 	[ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | ...etc...
		startpc: 	41
		numArgs: 	0


[ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | self errorHandler handleError: error ] ] in WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		aList: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(S...etc...
		aBlock: 	[ :each | each startup: isImageStarting ]
		each: 	a ClassSessionHandler(WorldMorph)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-27T20:25:33.454868+01:00


Array(SequenceableCollection)>>do:
	Receiver: an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(SmallInteger) a Cla...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | self e...etc...
		index: 	49
	Receiver's instance variables: 
an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(SmallInteger) a Cla...etc...

WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		aList: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(S...etc...
		aBlock: 	[ :each | each startup: isImageStarting ]
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-27T20:25:33.454868+01:00


WorkingSession>>runStartup:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		isImageStarting: 	false
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-27T20:25:33.454868+01:00


WorkingSession>>start:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		isImageStarting: 	false
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection([ self managedServers do: [ :each ...etc...
		id: 	nil
		creationTime: 	2019-10-27T20:25:33.454868+01:00


SessionManager>>snapshot:andQuit:
	Receiver: a SessionManager
	Arguments and temporary variables: 
		save: 	true
		quit: 	false
		isImageStarting: 	false
		snapshotResult: 	false
	Receiver's instance variables: 
		currentSession: 	a WorkingSession
		categories: 	an OrderedCollection(a SessionCategory(System) a SessionCategory(Ne...etc...
		guiCategory: 	a SessionCategory(Graphical User Interface)
		toolsCategory: 	a SessionCategory(Tools)
		networkCategory: 	a SessionCategory(Network)
		systemCategory: 	a SessionCategory(System)
		userCategory: 	a SessionCategory(User)



--- The full stack ---
Process>>terminate
NECController>>stopCompletionDelay
NECController>>closeMenu
MessageSend>>value
MessageSend>>cull:
MessageSend>>cull:cull:
[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
BlockClosure>>on:do:
BlockClosure>>on:fork:
AnnouncementSubscription>>deliver:
[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:
BlockClosure>>ifCurtailed:
SubscriptionRegistry>>deliver:to:startingAt:
SubscriptionRegistry>>deliver:to:
SubscriptionRegistry>>deliver:
Announcer>>announce:
RubEditingArea(Morph)>>doAnnounce:
RubEditingArea(Morph)>>announceKeyboardFocusChange:
RubEditingArea(Morph)>>keyboardFocusChange:
RubEditingArea(RubAbstractTextArea)>>keyboardFocusChange:
HandMorph>>newKeyboardFocus:
HandMorph>>releaseKeyboardFocus
[ :hand | hand releaseKeyboardFocus ] in WorldMorph>>viewBox:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldMorph>>viewBox:
WorldMorph(PasteUpMorph)>>restoreMorphicDisplay
WorldMorph class>>startUp
WorldMorph class(Behavior)>>startUp:
ClassSessionHandler>>startup:
[ :each | each startup: isImageStarting ] in WorkingSession>>runStartup:
[ aBlock value: each ] in [ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | self errorHandler handleError: error ] ] in WorkingSession>>runList:do:
BlockClosure>>on:do:
[ :each | 
[ aBlock value: each ]
	on: Exception
	do: [ :error | self errorHandler handleError: error ] ] in WorkingSession>>runList:do:
Array(SequenceableCollection)>>do:
WorkingSession>>runList:do:
WorkingSession>>runStartup:
WorkingSession>>start:
SessionManager>>snapshot:andQuit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ ^ SessionManager default snapshot: save andQuit: quit ] in SmalltalkImage>>snapshot:andQuit:
CurrentExecutionEnvironment class>>activate:for:
DefaultExecutionEnvironment(ExecutionEnvironment)>>beActiveDuring:
DefaultExecutionEnvironment class>>beActiveDuring:
SmalltalkImage>>snapshot:andQuit:
[ (Smalltalk snapshot: true andQuit: false)
	ifFalse: [ UIManager default inform: 'Image saved' ] ] in ToolShortcutsCategory>>saveImage
BlockClosure>>cull:
BlockClosure>>cull:cull:
BlockClosure>>cull:cull:cull:
KMCategoryBinding>>completeMatch:buffer:
[ :l | l completeMatch: self buffer: aBuffer ] in KMKeymap>>notifyCompleteMatchTo:buffer:
Array(SequenceableCollection)>>do:
KMKeymap>>notifyCompleteMatchTo:buffer:
KMKeymap>>onMatchWith:notify:andDo:
[ :entry | entry onMatchWith: anEventBuffer notify: aMatchListener andDo: aBlock ] in ToolShortcutsCategory(KMCategory)>>onMatchWith:notify:andDo:
Set>>do:
ToolShortcutsCategory(KMCategory)>>onMatchWith:notify:andDo:
KMCategoryBinding>>verifyMatchWith:notifying:thenDoing:
[ :aTarget | 
"nice hack to stop in the first listener"
aTarget
	verifyMatchWith: anEventBuffer
	notifying: self
	thenDoing: [ ^ self ] ] in KMDispatcher>>dispatch:inCategories:
OrderedCollection>>do:
KMDispatcher>>dispatch:inCategories:
KmGlobalDispatcher>>dispatch:
[ :targetToDispatch | 
targetToDispatch dispatch: KMBuffer uniqueInstance buffer copy.
aKeyboardEvent wasHandled
	ifTrue: [ ^ self ] ] in KMDispatchChain>>dispatch:
KMDispatchChain>>do:
KMDispatchChain>>dispatch:
KMDispatcher>>dispatchKeystroke:
RubEditingArea(Morph)>>dispatchKeystrokeForEvent:
RubEditingArea(RubAbstractTextArea)>>handleKeystroke:
KeyboardEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
RubEditingArea(Morph)>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph(PasteUpMorph)>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendKeyboardEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#whoDefinesMethod: was sent to nil
27 October 2019 9:10:27.131868 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #whoDefinesMethod:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	whoDefinesMethod: #pi
		exception: 	MessageNotUnderstood: receiver of "whoDefinesMethod:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

RBPullUpMethodRefactoring>>copyDownMethod:
	Receiver: a RBPullUpMethodRefactoring
	Arguments and temporary variables: 
		aSelector: 	#pi
		oldProtocol: 	nil
		oldSource: 	nil
		superclassDefiner: 	nil
		subclasses: 	nil
		refactoring: 	nil
	Receiver's instance variables: 
		model: 	a RBNamespace
		options: 	an IdentityDictionary(#alreadyDefined->[ :ref :class :selector | self ...etc...
		class: 	Montecarlo
		removeDuplicates: 	false
		selectors: 	an OrderedCollection(#pi)


[ :each | self copyDownMethod: each ] in RBPullUpMethodRefactoring>>copyDownMethods
	Receiver: a RBPullUpMethodRefactoring
	Arguments and temporary variables: 
		each: 	#pi
	Receiver's instance variables: 
		model: 	a RBNamespace
		options: 	an IdentityDictionary(#alreadyDefined->[ :ref :class :selector | self ...etc...
		class: 	Montecarlo
		removeDuplicates: 	false
		selectors: 	an OrderedCollection(#pi)


OrderedCollection>>do:
	Receiver: an OrderedCollection(#pi)
	Arguments and temporary variables: 
		aBlock: 	[ :each | self copyDownMethod: each ]
		index: 	1
	Receiver's instance variables: 
		array: 	#(#pi)
		firstIndex: 	1
		lastIndex: 	1


RBPullUpMethodRefactoring>>copyDownMethods
	Receiver: a RBPullUpMethodRefactoring
	Arguments and temporary variables: 

	Receiver's instance variables: 
		model: 	a RBNamespace
		options: 	an IdentityDictionary(#alreadyDefined->[ :ref :class :selector | self ...etc...
		class: 	Montecarlo
		removeDuplicates: 	false
		selectors: 	an OrderedCollection(#pi)


RBPullUpMethodRefactoring>>transform
	Receiver: a RBPullUpMethodRefactoring
	Arguments and temporary variables: 

	Receiver's instance variables: 
		model: 	a RBNamespace
		options: 	an IdentityDictionary(#alreadyDefined->[ :ref :class :selector | self ...etc...
		class: 	Montecarlo
		removeDuplicates: 	false
		selectors: 	an OrderedCollection(#pi)


RBPullUpMethodRefactoring(RBRefactoring)>>primitiveExecute
	Receiver: a RBPullUpMethodRefactoring
	Arguments and temporary variables: 

	Receiver's instance variables: 
		model: 	a RBNamespace
		options: 	an IdentityDictionary(#alreadyDefined->[ :ref :class :selector | self ...etc...
		class: 	Montecarlo
		removeDuplicates: 	false
		selectors: 	an OrderedCollection(#pi)


[ :e | 
self refactoringOptions: e.
e primitiveExecute ] in NautilusRefactoring>>internalPerformRefactorings:
	Receiver: a NautilusRefactoring
	Arguments and temporary variables: 
		aCollectionRefactoring: 	an Array(a RBPullUpMethodRefactoring)
		e: 	a RBPullUpMethodRefactoring
	Receiver's instance variables: 
		environment: 	a RBNamespace
		model: 	a NautilusUI
		promptOnRefactoring: 	nil


Array(SequenceableCollection)>>do:
	Receiver: an Array(a RBPullUpMethodRefactoring)
	Arguments and temporary variables: 
		aBlock: 	[ :e | 
self refactoringOptions: e.
e primitiveExecute ]
		index: 	1
	Receiver's instance variables: 
an Array(a RBPullUpMethodRefactoring)

NautilusRefactoring>>internalPerformRefactorings:
	Receiver: a NautilusRefactoring
	Arguments and temporary variables: 
		aCollectionRefactoring: 	an Array(a RBPullUpMethodRefactoring)
	Receiver's instance variables: 
		environment: 	a RBNamespace
		model: 	a NautilusUI
		promptOnRefactoring: 	nil


[ self internalPerformRefactorings: aCollectionRefactoring ] in [ [ self internalPerformRefactorings: aCollectionRefactoring ]
	on: RBRefactoringFailure
	do: [ :exception | self handleFailure: exception ] ] in [ [ [ self internalPerformRefactorings: aCollectionRefactoring ]
	on: RBRefactoringFailure
	do: [ :exception | self handleFailure: exception ] ]
	on: RBRefactoringWarning
	do: [ :exception | self handleWarning: exception ] ] in NautilusRefactoring>>performRefactorings:
	Receiver: a NautilusRefactoring
	Arguments and temporary variables: 
		aCollectionRefactoring: 	an Array(a RBPullUpMethodRefactoring)
	Receiver's instance variables: 
		environment: 	a RBNamespace
		model: 	a NautilusUI
		promptOnRefactoring: 	nil


BlockClosure>>on:do:
	Receiver: [ self internalPerformRefactorings: aCollectionRefactoring ]
	Arguments and temporary variables: 
		exception: 	RBRefactoringFailure
		handlerAction: 	[ :exception | self handleFailure: exception ]
	Receiver's instance variables: 
		outerContext: 	[ [ self internalPerformRefactorings: aCollectionRefactoring ]
	o...etc...
		startpc: 	95
		numArgs: 	0


[ [ self internalPerformRefactorings: aCollectionRefactoring ]
	on: RBRefactoringFailure
	do: [ :exception | self handleFailure: exception ] ] in [ [ [ self internalPerformRefactorings: aCollectionRefactoring ]
	on: RBRefactoringFailure
	do: [ :exception | self handleFailure: exception ] ]
	on: RBRefactoringWarning
	do: [ :exception | self handleWarning: exception ] ] in NautilusRefactoring>>performRefactorings:
	Receiver: a NautilusRefactoring
	Arguments and temporary variables: 
		aCollectionRefactoring: 	an Array(a RBPullUpMethodRefactoring)
	Receiver's instance variables: 
		environment: 	a RBNamespace
		model: 	a NautilusUI
		promptOnRefactoring: 	nil


BlockClosure>>on:do:
	Receiver: [ [ self internalPerformRefactorings: aCollectionRefactoring ]
	on: RBRefactoringFailure
	...etc...
	Arguments and temporary variables: 
		exception: 	RBRefactoringWarning
		handlerAction: 	[ :exception | self handleWarning: exception ]
	Receiver's instance variables: 
		outerContext: 	[ [ [ self internalPerformRefactorings: aCollectionRefactoring ]
...etc...
		startpc: 	90
		numArgs: 	0


[ [ [ self internalPerformRefactorings: aCollectionRefactoring ]
	on: RBRefactoringFailure
	do: [ :exception | self handleFailure: exception ] ]
	on: RBRefactoringWarning
	do: [ :exception | self handleWarning: exception ] ] in NautilusRefactoring>>performRefactorings:
	Receiver: a NautilusRefactoring
	Arguments and temporary variables: 
		aCollectionRefactoring: 	an Array(a RBPullUpMethodRefactoring)
	Receiver's instance variables: 
		environment: 	a RBNamespace
		model: 	a NautilusUI
		promptOnRefactoring: 	nil


BlockClosure>>on:do:
	Receiver: [ [ [ self internalPerformRefactorings: aCollectionRefactoring ]
	on: RBRefactoringFailure...etc...
	Arguments and temporary variables: 
		exception: 	RBRefactoringError
		handlerAction: 	[ :exception | self handleError: exception ]
	Receiver's instance variables: 
		outerContext: 	NautilusRefactoring>>performRefactorings:
		startpc: 	85
		numArgs: 	0


NautilusRefactoring>>performRefactorings:
	Receiver: a NautilusRefactoring
	Arguments and temporary variables: 
		aCollectionRefactoring: 	an Array(a RBPullUpMethodRefactoring)
	Receiver's instance variables: 
		environment: 	a RBNamespace
		model: 	a NautilusUI
		promptOnRefactoring: 	nil


NautilusRefactoring>>performRefactoring:
	Receiver: a NautilusRefactoring
	Arguments and temporary variables: 
		aRefactoring: 	a RBPullUpMethodRefactoring
	Receiver's instance variables: 
		environment: 	a RBNamespace
		model: 	a NautilusUI
		promptOnRefactoring: 	nil


[ self performRefactoring: (self perform: aSymbol with: anArgument) ] in NautilusRefactoring>>performRefactoringFor:with:
	Receiver: a NautilusRefactoring
	Arguments and temporary variables: 
		aSymbol: 	#privatePullUpMethodsFor:
		anArgument: 	an OrderedCollection(Montecarlo>>#pi)
	Receiver's instance variables: 
		environment: 	a RBNamespace
		model: 	a NautilusUI
		promptOnRefactoring: 	nil


BlockClosure>>on:do:
	Receiver: [ self performRefactoring: (self perform: aSymbol with: anArgument) ]
	Arguments and temporary variables: 
		exception: 	RefactoringAborted
		handlerAction: 	[ :ex | self inform: 'Refactoring aborted' ]
	Receiver's instance variables: 
		outerContext: 	NautilusRefactoring>>performRefactoringFor:with:
		startpc: 	43
		numArgs: 	0


NautilusRefactoring>>performRefactoringFor:with:
	Receiver: a NautilusRefactoring
	Arguments and temporary variables: 
		aSymbol: 	#privatePullUpMethodsFor:
		anArgument: 	an OrderedCollection(Montecarlo>>#pi)
	Receiver's instance variables: 
		environment: 	a RBNamespace
		model: 	a NautilusUI
		promptOnRefactoring: 	nil


NautilusRefactoring>>pullUpMethodsFor:
	Receiver: a NautilusRefactoring
	Arguments and temporary variables: 
		aCollection: 	an OrderedCollection(Montecarlo>>#pi)
	Receiver's instance variables: 
		environment: 	a RBNamespace
		model: 	a NautilusUI
		promptOnRefactoring: 	nil


[ target refactor pullUpMethodsFor: selectedMethods ] in Montecarlo class(ClassDescription)>>methodRefactoring:
	Receiver: Montecarlo
	Arguments and temporary variables: 
		aBuilder: 	a PragmaMenuAndShortcutRegistration
		target: 	a NautilusUI
		selectedMethod: 	nil
		selectedMethods: 	an OrderedCollection(Montecarlo>>#pi)
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#pi->Montecarlo>>#pi )
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Montecarlo
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#Montecarlo
		traitComposition: 	{}
		localSelectors: 	nil


BlockClosure>>cull:
	Receiver: [ target refactor pullUpMethodsFor: selectedMethods ]
	Arguments and temporary variables: 
		anArg: 	a NautilusUI
	Receiver's instance variables: 
		outerContext: 	Montecarlo class(ClassDescription)>>methodRefactoring:
		startpc: 	444
		numArgs: 	0


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(342728192)'Push up'
	Arguments and temporary variables: 
		evt: 	[(1314@295) mouseUp 201917937 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	1
	Receiver's instance variables: 
		bounds: 	(1230.0@282.0) corner: (1430.0@299.0)
		owner: 	a MenuMorph(806906624)
		submorphs: 	#()
		fullBounds: 	(1230.0@282.0) corner: (1430.0@299.0)
		color: 	Color white
		extension: 	a MorphExtension (110275328)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Push up'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target refactor pullUpMethodsFor: selectedMethods ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	nil
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(342728192)'Push up'
	Arguments and temporary variables: 
		evt: 	[(1314@295) mouseUp 201917937 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(1230.0@282.0) corner: (1430.0@299.0)
		owner: 	a MenuMorph(806906624)
		submorphs: 	#()
		fullBounds: 	(1230.0@282.0) corner: (1430.0@299.0)
		color: 	Color white
		extension: 	a MorphExtension (110275328)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Push up'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target refactor pullUpMethodsFor: selectedMethods ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	nil
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(342728192)'Push up'
	Arguments and temporary variables: 
		evt: 	[(1314@295) mouseUp 201917937 nil]
	Receiver's instance variables: 
		bounds: 	(1230.0@282.0) corner: (1430.0@299.0)
		owner: 	a MenuMorph(806906624)
		submorphs: 	#()
		fullBounds: 	(1230.0@282.0) corner: (1430.0@299.0)
		color: 	Color white
		extension: 	a MorphExtension (110275328)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Push up'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target refactor pullUpMethodsFor: selectedMethods ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	nil
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(342728192)'Push up'
	Arguments and temporary variables: 
		anEvent: 	[(1314@295) mouseUp 201917937 nil]
	Receiver's instance variables: 
		bounds: 	(1230.0@282.0) corner: (1430.0@299.0)
		owner: 	a MenuMorph(806906624)
		submorphs: 	#()
		fullBounds: 	(1230.0@282.0) corner: (1430.0@299.0)
		color: 	Color white
		extension: 	a MorphExtension (110275328)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Push up'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target refactor pullUpMethodsFor: selectedMethods ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	nil
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(1314@295) mouseUp 201917937 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(342728192)'Push up'
	Receiver's instance variables: 
		timeStamp: 	201917937
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(1314@295)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(342728192)'Push up'
	Arguments and temporary variables: 
		anEvent: 	[(1314@295) mouseUp 201917937 nil]
	Receiver's instance variables: 
		bounds: 	(1230.0@282.0) corner: (1430.0@299.0)
		owner: 	a MenuMorph(806906624)
		submorphs: 	#()
		fullBounds: 	(1230.0@282.0) corner: (1430.0@299.0)
		color: 	Color white
		extension: 	a MorphExtension (110275328)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Push up'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target refactor pullUpMethodsFor: selectedMethods ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	nil
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(1314@295) mouseUp 201917937 nil]
		aMorph: 	a ToggleMenuItemMorph(342728192)'Push up'
		localEvt: 	nil
		index: 	1
		child: 	nil
		morphs: 	#()
		inside: 	true
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(342728192)'Push up'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(1314@295) mouseUp 201917937 nil]
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(342728192)'Push up'


MouseButtonEvent>>sentTo:
	Receiver: [(1314@295) mouseUp 201917937 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	201917937
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(1314@295)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(1314@295) mouseUp 201917937 nil]
		aMorph: 	a ToggleMenuItemMorph(342728192)'Push up'
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(342728192)'Push up'


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(1314@295) mouseUp 201917937 nil]
		aMorph: 	a ToggleMenuItemMorph(342728192)'Push up'
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(342728192)'Push up'


ToggleMenuItemMorph(Morph)>>processEvent:using:
	Receiver: a ToggleMenuItemMorph(342728192)'Push up'
	Arguments and temporary variables: 
		anEvent: 	[(1314@295) mouseUp 201917937 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(1230.0@282.0) corner: (1430.0@299.0)
		owner: 	a MenuMorph(806906624)
		submorphs: 	#()
		fullBounds: 	(1230.0@282.0) corner: (1430.0@299.0)
		color: 	Color white
		extension: 	a MorphExtension (110275328)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Push up'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	[ target refactor pullUpMethodsFor: selectedMethods ]
		selector: 	#cull:
		arguments: 	an Array(a NautilusUI)
		icon: 	nil
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #whoDefinesMethod:
RBPullUpMethodRefactoring>>copyDownMethod:
[ :each | self copyDownMethod: each ] in RBPullUpMethodRefactoring>>copyDownMethods
OrderedCollection>>do:
RBPullUpMethodRefactoring>>copyDownMethods
RBPullUpMethodRefactoring>>transform
RBPullUpMethodRefactoring(RBRefactoring)>>primitiveExecute
[ :e | 
self refactoringOptions: e.
e primitiveExecute ] in NautilusRefactoring>>internalPerformRefactorings:
Array(SequenceableCollection)>>do:
NautilusRefactoring>>internalPerformRefactorings:
[ self internalPerformRefactorings: aCollectionRefactoring ] in [ [ self internalPerformRefactorings: aCollectionRefactoring ]
	on: RBRefactoringFailure
	do: [ :exception | self handleFailure: exception ] ] in [ [ [ self internalPerformRefactorings: aCollectionRefactoring ]
	on: RBRefactoringFailure
	do: [ :exception | self handleFailure: exception ] ]
	on: RBRefactoringWarning
	do: [ :exception | self handleWarning: exception ] ] in NautilusRefactoring>>performRefactorings:
BlockClosure>>on:do:
[ [ self internalPerformRefactorings: aCollectionRefactoring ]
	on: RBRefactoringFailure
	do: [ :exception | self handleFailure: exception ] ] in [ [ [ self internalPerformRefactorings: aCollectionRefactoring ]
	on: RBRefactoringFailure
	do: [ :exception | self handleFailure: exception ] ]
	on: RBRefactoringWarning
	do: [ :exception | self handleWarning: exception ] ] in NautilusRefactoring>>performRefactorings:
BlockClosure>>on:do:
[ [ [ self internalPerformRefactorings: aCollectionRefactoring ]
	on: RBRefactoringFailure
	do: [ :exception | self handleFailure: exception ] ]
	on: RBRefactoringWarning
	do: [ :exception | self handleWarning: exception ] ] in NautilusRefactoring>>performRefactorings:
BlockClosure>>on:do:
NautilusRefactoring>>performRefactorings:
NautilusRefactoring>>performRefactoring:
[ self performRefactoring: (self perform: aSymbol with: anArgument) ] in NautilusRefactoring>>performRefactoringFor:with:
BlockClosure>>on:do:
NautilusRefactoring>>performRefactoringFor:with:
NautilusRefactoring>>pullUpMethodsFor:
[ target refactor pullUpMethodsFor: selectedMethods ] in Montecarlo class(ClassDescription)>>methodRefactoring:
BlockClosure>>cull:
[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
BlockClosure>>ensure:
CursorWithMask(Cursor)>>showWhile:
ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
ToggleMenuItemMorph(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
ToggleMenuItemMorph(Morph)>>processEvent:using:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
MenuMorph(Morph)>>processEvent:using:
MenuMorph(Morph)>>processEvent:
MenuMorph>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph(PasteUpMorph)>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#asLowercase was sent to nil
27 October 2019 9:41:08.867851 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #asLowercase
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	asLowercase
		exception: 	MessageNotUnderstood: receiver of "asLowercase" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

MCPackage>>hash
	Receiver: <<error during printing>>
	Arguments and temporary variables: 

	Receiver's instance variables: 
		name: 	nil


Dictionary>>scanFor:
	Receiver: a Dictionary(size 488)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		tally: 	488
		array: 	an Array(a MCPackage(MenuRegistration)->a MCWorkingCopy(MenuRegistration...etc...


Dictionary(HashedCollection)>>findElementOrNil:
	Receiver: a Dictionary(size 488)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		tally: 	488
		array: 	an Array(a MCPackage(MenuRegistration)->a MCWorkingCopy(MenuRegistration...etc...


Dictionary>>at:ifAbsent:
	Receiver: a Dictionary(size 488)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		tally: 	488
		array: 	an Array(a MCPackage(MenuRegistration)->a MCWorkingCopy(MenuRegistration...etc...


MCWorkingCopy class(MCPackageManager class)>>forPackage:
	Receiver: MCWorkingCopy
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		superclass: 	MCPackageManager
		methodDict: 	a MethodDictionary(#adopt:->MCWorkingCopy>>#adopt: #allAncestors->M...etc...
		format: 	65544
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#MCWorkingCopy
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Monticello-Versioning'
		traitComposition: 	{}
		localSelectors: 	nil
		registry: 	a Dictionary(size 488)


MCFileRepositoryInspector>>saveChanges
	Receiver: a MCFileRepositoryInspector
	Arguments and temporary variables: 
		currentRepository: 	a MCDirectoryRepository(C:\Projects\PSPP-P\P06_Smalltalk\Pha...etc...
		workingCopy: 	nil
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(253500672) a PluggableButtonMorph(...etc...
		announceur: 	an Announcer
		morph: 	a SystemWindow(253500672)
		label: 	nil
		modal: 	false
		modalValue: 	nil
		version: 	nil
		repository: 	a MCDirectoryRepository(C:\Projects\PSPP-P\P06_Smalltalk\Pharo6\Res...etc...
		versions: 	#()
		loaded: 	a Set('Zinc-HTTP-TheIntegrator.461' 'TxTextTests-Model-SeanDeNigris.29'...etc...
		loadedPackages: 	a Set()
		newer: 	a Set()
		packageList: 	#()
		selectedPackage: 	nil
		selectedVersion: 	nil
		order: 	5
		versionInfo: 	nil
		packagePattern: 	''
		versionPattern: 	''
		packageListUpdateProcess: 	a Process in Process>>terminate
		versionProcess: 	nil
		selectedPackageAncestors: 	nil


MCFileRepositoryInspector(MCTool)>>performButtonAction:enabled:
	Receiver: a MCFileRepositoryInspector
	Arguments and temporary variables: 
		anActionSelector: 	#saveChanges
		anEnabledSelector: 	#buttonEnabled
	Receiver's instance variables: 
		dependents: 	a DependentsArray(a SystemWindow(253500672) a PluggableButtonMorph(...etc...
		announceur: 	an Announcer
		morph: 	a SystemWindow(253500672)
		label: 	nil
		modal: 	false
		modalValue: 	nil
		version: 	nil
		repository: 	a MCDirectoryRepository(C:\Projects\PSPP-P\P06_Smalltalk\Pharo6\Res...etc...
		versions: 	#()
		loaded: 	a Set('Zinc-HTTP-TheIntegrator.461' 'TxTextTests-Model-SeanDeNigris.29'...etc...
		loadedPackages: 	a Set()
		newer: 	a Set()
		packageList: 	#()
		selectedPackage: 	nil
		selectedVersion: 	nil
		order: 	5
		versionInfo: 	nil
		packagePattern: 	''
		versionPattern: 	''
		packageListUpdateProcess: 	a Process in Process>>terminate
		versionProcess: 	nil
		selectedPackageAncestors: 	nil


PluggableButtonMorph>>performAction:
	Receiver: a PluggableButtonMorph(865039872)
	Arguments and temporary variables: 
		event: 	[(507@649) mouseUp 203759671 nil]
	Receiver's instance variables: 
		bounds: 	(490.0@629.0) corner: (544.0@655.0)
		owner: 	a PanelMorph(524439552)
		submorphs: 	an Array(an AlignmentMorph(262176256))
		fullBounds: 	nil
		color: 	(Color r: 0.29 g: 0.28800000000000003 b: 0.28800000000000003 alpha: 1.0)...etc...
		extension: 	a MorphExtension (261055232) [balloonText]  [other:  (mouseEntered -...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MCFileRepositoryInspector
		label: 	'Save'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#buttonState
		actionSelector: 	#performButtonAction:enabled:
		font: 	nil
		getLabelSelector: 	nil
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#(#saveChanges #buttonEnabled)
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		gradientLook: 	false
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	#buttonEnabled
		getFontSelector: 	nil
		lastColor: 	nil
		labelMorph: 	a LabelMorph(547478528)'Save'
		iconMorph: 	nil
		iconPosition: 	#left
		lastState: 	false


[ :m | 
(m containsPoint: evt cursorPoint)
	ifTrue: [ m enabled
			ifTrue: [ m performAction: evt ] ] ] in PluggableButtonMorph>>mouseUp:
	Receiver: a PluggableButtonMorph(865039872)
	Arguments and temporary variables: 
		evt: 	[(507@649) mouseUp 203759671 nil]
		all: 	an Array(a PluggableButtonMorph(467828992) a PluggableButtonMorph(86503987...etc...
		m: 	a PluggableButtonMorph(865039872)
	Receiver's instance variables: 
		bounds: 	(490.0@629.0) corner: (544.0@655.0)
		owner: 	a PanelMorph(524439552)
		submorphs: 	an Array(an AlignmentMorph(262176256))
		fullBounds: 	nil
		color: 	(Color r: 0.29 g: 0.28800000000000003 b: 0.28800000000000003 alpha: 1.0)...etc...
		extension: 	a MorphExtension (261055232) [balloonText]  [other:  (mouseEntered -...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MCFileRepositoryInspector
		label: 	'Save'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#buttonState
		actionSelector: 	#performButtonAction:enabled:
		font: 	nil
		getLabelSelector: 	nil
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#(#saveChanges #buttonEnabled)
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		gradientLook: 	false
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	#buttonEnabled
		getFontSelector: 	nil
		lastColor: 	nil
		labelMorph: 	a LabelMorph(547478528)'Save'
		iconMorph: 	nil
		iconPosition: 	#left
		lastState: 	false


Array(SequenceableCollection)>>do:
	Receiver: an Array(a PluggableButtonMorph(467828992) a PluggableButtonMorph(865039872) a PluggableBu...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :m | 
(m containsPoint: evt cursorPoint)
	ifTrue: [ m enabled
			ifTr...etc...
		index: 	2
	Receiver's instance variables: 
an Array(a PluggableButtonMorph(467828992) a PluggableButtonMorph(865039872) a PluggableBu...etc...

PluggableButtonMorph>>mouseUp:
	Receiver: a PluggableButtonMorph(865039872)
	Arguments and temporary variables: 
		evt: 	[(507@649) mouseUp 203759671 nil]
		all: 	an Array(a PluggableButtonMorph(467828992) a PluggableButtonMorph(86503987...etc...
	Receiver's instance variables: 
		bounds: 	(490.0@629.0) corner: (544.0@655.0)
		owner: 	a PanelMorph(524439552)
		submorphs: 	an Array(an AlignmentMorph(262176256))
		fullBounds: 	nil
		color: 	(Color r: 0.29 g: 0.28800000000000003 b: 0.28800000000000003 alpha: 1.0)...etc...
		extension: 	a MorphExtension (261055232) [balloonText]  [other:  (mouseEntered -...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MCFileRepositoryInspector
		label: 	'Save'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#buttonState
		actionSelector: 	#performButtonAction:enabled:
		font: 	nil
		getLabelSelector: 	nil
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#(#saveChanges #buttonEnabled)
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		gradientLook: 	false
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	#buttonEnabled
		getFontSelector: 	nil
		lastColor: 	nil
		labelMorph: 	a LabelMorph(547478528)'Save'
		iconMorph: 	nil
		iconPosition: 	#left
		lastState: 	false


PluggableButtonMorph(Morph)>>handleMouseUp:
	Receiver: a PluggableButtonMorph(865039872)
	Arguments and temporary variables: 
		anEvent: 	[(507@649) mouseUp 203759671 nil]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(490.0@629.0) corner: (544.0@655.0)
		owner: 	a PanelMorph(524439552)
		submorphs: 	an Array(an AlignmentMorph(262176256))
		fullBounds: 	nil
		color: 	(Color r: 0.29 g: 0.28800000000000003 b: 0.28800000000000003 alpha: 1.0)...etc...
		extension: 	a MorphExtension (261055232) [balloonText]  [other:  (mouseEntered -...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MCFileRepositoryInspector
		label: 	'Save'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#buttonState
		actionSelector: 	#performButtonAction:enabled:
		font: 	nil
		getLabelSelector: 	nil
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#(#saveChanges #buttonEnabled)
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		gradientLook: 	false
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	#buttonEnabled
		getFontSelector: 	nil
		lastColor: 	nil
		labelMorph: 	a LabelMorph(547478528)'Save'
		iconMorph: 	nil
		iconPosition: 	#left
		lastState: 	false


MouseButtonEvent>>sentTo:
	Receiver: [(507@649) mouseUp 203759671 nil]
	Arguments and temporary variables: 
		anObject: 	a PluggableButtonMorph(865039872)
	Receiver's instance variables: 
		timeStamp: 	203759671
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(507@649)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


PluggableButtonMorph(Morph)>>handleEvent:
	Receiver: a PluggableButtonMorph(865039872)
	Arguments and temporary variables: 
		anEvent: 	[(507@649) mouseUp 203759671 nil]
	Receiver's instance variables: 
		bounds: 	(490.0@629.0) corner: (544.0@655.0)
		owner: 	a PanelMorph(524439552)
		submorphs: 	an Array(an AlignmentMorph(262176256))
		fullBounds: 	nil
		color: 	(Color r: 0.29 g: 0.28800000000000003 b: 0.28800000000000003 alpha: 1.0)...etc...
		extension: 	a MorphExtension (261055232) [balloonText]  [other:  (mouseEntered -...etc...
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a MCFileRepositoryInspector
		label: 	'Save'
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	#buttonState
		actionSelector: 	#performButtonAction:enabled:
		font: 	nil
		getLabelSelector: 	nil
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#(#saveChanges #buttonEnabled)
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		gradientLook: 	false
		enabled:THERE_BE_DRAGONS_HERE
#new was sent to nil
27 October 2019 9:58:04.523295 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60524]

UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'm := CanvasMorph3 new.
m openInWindowLabeled: ''Hallo''.

m dr...etc...
		itsSelection: 	a Text for 'm := CanvasMorph3 new.
m openInWindowLabeled: ''Hallo...etc...
		itsSelectionString: 	'm := CanvasMorph3 new.
m openInWindowLabeled: ''Hallo''.

...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	m := CanvasMorph3 new.
	m openInWindowLabeled: 'Hallo'.
	m
		drawBlo...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(210395904)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(210395904)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(729305344)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(210395904)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (811@278)
		owner: 	a TransformWithLayoutMorph(293476608)
		submorphs: 	an Array(a RubCursor(443276544) a RubPrimarySelectionMorph(837323776...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (417025280) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(843746560)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(443276544)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(630995712))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(729305344)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(392778496))(a DropList...etc...
		lastStepTime: 	93695
		lastStepMessage: 	nil
		lastCycleTime: 	93717
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(443276544)))
		lastAlarmTime: 	93695
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1808@1137)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(337772288) a GL...etc...
		fullBounds: 	(0@0) corner: (1808@1137)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(392778496))(a DropList...etc...
		lastStepTime: 	93695
		lastStepMessage: 	nil
		lastCycleTime: 	93717
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(443276544)))
		lastAlarmTime: 	93695
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1808@1137)
		canvas: 	a FormCanvas on: DisplayScreen(1808x1137x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(392778496))(a DropList...etc...
		lastStepTime: 	93695
		lastStepMessage: 	nil
		lastCycleTime: 	93717
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(443276544)))
		lastAlarmTime: 	93695
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1808@1137)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(337772288) a GL...etc...
		fullBounds: 	(0@0) corner: (1808@1137)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (152552192) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	Transcript


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

